                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri Oct 20 23:25:14 2017
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc184990
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _updateTimers
                             13 	.globl _randomBkgTiles
                             14 	.globl _lt
                             15 	.globl _ls
                             16 	.globl _ly
                             17 	.globl _lx
                             18 	.globl _currentLaserID
                             19 	.globl _et
                             20 	.globl _es
                             21 	.globl _ey
                             22 	.globl _ex
                             23 	.globl _currentID
                             24 	.globl _health
                             25 	.globl _lastTimeShot
                             26 	.globl _y
                             27 	.globl _x
                             28 	.globl _game_over
                             29 	.globl _score
                             30 	.globl _frames
                             31 	.globl _start_pressed
                             32 	.globl _lastKeys
                             33 	.globl _joy_status
                             34 	.globl _ibm_font
                             35 	.globl _myBkgData
                             36 	.globl _tilemap
                             37 	.globl _tiledata
                             38 	.globl _laser
                             39 	.globl _explosion
                             40 	.globl _enemy
                             41 	.globl _ship
                             42 	.globl _setup
                             43 	.globl _initTitleScreen
                             44 	.globl _updateTitleScreen
                             45 	.globl _initGame
                             46 	.globl _updatePlayer
                             47 	.globl _getEnemySpriteIndex
                             48 	.globl _getEnemySpriteIndexFast
                             49 	.globl _getLaserSpriteIndexFast
                             50 	.globl _updateEnemies
                             51 	.globl _updateLaser
                             52 	.globl _updateHUD
                             53 	.globl _shoot
                             54 	.globl _overlap
                             55 	.globl _destroy
                             56 	.globl _killEnemy
                             57 	.globl _hurtPlayer
                             58 	.globl _shootSound
                             59 	.globl _explosionSound
                             60 	.globl _startSound
                             61 	.globl _generateNewXPosition
                             62 ;--------------------------------------------------------
                             63 ; special function registers
                             64 ;--------------------------------------------------------
                             65 ;--------------------------------------------------------
                             66 ; special function bits 
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ; internal ram data
                             70 ;--------------------------------------------------------
                             71 	.area _DATA
   0000                      72 _ship::
   0000                      73 	.ds 64
   0040                      74 _enemy::
   0040                      75 	.ds 64
   0080                      76 _explosion::
   0080                      77 	.ds 64
   00C0                      78 _laser::
   00C0                      79 	.ds 64
   0100                      80 _tiledata::
   0100                      81 	.ds 1024
   0500                      82 _tilemap::
   0500                      83 	.ds 360
   0668                      84 _myBkgData::
   0668                      85 	.ds 80
   06B8                      86 _ibm_font::
   06B8                      87 	.ds 2
   06BA                      88 _joy_status::
   06BA                      89 	.ds 1
   06BB                      90 _lastKeys::
   06BB                      91 	.ds 1
   06BC                      92 _start_pressed::
   06BC                      93 	.ds 1
   06BD                      94 _frames::
   06BD                      95 	.ds 1
   06BE                      96 _score::
   06BE                      97 	.ds 1
   06BF                      98 _game_over::
   06BF                      99 	.ds 1
   06C0                     100 _x::
   06C0                     101 	.ds 1
   06C1                     102 _y::
   06C1                     103 	.ds 1
   06C2                     104 _lastTimeShot::
   06C2                     105 	.ds 1
   06C3                     106 _health::
   06C3                     107 	.ds 1
   06C4                     108 _currentID::
   06C4                     109 	.ds 1
   06C5                     110 _ex::
   06C5                     111 	.ds 7
   06CC                     112 _ey::
   06CC                     113 	.ds 7
   06D3                     114 _es::
   06D3                     115 	.ds 7
   06DA                     116 _et::
   06DA                     117 	.ds 7
   06E1                     118 _currentLaserID::
   06E1                     119 	.ds 1
   06E2                     120 _lx::
   06E2                     121 	.ds 10
   06EC                     122 _ly::
   06EC                     123 	.ds 10
   06F6                     124 _ls::
   06F6                     125 	.ds 10
   0700                     126 _lt::
   0700                     127 	.ds 10
   070A                     128 _randomBkgTiles::
   070A                     129 	.ds 20
                            130 ;--------------------------------------------------------
                            131 ; overlayable items in internal ram 
                            132 ;--------------------------------------------------------
                            133 	.area _OVERLAY
                            134 ;--------------------------------------------------------
                            135 ; indirectly addressable internal ram data
                            136 ;--------------------------------------------------------
                            137 	.area _ISEG
                            138 ;--------------------------------------------------------
                            139 ; bit data
                            140 ;--------------------------------------------------------
                            141 	.area _BSEG
                            142 ;--------------------------------------------------------
                            143 ; external ram data
                            144 ;--------------------------------------------------------
                            145 	.area _XSEG
                            146 ;--------------------------------------------------------
                            147 ; global & static initialisations
                            148 ;--------------------------------------------------------
                            149 	.area _GSINIT
                            150 	.area _GSFINAL
                            151 	.area _GSINIT
                            152 ;	ld.c 26
                            153 ;	ld.c 647
                            154 ;	genArrayInit
                            155 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            156 	ld	hl,#_ship
   0003 CD 00 00            157 	call	__initrleblock
   0006 08                  158 	.db	8
   0007 00 00 00 00 01 01   159 	.db	0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02
        02 02
   000F F8 0A               160 	.db	-8,0x0A
   0011 30                  161 	.db	48
   0012 0C 0D 0C 0D 3C 3D   162 	.db	0x0C, 0x0D, 0x0C, 0x0D, 0x3C, 0x3D, 0x4C, 0x44
        4C 44
   001A 5D 45 7D 7D 03 1E   163 	.db	0x5D, 0x45, 0x7D, 0x7D, 0x03, 0x1E, 0x00, 0x01
        00 01
   0022 00 00 00 00 80 80   164 	.db	0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0x40
        C0 40
   002A D0 50 D0 50 D0 50   165 	.db	0xD0, 0x50, 0xD0, 0x50, 0xD0, 0x50, 0xD0, 0x50
        D0 50
   0032 70 B0 70 B0 7C BC   166 	.db	0x70, 0xB0, 0x70, 0xB0, 0x7C, 0xBC, 0x62, 0x32
        62 32
   003A E2 BA FE BE C0 78   167 	.db	0xE2, 0xBA, 0xFE, 0xBE, 0xC0, 0x78, 0x00, 0x80
        00 80
   0042 00                  168 	.db	0
                            169 ;	ld.c 26
                            170 ;	ld.c 647
                            171 ;	genArrayInit
                            172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0043 21 40 00            173 	ld	hl,#_enemy
   0046 CD 00 00            174 	call	__initrleblock
   0049 40                  175 	.db	64
   004A 00 00 00 00 10 10   176 	.db	0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x29, 0x29
        29 29
   0052 46 47 4E 43 9F 83   177 	.db	0x46, 0x47, 0x4E, 0x43, 0x9F, 0x83, 0x9F, 0x80
        9F 80
   005A 9F 81 9F 82 9F 82   178 	.db	0x9F, 0x81, 0x9F, 0x82, 0x9F, 0x82, 0x4F, 0x42
        4F 42
   0062 4F 41 23 20 19 18   179 	.db	0x4F, 0x41, 0x23, 0x20, 0x19, 0x18, 0x07, 0x07
        07 07
   006A 00 00 00 00 08 08   180 	.db	0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x94, 0x9C
        94 9C
   0072 62 FE 72 CE F9 C7   181 	.db	0x62, 0xFE, 0x72, 0xCE, 0xF9, 0xC7, 0xF9, 0x07
        F9 07
   007A F9 87 79 C7 79 C7   182 	.db	0xF9, 0x87, 0x79, 0xC7, 0x79, 0xC7, 0x72, 0xCE
        72 CE
   0082 F2 8E C4 3C 98 78   183 	.db	0xF2, 0x8E, 0xC4, 0x3C, 0x98, 0x78, 0xE0, 0xE0
        E0 E0
   008A 00                  184 	.db	0
                            185 ;	ld.c 26
                            186 ;	ld.c 647
                            187 ;	genArrayInit
                            188 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008B 21 80 00            189 	ld	hl,#_explosion
   008E CD 00 00            190 	call	__initrleblock
   0091 40                  191 	.db	64
   0092 01 01 05 05 00 00   192 	.db	0x01, 0x01, 0x05, 0x05, 0x00, 0x00, 0x11, 0x11
        11 11
   009A 00 00 44 44 01 01   193 	.db	0x00, 0x00, 0x44, 0x44, 0x01, 0x01, 0xB2, 0xB2
        B2 B2
   00A2 B2 B2 01 01 44 44   194 	.db	0xB2, 0xB2, 0x01, 0x01, 0x44, 0x44, 0x00, 0x00
        00 00
   00AA 11 11 00 00 05 05   195 	.db	0x11, 0x11, 0x00, 0x00, 0x05, 0x05, 0x01, 0x01
        01 01
   00B2 80 80 A0 A0 00 00   196 	.db	0x80, 0x80, 0xA0, 0xA0, 0x00, 0x00, 0x88, 0x88
        88 88
   00BA 00 00 22 22 80 80   197 	.db	0x00, 0x00, 0x22, 0x22, 0x80, 0x80, 0x4D, 0x4D
        4D 4D
   00C2 4D 4D 80 80 22 22   198 	.db	0x4D, 0x4D, 0x80, 0x80, 0x22, 0x22, 0x00, 0x00
        00 00
   00CA 88 88 00 00 A0 A0   199 	.db	0x88, 0x88, 0x00, 0x00, 0xA0, 0xA0, 0x80, 0x80
        80 80
   00D2 00                  200 	.db	0
                            201 ;	ld.c 26
                            202 ;	ld.c 647
                            203 ;	genArrayInit
                            204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D3 21 C0 00            205 	ld	hl,#_laser
   00D6 CD 00 00            206 	call	__initrleblock
   00D9 1D                  207 	.db	29
   00DA 00 00 08 00 00 08   208 	.db	0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x10, 0x04
        10 04
   00E2 18 04 18 04 18 04   209 	.db	0x18, 0x04, 0x18, 0x04, 0x18, 0x04, 0x18, 0x04
        18 04
   00EA 18 04 00 1C 00 08   210 	.db	0x18, 0x04, 0x00, 0x1C, 0x00, 0x08, 0x00, 0x08
        00 08
   00F2 08 00 08 00 08      211 	.db	0x08, 0x00, 0x08, 0x00, 0x08
   00F7 FB 00               212 	.db	-5,0x00
   00F9 1E                  213 	.db	30
   00FA 10 00 00 10 20 08   214 	.db	0x10, 0x00, 0x00, 0x10, 0x20, 0x08, 0x30, 0x08
        30 08
   0102 30 08 30 08 30 08   215 	.db	0x30, 0x08, 0x30, 0x08, 0x30, 0x08, 0x30, 0x08
        30 08
   010A 00 38 00 10 00 10   216 	.db	0x00, 0x38, 0x00, 0x10, 0x00, 0x10, 0x10, 0x00
        10 00
   0112 10 00 10 00 00 00   217 	.db	0x10, 0x00, 0x10, 0x00, 0x00, 0x00
   0118 00                  218 	.db	0
                            219 ;	ld.c 11
                            220 ;	ld.c 647
                            221 ;	genArrayInit
                            222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0119 21 00 01            223 	ld	hl,#_tiledata
   011C CD 00 00            224 	call	__initrleblock
   011F EA 00               225 	.db	-22,0x00
   0121 0A                  226 	.db	10
   0122 07 07 07 07 03 03   227 	.db	0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03
        03 03
   012A 01 01               228 	.db	0x01, 0x01
   012C FA 00               229 	.db	-6,0x00
   012E 0A                  230 	.db	10
   012F FF FF FF FF 80 80   231 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80
        80 80
   0137 40 40               232 	.db	0x40, 0x40
   0139 FA 00               233 	.db	-6,0x00
   013B 04                  234 	.db	4
   013C FF FF FF FF         235 	.db	0xFF, 0xFF, 0xFF, 0xFF
   0140 F4 00               236 	.db	-12,0x00
   0142 0A                  237 	.db	10
   0143 FF FF FF FF 00 00   238 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x07, 0x07
        07 07
   014B 0E 0F               239 	.db	0x0E, 0x0F
   014D FA 00               240 	.db	-6,0x00
   014F 0A                  241 	.db	10
   0150 ED F0 DB E0 00 00   242 	.db	0xED, 0xF0, 0xDB, 0xE0, 0x00, 0x00, 0x66, 0x81
        66 81
   0158 CD 03               243 	.db	0xCD, 0x03
   015A FA 00               244 	.db	-6,0x00
   015C 0A                  245 	.db	10
   015D DF 3F BF 7F 00 00   246 	.db	0xDF, 0x3F, 0xBF, 0x7F, 0x00, 0x00, 0xF0, 0xF0
        F0 F0
   0165 F8 F8               247 	.db	0xF8, 0xF8
   0167 FA 00               248 	.db	-6,0x00
   0169 0A                  249 	.db	10
   016A FF FF FF FF 00 00   250 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x03, 0x03
        03 03
   0172 07 07               251 	.db	0x07, 0x07
   0174 FA 00               252 	.db	-6,0x00
   0176 0A                  253 	.db	10
   0177 FD FF FB FF 00 00   254 	.db	0xFD, 0xFF, 0xFB, 0xFF, 0x00, 0x00, 0x80, 0x80
        80 80
   017F 80 80               255 	.db	0x80, 0x80
   0181 FA 00               256 	.db	-6,0x00
   0183 0A                  257 	.db	10
   0184 FF FF FF FF 00 00   258 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x01
        01 01
   018C 01 01               259 	.db	0x01, 0x01
   018E FA 00               260 	.db	-6,0x00
   0190 0A                  261 	.db	10
   0191 FF FF FF FF 00 00   262 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xF8, 0xF8
        F8 F8
   0199 F8 F8               263 	.db	0xF8, 0xF8
   019B FA 00               264 	.db	-6,0x00
   019D 0A                  265 	.db	10
   019E FA FC F5 F8 00 00   266 	.db	0xFA, 0xFC, 0xF5, 0xF8, 0x00, 0x00, 0x16, 0x01
        16 01
   01A6 2D 03               267 	.db	0x2D, 0x03
   01A8 FA 00               268 	.db	-6,0x00
   01AA 0A                  269 	.db	10
   01AB DF 3F BF 7F 00 00   270 	.db	0xDF, 0x3F, 0xBF, 0x7F, 0x00, 0x00, 0xFF, 0xFF
        FF FF
   01B3 FF FF               271 	.db	0xFF, 0xFF
   01B5 FA 00               272 	.db	-6,0x00
   01B7 0A                  273 	.db	10
   01B8 FF FF FF FF 00 00   274 	.db	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0xF0
        F0 F0
   01C0 F0 F0               275 	.db	0xF0, 0xF0
   01C2 FA 00               276 	.db	-6,0x00
   01C4 04                  277 	.db	4
   01C5 BF FF 7F FF         278 	.db	0xBF, 0xFF, 0x7F, 0xFF
   01C9 F4 00               279 	.db	-12,0x00
   01CB 30                  280 	.db	48
   01CC FE FE FE FE 1C 1C   281 	.db	0xFE, 0xFE, 0xFE, 0xFE, 0x1C, 0x1C, 0x1C, 0x1C
        1C 1C
   01D4 28 28 E0 E0 E0 E0   282 	.db	0x28, 0x28, 0xE0, 0xE0, 0xE0, 0xE0, 0x50, 0x50
        50 50
   01DC 38 38 38 38 14 14   283 	.db	0x38, 0x38, 0x38, 0x38, 0x14, 0x14, 0x0E, 0x0E
        0E 0E
   01E4 0E 0E 1D 1E 3B 3C   284 	.db	0x0E, 0x0E, 0x1D, 0x1E, 0x3B, 0x3C, 0x36, 0x38
        36 38
   01EC 2C 30 18 20 32 00   285 	.db	0x2C, 0x30, 0x18, 0x20, 0x32, 0x00, 0x26, 0x00
        26 00
   01F4 0C 02 9B 07 37 0F   286 	.db	0x0C, 0x02, 0x9B, 0x07, 0x37, 0x0F, 0x6F, 0x1F
        6F 1F
   01FC F6 00               287 	.db	-10,0x00
   01FE 06                  288 	.db	6
   01FF FC FC FE FE FF FF   289 	.db	0xFC, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF
   0205 F6 3F               290 	.db	-10,0x3F
   0207 14                  291 	.db	20
   0208 0F 0F 1F 1F 1E 1F   292 	.db	0x0F, 0x0F, 0x1F, 0x1F, 0x1E, 0x1F, 0x1D, 0x1F
        1D 1F
   0210 1B 1F 17 1F 0F 1F   293 	.db	0x1B, 0x1F, 0x17, 0x1F, 0x0F, 0x1F, 0x1F, 0x1F
        1F 1F
   0218 80 C0 40 C0         294 	.db	0x80, 0xC0, 0x40, 0xC0
   021C FA E0               295 	.db	-6,0xE0
   021E 0A                  296 	.db	10
   021F F0 F0 F0 F0 F8 F8   297 	.db	0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0x03, 0x03
        03 03
   0227 03 03               298 	.db	0x03, 0x03
   0229 FA 07               299 	.db	-6,0x07
   022B 06                  300 	.db	6
   022C 0F 0F 0F 0F 1F 1F   301 	.db	0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F
   0232 F8 F8               302 	.db	-8,0xF8
   0234 13                  303 	.db	19
   0235 F0 F8 E8 F0 D0 E0   304 	.db	0xF0, 0xF8, 0xE8, 0xF0, 0xD0, 0xE0, 0xA8, 0xC0
        A8 C0
   023D 5B 07 B7 0F 6F 1F   305 	.db	0x5B, 0x07, 0xB7, 0x0F, 0x6F, 0x1F, 0xD8, 0x38
        D8 38
   0245 B8 78 78            306 	.db	0xB8, 0x78, 0x78
   0248 FB F8               307 	.db	-5,0xF8
   024A FA FF               308 	.db	-6,0xFF
   024C F6 00               309 	.db	-10,0x00
   024E FA F0               310 	.db	-6,0xF0
   0250 F0 00               311 	.db	-16,0x00
   0252 22                  312 	.db	34
   0253 01 01 01 01 02 02   313 	.db	0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x07, 0x07
        07 07
   025B 07 07 70 70 70 70   314 	.db	0x07, 0x07, 0x70, 0x70, 0x70, 0x70, 0xA0, 0xA0
        A0 A0
   0263 C0 C0 C0 C0 80 80   315 	.db	0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00
        00 00
   026B 00 00 05 05 03 03   316 	.db	0x00, 0x00, 0x05, 0x05, 0x03, 0x03, 0x03, 0x03
        03 03
   0273 01 01               317 	.db	0x01, 0x01
   0275 F6 00               318 	.db	-10,0x00
   0277 15                  319 	.db	21
   0278 80 80 80 80 40 40   320 	.db	0x80, 0x80, 0x80, 0x80, 0x40, 0x40, 0xE0, 0xE0
        E0 E0
   0280 E0 E0 50 50 38 38   321 	.db	0xE0, 0xE0, 0x50, 0x50, 0x38, 0x38, 0x1A, 0x06
        1A 06
   0288 36 0E 2E 1E 1E      322 	.db	0x36, 0x0E, 0x2E, 0x1E, 0x1E
   028D F7 3E               323 	.db	-9,0x3E
   028F 10                  324 	.db	16
   0290 3F 3F 3F 3F 3E 3F   325 	.db	0x3F, 0x3F, 0x3F, 0x3F, 0x3E, 0x3F, 0x3D, 0x3F
        3D 3F
   0298 3B 3F 37 3F 2F 3F   326 	.db	0x3B, 0x3F, 0x37, 0x3F, 0x2F, 0x3F, 0x1F, 0x3F
        1F 3F
   02A0 F0 1F               327 	.db	-16,0x1F
   02A2 2B                  328 	.db	43
   02A3 F8 F8 B8 B8 BC BC   329 	.db	0xF8, 0xF8, 0xB8, 0xB8, 0xBC, 0xBC, 0x9C, 0x9C
        9C 9C
   02AB 9C 9C 8E 8E 8E 8E   330 	.db	0x9C, 0x9C, 0x8E, 0x8E, 0x8E, 0x8E, 0x8F, 0x8F
        8F 8F
   02B3 1F 1F 1C 1D 3D 3C   331 	.db	0x1F, 0x1F, 0x1C, 0x1D, 0x3D, 0x3C, 0x38, 0x38
        38 38
   02BB 31 38 61 70 50 61   332 	.db	0x31, 0x38, 0x61, 0x70, 0x50, 0x61, 0xA1, 0xC1
        A1 C1
   02C3 58 80 B0 08 68 18   333 	.db	0x58, 0x80, 0xB0, 0x08, 0x68, 0x18, 0xD8, 0x38
        D8 38
   02CB B8 78 78            334 	.db	0xB8, 0x78, 0x78
   02CE EB F8               335 	.db	-21,0xF8
   02D0 F8 00               336 	.db	-8,0x00
   02D2 08                  337 	.db	8
   02D3 07 07 07 07 06 07   338 	.db	0x07, 0x07, 0x07, 0x07, 0x06, 0x07, 0x05, 0x07
        05 07
   02DB F8 00               339 	.db	-8,0x00
   02DD 03                  340 	.db	3
   02DE BC FC 7C            341 	.db	0xBC, 0xFC, 0x7C
   02E1 FB FC               342 	.db	-5,0xFC
   02E3 F2 00               343 	.db	-14,0x00
   02E5 22                  344 	.db	34
   02E6 01 01 0A 0A 1C 1C   345 	.db	0x01, 0x01, 0x0A, 0x0A, 0x1C, 0x1C, 0x1C, 0x1C
        1C 1C
   02EE 28 28 70 70 70 70   346 	.db	0x28, 0x28, 0x70, 0x70, 0x70, 0x70, 0xA0, 0xA0
        A0 A0
   02F6 C0 C0 38 38 10 14   347 	.db	0xC0, 0xC0, 0x38, 0x38, 0x10, 0x14, 0x06, 0x0E
        06 0E
   02FE 0E 0E 05 05 03 03   348 	.db	0x0E, 0x0E, 0x05, 0x05, 0x03, 0x03, 0x02, 0x03
        02 03
   0306 01 01               349 	.db	0x01, 0x01
   0308 F5 00               350 	.db	-11,0x00
   030A 09                  351 	.db	9
   030B 80 80 80 FF FF 3E   352 	.db	0x80, 0x80, 0x80, 0xFF, 0xFF, 0x3E, 0x3E, 0x3E
        3E 3E
   0313 3E                  353 	.db	0x3E
   0314 F8 3F               354 	.db	-8,0x3F
   0316 24                  355 	.db	36
   0317 00 00 FF FF 00 00   356 	.db	0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
        00 00
   031F FE FF FD FF FB FF   357 	.db	0xFE, 0xFF, 0xFD, 0xFF, 0xFB, 0xFF, 0xF7, 0xFF
        F7 FF
   0327 00 00 DF FF 3F 3F   358 	.db	0x00, 0x00, 0xDF, 0xFF, 0x3F, 0x3F, 0x3F, 0x3F
        3F 3F
   032F FF FF FE FE FC FC   359 	.db	0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF8
        F8 F8
   0337 00 00 FF FF         360 	.db	0x00, 0x00, 0xFF, 0xFF
   033B F4 1F               361 	.db	-12,0x1F
   033D 24                  362 	.db	36
   033E 00 00 FF FF 87 87   363 	.db	0x00, 0x00, 0xFF, 0xFF, 0x87, 0x87, 0x86, 0x87
        86 87
   0346 81 82 82 80 81 80   364 	.db	0x81, 0x82, 0x82, 0x80, 0x81, 0x80, 0x80, 0x80
        80 80
   034E 00 00 FD FF 41 81   365 	.db	0x00, 0x00, 0xFD, 0xFF, 0x41, 0x81, 0xA1, 0x01
        A1 01
   0356 41 01 C1 01 81 01   366 	.db	0x41, 0x01, 0xC1, 0x01, 0x81, 0x01, 0x01, 0x01
        01 01
   035E 00 00 FF FF         367 	.db	0x00, 0x00, 0xFF, 0xFF
   0362 F4 F8               368 	.db	-12,0xF8
   0364 08                  369 	.db	8
   0365 00 00 FF FF F8 F8   370 	.db	0x00, 0x00, 0xFF, 0xFF, 0xF8, 0xF8, 0xF8, 0xF8
        F8 F8
   036D F8 FF               371 	.db	-8,0xFF
   036F 14                  372 	.db	20
   0370 00 00 FD FF 00 00   373 	.db	0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x00
        00 00
   0378 EF FF DF FF BF FF   374 	.db	0xEF, 0xFF, 0xDF, 0xFF, 0xBF, 0xFF, 0x7F, 0xFF
        7F FF
   0380 00 00 FF FF         375 	.db	0x00, 0x00, 0xFF, 0xFF
   0384 F8 FC               376 	.db	-8,0xFC
   0386 08                  377 	.db	8
   0387 F8 F8 F0 F0 00 00   378 	.db	0xF8, 0xF8, 0xF0, 0xF0, 0x00, 0x00, 0xFF, 0xFF
        FF FF
   038F F2 00               379 	.db	-14,0x00
   0391 16                  380 	.db	22
   0392 FF FF 01 01 02 02   381 	.db	0xFF, 0xFF, 0x01, 0x01, 0x02, 0x02, 0x07, 0x07
        07 07
   039A 07 07 0A 0A 1C 1C   382 	.db	0x07, 0x07, 0x0A, 0x0A, 0x1C, 0x1C, 0x1C, 0x1C
        1C 1C
   03A2 FC FC C0 C0 80 80   383 	.db	0xFC, 0xFC, 0xC0, 0xC0, 0x80, 0x80
   03A8 F4 00               384 	.db	-12,0x00
   03AA 02                  385 	.db	2
   03AB 01 01               386 	.db	0x01, 0x01
   03AD F2 00               387 	.db	-14,0x00
   03AF 02                  388 	.db	2
   03B0 FF FF               389 	.db	0xFF, 0xFF
   03B2 F2 00               390 	.db	-14,0x00
   03B4 02                  391 	.db	2
   03B5 BF FF               392 	.db	0xBF, 0xFF
   03B7 F2 00               393 	.db	-14,0x00
   03B9 02                  394 	.db	2
   03BA FB FF               395 	.db	0xFB, 0xFF
   03BC F2 00               396 	.db	-14,0x00
   03BE 02                  397 	.db	2
   03BF FC FC               398 	.db	0xFC, 0xFC
   03C1 F2 00               399 	.db	-14,0x00
   03C3 02                  400 	.db	2
   03C4 0F 0F               401 	.db	0x0F, 0x0F
   03C6 F8 03               402 	.db	-8,0x03
   03C8 FA 00               403 	.db	-6,0x00
   03CA 0A                  404 	.db	10
   03CB D1 D1 1B 1B 15 15   405 	.db	0xD1, 0xD1, 0x1B, 0x1B, 0x15, 0x15, 0x11, 0x11
        11 11
   03D3 11 11               406 	.db	0x11, 0x11
   03D5 FA 00               407 	.db	-6,0x00
   03D7 00                  408 	.db	0
                            409 ;	ld.c 11
                            410 ;	ld.c 647
                            411 ;	genArrayInit
                            412 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D8 21 00 05            413 	ld	hl,#_tilemap
   03DB CD 00 00            414 	call	__initrleblock
   03DE AF 00               415 	.db	-81,0x00
   03E0 39                  416 	.db	57
   03E1 01 02 03 03 04 05   417 	.db	0x01, 0x02, 0x03, 0x03, 0x04, 0x05, 0x06, 0x07
        06 07
   03E9 08 09 0A 0B 0C 0D   418 	.db	0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x03, 0x0E
        03 0E
   03F1 03 0F 00 00 00 10   419 	.db	0x03, 0x0F, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00
        00 00
   03F9 11 12 13 14 15 16   420 	.db	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18
        17 18
   0401 19 1A 00 00 1B 1C   421 	.db	0x19, 0x1A, 0x00, 0x00, 0x1B, 0x1C, 0x00, 0x00
        00 00
   0409 00 1D 1E 00 1F 00   422 	.db	0x00, 0x1D, 0x1E, 0x00, 0x1F, 0x00, 0x20, 0x21
        20 21
   0411 22 23 24 25 26 27   423 	.db	0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x00, 0x28
        00 28
   0419 29                  424 	.db	0x29
   041A FB 00               425 	.db	-5,0x00
   041C 0F                  426 	.db	15
   041D 2A 2B 2C 2D 2E 2F   427 	.db	0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31
        30 31
   0425 32 33 34 35 36 37   428 	.db	0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38
        38
   042C FB 00               429 	.db	-5,0x00
   042E 10                  430 	.db	16
   042F 39 3A 3A 3B 3A 3A   431 	.db	0x39, 0x3A, 0x3A, 0x3B, 0x3A, 0x3A, 0x3C, 0x3A
        3C 3A
   0437 3A 3C 3A 3A 3A 3D   432 	.db	0x3A, 0x3C, 0x3A, 0x3A, 0x3A, 0x3D, 0x3E, 0x3F
        3E 3F
   043F 81 00               433 	.db	-127,0x00
   0441 CA 00               434 	.db	-54,0x00
   0443 00                  435 	.db	0
                            436 ;	ld.c 61
                            437 ;	ld.c 647
                            438 ;	genArrayInit
                            439 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0444 21 68 06            440 	ld	hl,#_myBkgData
   0447 CD 00 00            441 	call	__initrleblock
   044A EE 00               442 	.db	-18,0x00
   044C 09                  443 	.db	9
   044D 08 00 08 00 36 00   444 	.db	0x08, 0x00, 0x08, 0x00, 0x36, 0x00, 0x08, 0x00
        08 00
   0455 08                  445 	.db	0x08
   0456 F7 00               446 	.db	-9,0x00
   0458 05                  447 	.db	5
   0459 20 00 50 00 20      448 	.db	0x20, 0x00, 0x50, 0x00, 0x20
   045E EF 00               449 	.db	-17,0x00
   0460 05                  450 	.db	5
   0461 04 00 0E 00 04      451 	.db	0x04, 0x00, 0x0E, 0x00, 0x04
   0466 F7 00               452 	.db	-9,0x00
   0468 08                  453 	.db	8
   0469 50 00 20 00 50 00   454 	.db	0x50, 0x00, 0x20, 0x00, 0x50, 0x00, 0x00, 0x00
        00 00
   0471 00                  455 	.db	0
                            456 ;	ld.c 77
                            457 ;	genAssign
                            458 ;	AOP_HL for _health
   0472 21 C3 06            459 	ld	hl,#_health
   0475 36 01               460 	ld	(hl),#0x01
                            461 ;--------------------------------------------------------
                            462 ; Home
                            463 ;--------------------------------------------------------
                            464 	.area _HOME
                            465 	.area _CODE
                            466 ;--------------------------------------------------------
                            467 ; code
                            468 ;--------------------------------------------------------
                            469 	.area _CODE
                            470 ;	ld.c 119
                            471 ;	genLabel
                            472 ;	genFunction
                            473 ;	---------------------------------
                            474 ; Function setup
                            475 ; ---------------------------------
   0000                     476 ___setup_start:
   0000                     477 _setup:
   0000 E8 FD               478 	lda	sp,-3(sp)
                            479 ;	ld.c 120
                            480 ;	genAssign
   0002 01 40 FF            481 	ld	bc,#0xFF40
                            482 ;	genAssign
                            483 ;	AOP_STK for _setup_sloc0_1_0
   0005 F8 01               484 	lda	hl,1(sp)
   0007 36 40               485 	ld	(hl),#0x40
   0009 23                  486 	inc	hl
   000A 36 FF               487 	ld	(hl),#0xFF
                            488 ;	genPointerGet
                            489 ;	AOP_STK for _setup_sloc0_1_0
                            490 ;	AOP_STK for _setup_sloc1_1_0
   000C 2B                  491 	dec	hl
   000D 5E                  492 	ld	e,(hl)
   000E 23                  493 	inc	hl
   000F 56                  494 	ld	d,(hl)
   0010 1A                  495 	ld	a,(de)
   0011 2B                  496 	dec	hl
   0012 2B                  497 	dec	hl
                            498 ;	genOr
                            499 ;	AOP_STK for _setup_sloc1_1_0
   0013 77                  500 	ld      (hl),a
   0014 7F                  501 	ld      a,a
   0015 F6 80               502 	or	a,#0x80
                            503 ;	genAssign (pointer)
   0017 02                  504 	ld	(bc),a
                            505 ;	ld.c 122
                            506 ;	genCall
                            507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0018 CD 00 00            508 	call	_font_init
                            509 ;	ld.c 123
                            510 ;	genIpush
                            511 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001B 21 00 00            512 	ld	hl,#_font_ibm
   001E E5                  513 	push	hl
                            514 ;	genCall
   001F CD 00 00            515 	call	_font_load
                            516 ;	AOP_HL for _ibm_font
   0022 21 B9 06            517 	ld	hl,#_ibm_font + 1
   0025 72                  518 	ld	(hl),d
   0026 2B                  519 	dec	hl
   0027 73                  520 	ld	(hl),e
   0028 E8 02               521 	lda	sp,2(sp)
                            522 ;	genLabel
   002A                     523 00101$:
                            524 ;	genEndFunction
   002A E8 03               525 	lda	sp,3(sp)
   002C C9                  526 	ret
   002D                     527 ___setup_end:
                            528 ;	ld.c 126
                            529 ;	genLabel
                            530 ;	genFunction
                            531 ;	---------------------------------
                            532 ; Function initTitleScreen
                            533 ; ---------------------------------
   002D                     534 ___initTitleScreen_start:
   002D                     535 _initTitleScreen:
                            536 	
                            537 ;	ld.c 128
                            538 ;	genAssign
                            539 ;	AOP_HL for _start_pressed
   002D 21 BC 06            540 	ld	hl,#_start_pressed
   0030 36 00               541 	ld	(hl),#0x00
                            542 ;	ld.c 130
                            543 ;	genIpush
                            544 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0032 21 00 01            545 	ld	hl,#_tiledata
   0035 E5                  546 	push	hl
                            547 ;	genIpush
   0036 21 00 40            548 	ld	hl,#0x4000
   0039 E5                  549 	push	hl
                            550 ;	genCall
   003A CD 00 00            551 	call	_set_bkg_data
   003D E8 04               552 	lda	sp,4(sp)
                            553 ;	ld.c 131
                            554 ;	genIpush
                            555 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003F 21 00 05            556 	ld	hl,#_tilemap
   0042 E5                  557 	push	hl
                            558 ;	genIpush
   0043 21 14 12            559 	ld	hl,#0x1214
   0046 E5                  560 	push	hl
                            561 ;	genIpush
   0047 21 00 00            562 	ld	hl,#0x0000
   004A E5                  563 	push	hl
                            564 ;	genCall
   004B CD 00 00            565 	call	_set_bkg_tiles
   004E E8 06               566 	lda	sp,6(sp)
                            567 ;	ld.c 134
                            568 ;	genIpush
                            569 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0050 21 00 00            570 	ld	hl,#_font_ibm
   0053 E5                  571 	push	hl
                            572 ;	genCall
   0054 CD 00 00            573 	call	_font_load
                            574 ;	AOP_HL for _ibm_font
   0057 21 B9 06            575 	ld	hl,#_ibm_font + 1
   005A 72                  576 	ld	(hl),d
   005B 2B                  577 	dec	hl
   005C 73                  578 	ld	(hl),e
   005D E8 02               579 	lda	sp,2(sp)
                            580 ;	ld.c 136
                            581 ;	genIpush
                            582 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   005F 21 04 0C            583 	ld	hl,#0x0C04
   0062 E5                  584 	push	hl
                            585 ;	genCall
   0063 CD 00 00            586 	call	_gotoxy
   0066 E8 02               587 	lda	sp,2(sp)
                            588 ;	ld.c 137
                            589 ;	genIpush
                            590 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            591 ;	AOP_HL for _ibm_font
   0068 21 B8 06            592 	ld	hl,#_ibm_font
   006B 2A                  593 	ld	a,(hl+)
   006C 66                  594 	ld	h,(hl)
   006D 6F                  595 	ld	l,a
   006E E5                  596 	push	hl
                            597 ;	genCall
   006F CD 00 00            598 	call	_font_set
   0072 E8 02               599 	lda	sp,2(sp)
                            600 ;	ld.c 138
                            601 ;	genIpush
                            602 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0074 21 9C 00            603 	ld	hl,#__str_0
   0077 E5                  604 	push	hl
                            605 ;	genCall
   0078 CD 00 00            606 	call	_printf
   007B E8 02               607 	lda	sp,2(sp)
                            608 ;	ld.c 140
                            609 ;	genIpush
                            610 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007D 21 04 11            611 	ld	hl,#0x1104
   0080 E5                  612 	push	hl
                            613 ;	genCall
   0081 CD 00 00            614 	call	_gotoxy
   0084 E8 02               615 	lda	sp,2(sp)
                            616 ;	ld.c 141
                            617 ;	genIpush
                            618 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            619 ;	AOP_HL for _ibm_font
   0086 21 B8 06            620 	ld	hl,#_ibm_font
   0089 2A                  621 	ld	a,(hl+)
   008A 66                  622 	ld	h,(hl)
   008B 6F                  623 	ld	l,a
   008C E5                  624 	push	hl
                            625 ;	genCall
   008D CD 00 00            626 	call	_font_set
   0090 E8 02               627 	lda	sp,2(sp)
                            628 ;	ld.c 142
                            629 ;	genIpush
                            630 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0092 21 A9 00            631 	ld	hl,#__str_1
   0095 E5                  632 	push	hl
                            633 ;	genCall
   0096 CD 00 00            634 	call	_printf
   0099 E8 02               635 	lda	sp,2(sp)
                            636 ;	genLabel
   009B                     637 00101$:
                            638 ;	genEndFunction
                            639 	
   009B C9                  640 	ret
   009C                     641 ___initTitleScreen_end:
   009C                     642 __str_0:
   009C 2D 50 55 53 48 20   643 	.ascii "-PUSH START-"
        53 54 41 52 54 2D
   00A8 00                  644 	.db 0x00
   00A9                     645 __str_1:
   00A9 73 62 61 72 72 69   646 	.ascii "sbarrio 2017"
        6F 20 32 30 31 37
   00B5 00                  647 	.db 0x00
                            648 ;	ld.c 146
                            649 ;	genLabel
                            650 ;	genFunction
                            651 ;	---------------------------------
                            652 ; Function updateTitleScreen
                            653 ; ---------------------------------
   00B6                     654 ___updateTitleScreen_start:
   00B6                     655 _updateTitleScreen:
                            656 	
                            657 ;	ld.c 147
                            658 ;	genCall
                            659 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00B6 CD 00 00            660 	call	_joypad
   00B9 4B                  661 	ld	c,e
                            662 ;	genCmpEq
                            663 ; genCmpEq: left 1, right 1, result 0
   00BA 79                  664 	ld	a,c
   00BB FE 80               665 	cp	a,#0x80
   00BD C2 CA 00            666 	jp	nz,00103$
   00C0 18 03               667 	jr	00107$
   00C2                     668 00106$:
   00C2 C3 CA 00            669 	jp	00103$
   00C5                     670 00107$:
                            671 ;	ld.c 148
                            672 ;	genAssign
                            673 ;	AOP_HL for _start_pressed
   00C5 21 BC 06            674 	ld	hl,#_start_pressed
   00C8 36 01               675 	ld	(hl),#0x01
                            676 ;	genLabel
   00CA                     677 00103$:
                            678 ;	genEndFunction
                            679 	
   00CA C9                  680 	ret
   00CB                     681 ___updateTitleScreen_end:
                            682 ;	ld.c 152
                            683 ;	genLabel
                            684 ;	genFunction
                            685 ;	---------------------------------
                            686 ; Function initGame
                            687 ; ---------------------------------
   00CB                     688 ___initGame_start:
   00CB                     689 _initGame:
   00CB E8 F8               690 	lda	sp,-8(sp)
                            691 ;	ld.c 157
                            692 ;	genAssign
   00CD 01 04 FF            693 	ld	bc,#0xFF04
                            694 ;	genPointerGet
   00D0 0A                  695 	ld	a,(bc)
   00D1 4F                  696 	ld	c,a
                            697 ;	genCast
                            698 ; Removed redundent load
   00D2 06 00               699 	ld	b,#0x00
                            700 ;	genIpush
                            701 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 C5                  702 	push	bc
                            703 ;	genCall
   00D5 CD 00 00            704 	call	_initrand
   00D8 E8 02               705 	lda	sp,2(sp)
                            706 ;	ld.c 160
                            707 ;	genAssign
                            708 ;	AOP_HL for _health
   00DA 21 C3 06            709 	ld	hl,#_health
   00DD 36 01               710 	ld	(hl),#0x01
                            711 ;	ld.c 161
                            712 ;	genAssign
                            713 ;	AOP_HL for _lastTimeShot
   00DF 21 C2 06            714 	ld	hl,#_lastTimeShot
   00E2 36 00               715 	ld	(hl),#0x00
                            716 ;	ld.c 162
                            717 ;	genAssign
                            718 ;	AOP_HL for _game_over
   00E4 21 BF 06            719 	ld	hl,#_game_over
   00E7 36 00               720 	ld	(hl),#0x00
                            721 ;	ld.c 163
                            722 ;	genAssign
                            723 ;	AOP_HL for _frames
   00E9 21 BD 06            724 	ld	hl,#_frames
   00EC 36 00               725 	ld	(hl),#0x00
                            726 ;	ld.c 164
                            727 ;	genAssign
                            728 ;	AOP_HL for _score
   00EE 21 BE 06            729 	ld	hl,#_score
   00F1 36 00               730 	ld	(hl),#0x00
                            731 ;	ld.c 167
                            732 ;	genAssign
                            733 ;	AOP_STK for _initGame_i_1_1
   00F3 F8 07               734 	lda	hl,7(sp)
   00F5 36 00               735 	ld	(hl),#0x00
                            736 ;	genLabel
   00F7                     737 00104$:
                            738 ;	genCmpEq
                            739 ;	AOP_STK for _initGame_i_1_1
                            740 ; genCmpEq: left 1, right 1, result 0
   00F7 F8 07               741 	lda	hl,7(sp)
   00F9 7E                  742 	ld	a,(hl)
   00FA FE 07               743 	cp	a,#0x07
   00FC CA 5D 01            744 	jp	z,00107$
   00FF                     745 00143$:
                            746 ;	ld.c 168
                            747 ;	genPlus
                            748 ;	AOP_STK for _initGame_i_1_1
                            749 ;	AOP_STK for _initGame_sloc0_1_0
                            750 ;	Can't optimise plus by inc, falling back to the normal way
   00FF 11 C5 06            751 	ld	de,#_ex
   0102 F8 07               752 	lda	hl,7(sp)
   0104 6E                  753 	ld	l,(hl)
   0105 26 00               754 	ld	h,#0x00
   0107 19                  755 	add	hl,de
   0108 7D                  756 	ld	a,l
   0109 54                  757 	ld	d,h
   010A F8 04               758 	lda	hl,4(sp)
   010C 22                  759 	ld	(hl+),a
   010D 72                  760 	ld	(hl),d
                            761 ;	genAssign (pointer)
                            762 ;	AOP_STK for _initGame_sloc0_1_0
   010E 2B                  763 	dec	hl
   010F 5E                  764 	ld	e,(hl)
   0110 23                  765 	inc	hl
   0111 56                  766 	ld	d,(hl)
   0112 3E 00               767 	ld	a,#0x00
   0114 12                  768 	ld	(de),a
                            769 ;	ld.c 169
                            770 ;	genPlus
                            771 ;	AOP_STK for _initGame_i_1_1
                            772 ;	AOP_STK for _initGame_sloc0_1_0
                            773 ;	Can't optimise plus by inc, falling back to the normal way
   0115 11 CC 06            774 	ld	de,#_ey
   0118 23                  775 	inc	hl
   0119 23                  776 	inc	hl
   011A 6E                  777 	ld	l,(hl)
   011B 26 00               778 	ld	h,#0x00
   011D 19                  779 	add	hl,de
   011E 7D                  780 	ld	a,l
   011F 54                  781 	ld	d,h
   0120 F8 04               782 	lda	hl,4(sp)
   0122 22                  783 	ld	(hl+),a
   0123 72                  784 	ld	(hl),d
                            785 ;	genAssign (pointer)
                            786 ;	AOP_STK for _initGame_sloc0_1_0
   0124 2B                  787 	dec	hl
   0125 5E                  788 	ld	e,(hl)
   0126 23                  789 	inc	hl
   0127 56                  790 	ld	d,(hl)
   0128 3E 00               791 	ld	a,#0x00
   012A 12                  792 	ld	(de),a
                            793 ;	ld.c 170
                            794 ;	genPlus
                            795 ;	AOP_STK for _initGame_i_1_1
                            796 ;	AOP_STK for _initGame_sloc0_1_0
                            797 ;	Can't optimise plus by inc, falling back to the normal way
   012B 11 D3 06            798 	ld	de,#_es
   012E 23                  799 	inc	hl
   012F 23                  800 	inc	hl
   0130 6E                  801 	ld	l,(hl)
   0131 26 00               802 	ld	h,#0x00
   0133 19                  803 	add	hl,de
   0134 7D                  804 	ld	a,l
   0135 54                  805 	ld	d,h
   0136 F8 04               806 	lda	hl,4(sp)
   0138 22                  807 	ld	(hl+),a
   0139 72                  808 	ld	(hl),d
                            809 ;	genAssign (pointer)
                            810 ;	AOP_STK for _initGame_sloc0_1_0
   013A 2B                  811 	dec	hl
   013B 5E                  812 	ld	e,(hl)
   013C 23                  813 	inc	hl
   013D 56                  814 	ld	d,(hl)
   013E 3E 00               815 	ld	a,#0x00
   0140 12                  816 	ld	(de),a
                            817 ;	ld.c 171
                            818 ;	genPlus
                            819 ;	AOP_STK for _initGame_i_1_1
                            820 ;	AOP_STK for _initGame_sloc0_1_0
                            821 ;	Can't optimise plus by inc, falling back to the normal way
   0141 11 DA 06            822 	ld	de,#_et
   0144 23                  823 	inc	hl
   0145 23                  824 	inc	hl
   0146 6E                  825 	ld	l,(hl)
   0147 26 00               826 	ld	h,#0x00
   0149 19                  827 	add	hl,de
   014A 7D                  828 	ld	a,l
   014B 54                  829 	ld	d,h
   014C F8 04               830 	lda	hl,4(sp)
   014E 22                  831 	ld	(hl+),a
   014F 72                  832 	ld	(hl),d
                            833 ;	genAssign (pointer)
                            834 ;	AOP_STK for _initGame_sloc0_1_0
   0150 2B                  835 	dec	hl
   0151 5E                  836 	ld	e,(hl)
   0152 23                  837 	inc	hl
   0153 56                  838 	ld	d,(hl)
   0154 3E 00               839 	ld	a,#0x00
   0156 12                  840 	ld	(de),a
                            841 ;	ld.c 167
                            842 ;	genPlus
                            843 ;	AOP_STK for _initGame_i_1_1
                            844 ;	genPlusIncr
   0157 23                  845 	inc	hl
   0158 23                  846 	inc	hl
   0159 34                  847 	inc	(hl)
                            848 ;	genGoto
   015A C3 F7 00            849 	jp	00104$
                            850 ;	genLabel
   015D                     851 00107$:
                            852 ;	ld.c 174
                            853 ;	genAssign
                            854 ;	AOP_STK for _initGame_i_1_1
   015D F8 07               855 	lda	hl,7(sp)
   015F 36 00               856 	ld	(hl),#0x00
                            857 ;	genLabel
   0161                     858 00108$:
                            859 ;	genCmpEq
                            860 ;	AOP_STK for _initGame_i_1_1
                            861 ; genCmpEq: left 1, right 1, result 0
   0161 F8 07               862 	lda	hl,7(sp)
   0163 7E                  863 	ld	a,(hl)
   0164 FE 0A               864 	cp	a,#0x0A
   0166 CA C7 01            865 	jp	z,00111$
   0169                     866 00144$:
                            867 ;	ld.c 175
                            868 ;	genPlus
                            869 ;	AOP_STK for _initGame_i_1_1
                            870 ;	AOP_STK for _initGame_sloc0_1_0
                            871 ;	Can't optimise plus by inc, falling back to the normal way
   0169 11 E2 06            872 	ld	de,#_lx
   016C F8 07               873 	lda	hl,7(sp)
   016E 6E                  874 	ld	l,(hl)
   016F 26 00               875 	ld	h,#0x00
   0171 19                  876 	add	hl,de
   0172 7D                  877 	ld	a,l
   0173 54                  878 	ld	d,h
   0174 F8 04               879 	lda	hl,4(sp)
   0176 22                  880 	ld	(hl+),a
   0177 72                  881 	ld	(hl),d
                            882 ;	genAssign (pointer)
                            883 ;	AOP_STK for _initGame_sloc0_1_0
   0178 2B                  884 	dec	hl
   0179 5E                  885 	ld	e,(hl)
   017A 23                  886 	inc	hl
   017B 56                  887 	ld	d,(hl)
   017C 3E 00               888 	ld	a,#0x00
   017E 12                  889 	ld	(de),a
                            890 ;	ld.c 176
                            891 ;	genPlus
                            892 ;	AOP_STK for _initGame_i_1_1
                            893 ;	AOP_STK for _initGame_sloc0_1_0
                            894 ;	Can't optimise plus by inc, falling back to the normal way
   017F 11 EC 06            895 	ld	de,#_ly
   0182 23                  896 	inc	hl
   0183 23                  897 	inc	hl
   0184 6E                  898 	ld	l,(hl)
   0185 26 00               899 	ld	h,#0x00
   0187 19                  900 	add	hl,de
   0188 7D                  901 	ld	a,l
   0189 54                  902 	ld	d,h
   018A F8 04               903 	lda	hl,4(sp)
   018C 22                  904 	ld	(hl+),a
   018D 72                  905 	ld	(hl),d
                            906 ;	genAssign (pointer)
                            907 ;	AOP_STK for _initGame_sloc0_1_0
   018E 2B                  908 	dec	hl
   018F 5E                  909 	ld	e,(hl)
   0190 23                  910 	inc	hl
   0191 56                  911 	ld	d,(hl)
   0192 3E 00               912 	ld	a,#0x00
   0194 12                  913 	ld	(de),a
                            914 ;	ld.c 177
                            915 ;	genPlus
                            916 ;	AOP_STK for _initGame_i_1_1
                            917 ;	AOP_STK for _initGame_sloc0_1_0
                            918 ;	Can't optimise plus by inc, falling back to the normal way
   0195 11 F6 06            919 	ld	de,#_ls
   0198 23                  920 	inc	hl
   0199 23                  921 	inc	hl
   019A 6E                  922 	ld	l,(hl)
   019B 26 00               923 	ld	h,#0x00
   019D 19                  924 	add	hl,de
   019E 7D                  925 	ld	a,l
   019F 54                  926 	ld	d,h
   01A0 F8 04               927 	lda	hl,4(sp)
   01A2 22                  928 	ld	(hl+),a
   01A3 72                  929 	ld	(hl),d
                            930 ;	genAssign (pointer)
                            931 ;	AOP_STK for _initGame_sloc0_1_0
   01A4 2B                  932 	dec	hl
   01A5 5E                  933 	ld	e,(hl)
   01A6 23                  934 	inc	hl
   01A7 56                  935 	ld	d,(hl)
   01A8 3E 00               936 	ld	a,#0x00
   01AA 12                  937 	ld	(de),a
                            938 ;	ld.c 178
                            939 ;	genPlus
                            940 ;	AOP_STK for _initGame_i_1_1
                            941 ;	AOP_STK for _initGame_sloc0_1_0
                            942 ;	Can't optimise plus by inc, falling back to the normal way
   01AB 11 00 07            943 	ld	de,#_lt
   01AE 23                  944 	inc	hl
   01AF 23                  945 	inc	hl
   01B0 6E                  946 	ld	l,(hl)
   01B1 26 00               947 	ld	h,#0x00
   01B3 19                  948 	add	hl,de
   01B4 7D                  949 	ld	a,l
   01B5 54                  950 	ld	d,h
   01B6 F8 04               951 	lda	hl,4(sp)
   01B8 22                  952 	ld	(hl+),a
   01B9 72                  953 	ld	(hl),d
                            954 ;	genAssign (pointer)
                            955 ;	AOP_STK for _initGame_sloc0_1_0
   01BA 2B                  956 	dec	hl
   01BB 5E                  957 	ld	e,(hl)
   01BC 23                  958 	inc	hl
   01BD 56                  959 	ld	d,(hl)
   01BE 3E 00               960 	ld	a,#0x00
   01C0 12                  961 	ld	(de),a
                            962 ;	ld.c 174
                            963 ;	genPlus
                            964 ;	AOP_STK for _initGame_i_1_1
                            965 ;	genPlusIncr
   01C1 23                  966 	inc	hl
   01C2 23                  967 	inc	hl
   01C3 34                  968 	inc	(hl)
                            969 ;	genGoto
   01C4 C3 61 01            970 	jp	00108$
                            971 ;	genLabel
   01C7                     972 00111$:
                            973 ;	ld.c 182
                            974 ;	genIpush
                            975 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01C7 21 68 06            976 	ld	hl,#_myBkgData
   01CA E5                  977 	push	hl
                            978 ;	genIpush
   01CB 21 00 04            979 	ld	hl,#0x0400
   01CE E5                  980 	push	hl
                            981 ;	genCall
   01CF CD 00 00            982 	call	_set_bkg_data
   01D2 E8 04               983 	lda	sp,4(sp)
                            984 ;	ld.c 183
                            985 ;	genAssign
                            986 ;	AOP_STK for _initGame_j_1_1
   01D4 F8 06               987 	lda	hl,6(sp)
   01D6 36 00               988 	ld	(hl),#0x00
                            989 ;	genLabel
   01D8                     990 00116$:
                            991 ;	genCmpEq
                            992 ;	AOP_STK for _initGame_j_1_1
                            993 ; genCmpEq: left 1, right 1, result 0
   01D8 F8 06               994 	lda	hl,6(sp)
   01DA 7E                  995 	ld	a,(hl)
   01DB FE 12               996 	cp	a,#0x12
   01DD CA 4B 02            997 	jp	z,00119$
   01E0                     998 00145$:
                            999 ;	ld.c 185
                           1000 ;	genAssign
                           1001 ;	AOP_STK for _initGame_i_1_1
   01E0 F8 07              1002 	lda	hl,7(sp)
   01E2 36 00              1003 	ld	(hl),#0x00
                           1004 ;	genLabel
   01E4                    1005 00112$:
                           1006 ;	genCmpEq
                           1007 ;	AOP_STK for _initGame_i_1_1
                           1008 ; genCmpEq: left 1, right 1, result 1
   01E4 F8 07              1009 	lda	hl,7(sp)
   01E6 7E                 1010 	ld	a,(hl)
   01E7 FE 14              1011 	cp	a,#0x14
   01E9 C2 F0 01           1012 	jp	nz,00146$
   01EC 3E 01              1013 	ld	a,#0x01
   01EE 18 01              1014 	jr	00147$
   01F0                    1015 00146$:
   01F0 AF                 1016 	xor	a,a
   01F1                    1017 00147$:
                           1018 ;	genIfx
   01F1 B7                 1019 	or	a,a
   01F2 C2 2F 02           1020 	jp	nz,00115$
                           1021 ;	ld.c 186
                           1022 ;	genPlus
                           1023 ;	AOP_STK for _initGame_i_1_1
                           1024 ;	AOP_STK for _initGame_sloc0_1_0
                           1025 ;	Can't optimise plus by inc, falling back to the normal way
   01F5 11 0A 07           1026 	ld	de,#_randomBkgTiles
   01F8 F8 07              1027 	lda	hl,7(sp)
   01FA 6E                 1028 	ld	l,(hl)
   01FB 26 00              1029 	ld	h,#0x00
   01FD 19                 1030 	add	hl,de
   01FE 7D                 1031 	ld	a,l
   01FF 54                 1032 	ld	d,h
   0200 F8 04              1033 	lda	hl,4(sp)
   0202 22                 1034 	ld	(hl+),a
   0203 72                 1035 	ld	(hl),d
                           1036 ;	genCall
                           1037 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0204 CD 00 00           1038 	call	_rand
   0207 43                 1039 	ld	b,e
                           1040 ;	genIpush
                           1041 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0208 C5                 1042 	push	bc
   0209 3E 04              1043 	ld	a,#0x04
   020B F5                 1044 	push	af
   020C 33                 1045 	inc	sp
                           1046 ;	genIpush
   020D 78                 1047 	ld	a,b
   020E F5                 1048 	push	af
   020F 33                 1049 	inc	sp
                           1050 ;	genCall
   0210 CD 00 00           1051 	call	__modschar_rrx_s
                           1052 ;	AOP_STK for _initGame_sloc1_1_0
   0213 F8 07              1053 	lda	hl,7(sp)
   0215 73                 1054 	ld	(hl),e
   0216 E8 02              1055 	lda	sp,2(sp)
   0218 E1                 1056 	pop	hl
   0219 44                 1057 	ld	b,h
                           1058 ;	genAssign
                           1059 ;	AOP_STK for _initGame_sloc1_1_0
   021A F8 03              1060 	lda	hl,3(sp)
                           1061 ;	genAssign (pointer)
                           1062 ;	AOP_STK for _initGame_sloc0_1_0
   021C 2A                 1063 	ld	a,(hl+)
   021D 5E                 1064 	ld	e,(hl)
   021E 23                 1065 	inc	hl
   021F 56                 1066 	ld	d,(hl)
   0220 12                 1067 	ld	(de),a
                           1068 ;	ld.c 185
                           1069 ;	genPlus
                           1070 ;	AOP_STK for _initGame_i_1_1
                           1071 ;	AOP_STK for _initGame_sloc2_1_0
                           1072 ;	genPlusIncr
                           1073 ;	Can't optimise plus by inc, falling back to the normal way
   0221 23                 1074 	inc	hl
   0222 23                 1075 	inc	hl
   0223 7E                 1076 	ld	a,(hl)
   0224 C6 01              1077 	add	a,#0x01
   0226 F8 02              1078 	lda	hl,2(sp)
                           1079 ;	genAssign
                           1080 ;	AOP_STK for _initGame_sloc2_1_0
                           1081 ;	AOP_STK for _initGame_i_1_1
   0228 77                 1082 	ld      (hl),a
                           1083 ; Removed redundent load
   0229 F8 07              1084 	lda	hl,7(sp)
   022B 77                 1085 	ld	(hl),a
                           1086 ;	genGoto
   022C C3 E4 01           1087 	jp	00112$
                           1088 ;	genLabel
   022F                    1089 00115$:
                           1090 ;	ld.c 188
                           1091 ;	genIpush
                           1092 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   022F 21 0A 07           1093 	ld	hl,#_randomBkgTiles
   0232 E5                 1094 	push	hl
                           1095 ;	genIpush
   0233 21 14 01           1096 	ld	hl,#0x0114
   0236 E5                 1097 	push	hl
                           1098 ;	genIpush
                           1099 ;	AOP_STK for _initGame_j_1_1
   0237 F8 0A              1100 	lda	hl,10(sp)
   0239 7E                 1101 	ld	a,(hl)
   023A F5                 1102 	push	af
   023B 33                 1103 	inc	sp
                           1104 ;	genIpush
   023C 3E 00              1105 	ld	a,#0x00
   023E F5                 1106 	push	af
   023F 33                 1107 	inc	sp
                           1108 ;	genCall
   0240 CD 00 00           1109 	call	_set_bkg_tiles
   0243 E8 06              1110 	lda	sp,6(sp)
                           1111 ;	ld.c 183
                           1112 ;	genPlus
                           1113 ;	AOP_STK for _initGame_j_1_1
                           1114 ;	genPlusIncr
   0245 F8 06              1115 	lda	hl,6(sp)
   0247 34                 1116 	inc	(hl)
                           1117 ;	genGoto
   0248 C3 D8 01           1118 	jp	00116$
                           1119 ;	genLabel
   024B                    1120 00119$:
                           1121 ;	ld.c 192
                           1122 ;	genAssign
                           1123 ;	AOP_HL for _x
   024B 21 C0 06           1124 	ld	hl,#_x
   024E 36 4B              1125 	ld	(hl),#0x4B
                           1126 ;	ld.c 193
                           1127 ;	genAssign
                           1128 ;	AOP_HL for _y
   0250 21 C1 06           1129 	ld	hl,#_y
   0253 36 78              1130 	ld	(hl),#0x78
                           1131 ;	ld.c 195
                           1132 ;	genAssign
   0255 06 40              1133 	ld	b,#0x40
   0257 0E FF              1134 	ld	c,#0xFF
                           1135 ;	genAssign
                           1136 ;	AOP_STK for _initGame_sloc0_1_0
   0259 F8 04              1137 	lda	hl,4(sp)
   025B 36 40              1138 	ld	(hl),#0x40
   025D 23                 1139 	inc	hl
   025E 36 FF              1140 	ld	(hl),#0xFF
                           1141 ;	genPointerGet
                           1142 ;	AOP_STK for _initGame_sloc0_1_0
                           1143 ;	AOP_STK for _initGame_sloc2_1_0
   0260 2B                 1144 	dec	hl
   0261 5E                 1145 	ld	e,(hl)
   0262 23                 1146 	inc	hl
   0263 56                 1147 	ld	d,(hl)
   0264 1A                 1148 	ld	a,(de)
   0265 F8 02              1149 	lda	hl,2(sp)
                           1150 ;	genOr
                           1151 ;	AOP_STK for _initGame_sloc2_1_0
   0267 77                 1152 	ld      (hl),a
                           1153 ; Removed redundent load
   0268 F6 04              1154 	or	a,#0x04
                           1155 ;	genAssign (pointer)
   026A 58                 1156 	ld	e,b
   026B 51                 1157 	ld	d,c
   026C 12                 1158 	ld	(de),a
                           1159 ;	ld.c 196
                           1160 ;	genIpush
                           1161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   026D 21 00 00           1162 	ld	hl,#_ship
   0270 E5                 1163 	push	hl
                           1164 ;	genIpush
   0271 21 00 08           1165 	ld	hl,#0x0800
   0274 E5                 1166 	push	hl
                           1167 ;	genCall
   0275 CD 00 00           1168 	call	_set_sprite_data
   0278 E8 04              1169 	lda	sp,4(sp)
                           1170 ;	ld.c 197
                           1171 ;	genIpush
                           1172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   027A 21 00 00           1173 	ld	hl,#0x0000
   027D E5                 1174 	push	hl
                           1175 ;	genCall
   027E CD 00 00           1176 	call	_set_sprite_tile
   0281 E8 02              1177 	lda	sp,2(sp)
                           1178 ;	ld.c 198
                           1179 ;	genIpush
                           1180 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1181 ;	AOP_HL for _y
   0283 21 C1 06           1182 	ld	hl,#_y
   0286 7E                 1183 	ld	a,(hl)
   0287 F5                 1184 	push	af
   0288 33                 1185 	inc	sp
                           1186 ;	genIpush
                           1187 ;	AOP_HL for _x
   0289 21 C0 06           1188 	ld	hl,#_x
   028C 7E                 1189 	ld	a,(hl)
   028D F5                 1190 	push	af
   028E 33                 1191 	inc	sp
                           1192 ;	genIpush
   028F 3E 00              1193 	ld	a,#0x00
   0291 F5                 1194 	push	af
   0292 33                 1195 	inc	sp
                           1196 ;	genCall
   0293 CD 00 00           1197 	call	_move_sprite
   0296 E8 03              1198 	lda	sp,3(sp)
                           1199 ;	ld.c 199
                           1200 ;	genIpush
                           1201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0298 21 01 02           1202 	ld	hl,#0x0201
   029B E5                 1203 	push	hl
                           1204 ;	genCall
   029C CD 00 00           1205 	call	_set_sprite_tile
   029F E8 02              1206 	lda	sp,2(sp)
                           1207 ;	ld.c 200
                           1208 ;	genPlus
                           1209 ;	AOP_HL for _x
                           1210 ;	genPlusIncr
                           1211 ;	Can't optimise plus by inc, falling back to the normal way
   02A1 21 C0 06           1212 	ld	hl,#_x
   02A4 7E                 1213 	ld	a,(hl)
   02A5 C6 08              1214 	add	a,#0x08
   02A7 4F                 1215 	ld	c,a
                           1216 ;	genIpush
                           1217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1218 ;	AOP_HL for _y
   02A8 21 C1 06           1219 	ld	hl,#_y
   02AB 7E                 1220 	ld	a,(hl)
   02AC F5                 1221 	push	af
   02AD 33                 1222 	inc	sp
                           1223 ;	genIpush
   02AE 79                 1224 	ld	a,c
   02AF F5                 1225 	push	af
   02B0 33                 1226 	inc	sp
                           1227 ;	genIpush
   02B1 3E 01              1228 	ld	a,#0x01
   02B3 F5                 1229 	push	af
   02B4 33                 1230 	inc	sp
                           1231 ;	genCall
   02B5 CD 00 00           1232 	call	_move_sprite
   02B8 E8 03              1233 	lda	sp,3(sp)
                           1234 ;	ld.c 203
                           1235 ;	genIpush
                           1236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02BA 21 40 00           1237 	ld	hl,#_enemy
   02BD E5                 1238 	push	hl
                           1239 ;	genIpush
   02BE 21 08 08           1240 	ld	hl,#0x0808
   02C1 E5                 1241 	push	hl
                           1242 ;	genCall
   02C2 CD 00 00           1243 	call	_set_sprite_data
   02C5 E8 04              1244 	lda	sp,4(sp)
                           1245 ;	ld.c 204
                           1246 ;	genAssign
                           1247 ;	AOP_HL for _currentID
   02C7 21 C4 06           1248 	ld	hl,#_currentID
   02CA 36 00              1249 	ld	(hl),#0x00
                           1250 ;	ld.c 207
                           1251 ;	genAssign
                           1252 ;	AOP_STK for _initGame_i_1_1
   02CC F8 07              1253 	lda	hl,7(sp)
   02CE 36 00              1254 	ld	(hl),#0x00
                           1255 ;	genLabel
   02D0                    1256 00120$:
                           1257 ;	genCmpEq
                           1258 ;	AOP_STK for _initGame_i_1_1
                           1259 ; genCmpEq: left 1, right 1, result 0
   02D0 F8 07              1260 	lda	hl,7(sp)
   02D2 7E                 1261 	ld	a,(hl)
   02D3 FE 07              1262 	cp	a,#0x07
   02D5 CA EC 03           1263 	jp	z,00123$
   02D8                    1264 00148$:
                           1265 ;	ld.c 209
                           1266 ;	genIpush
                           1267 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1268 ;	AOP_STK for _initGame_i_1_1
   02D8 F8 07              1269 	lda	hl,7(sp)
   02DA 7E                 1270 	ld	a,(hl)
   02DB F5                 1271 	push	af
   02DC 33                 1272 	inc	sp
                           1273 ;	genCall
   02DD CD 72 06           1274 	call	_getEnemySpriteIndexFast
                           1275 ;	AOP_HL for _currentID
   02E0 21 C4 06           1276 	ld	hl,#_currentID
   02E3 73                 1277 	ld	(hl),e
   02E4 E8 01              1278 	lda	sp,1(sp)
                           1279 ;	ld.c 211
                           1280 ;	genCmpLt
                           1281 ;	AOP_STK for _initGame_i_1_1
   02E6 F8 07              1282 	lda	hl,7(sp)
   02E8 7E                 1283 	ld	a,(hl)
   02E9 FE 04              1284 	cp	#0x04
   02EB D2 25 03           1285 	jp	nc,00102$
                           1286 ;	ld.c 212
                           1287 ;	genPlus
                           1288 ;	AOP_STK for _initGame_i_1_1
                           1289 ;	Can't optimise plus by inc, falling back to the normal way
   02EE 11 C5 06           1290 	ld	de,#_ex
   02F1 6E                 1291 	ld	l,(hl)
   02F2 26 00              1292 	ld	h,#0x00
   02F4 19                 1293 	add	hl,de
   02F5 4D                 1294 	ld	c,l
   02F6 44                 1295 	ld	b,h
                           1296 ;	genPlus
                           1297 ;	AOP_STK for _initGame_i_1_1
                           1298 ;	AOP_STK for _initGame_sloc2_1_0
                           1299 ;	genPlusIncr
                           1300 ;	Can't optimise plus by inc, falling back to the normal way
   02F7 F8 07              1301 	lda	hl,7(sp)
   02F9 7E                 1302 	ld	a,(hl)
   02FA C6 01              1303 	add	a,#0x01
   02FC F8 02              1304 	lda	hl,2(sp)
                           1305 ;	genMult
                           1306 ;	AOP_STK for _initGame_sloc2_1_0
                           1307 ;	AOP_STK for _initGame_sloc0_1_0
   02FE 77                 1308 	ld      (hl),a
   02FF 5F                 1309 	ld      e,a
   0300 16 00              1310 	ld	d,#0x00
   0302 6B                 1311 	ld	l,e
   0303 62                 1312 	ld	h,d
   0304 29                 1313 	add	hl,hl
   0305 19                 1314 	add	hl,de
   0306 29                 1315 	add	hl,hl
   0307 19                 1316 	add	hl,de
   0308 29                 1317 	add	hl,hl
   0309 19                 1318 	add	hl,de
   030A 29                 1319 	add	hl,hl
   030B 7D                 1320 	ld	a,l
   030C 54                 1321 	ld	d,h
   030D F8 04              1322 	lda	hl,4(sp)
   030F 22                 1323 	ld	(hl+),a
   0310 72                 1324 	ld	(hl),d
                           1325 ;	genCast
                           1326 ;	AOP_STK for _initGame_sloc0_1_0
   0311 2B                 1327 	dec	hl
   0312 7E                 1328 	ld	a,(hl)
                           1329 ;	genAssign (pointer)
   0313 02                 1330 	ld	(bc),a
                           1331 ;	ld.c 213
                           1332 ;	genPlus
                           1333 ;	AOP_STK for _initGame_i_1_1
                           1334 ;	Can't optimise plus by inc, falling back to the normal way
   0314 11 CC 06           1335 	ld	de,#_ey
   0317 F8 07              1336 	lda	hl,7(sp)
   0319 6E                 1337 	ld	l,(hl)
   031A 26 00              1338 	ld	h,#0x00
   031C 19                 1339 	add	hl,de
   031D 4D                 1340 	ld	c,l
   031E 44                 1341 	ld	b,h
                           1342 ;	genAssign (pointer)
   031F 3E 14              1343 	ld	a,#0x14
   0321 02                 1344 	ld	(bc),a
                           1345 ;	genGoto
   0322 C3 6D 03           1346 	jp	00103$
                           1347 ;	genLabel
   0325                    1348 00102$:
                           1349 ;	ld.c 215
                           1350 ;	genPlus
                           1351 ;	AOP_STK for _initGame_i_1_1
                           1352 ;	Can't optimise plus by inc, falling back to the normal way
   0325 11 C5 06           1353 	ld	de,#_ex
   0328 F8 07              1354 	lda	hl,7(sp)
   032A 6E                 1355 	ld	l,(hl)
   032B 26 00              1356 	ld	h,#0x00
   032D 19                 1357 	add	hl,de
   032E 4D                 1358 	ld	c,l
   032F 44                 1359 	ld	b,h
                           1360 ;	genMinus
                           1361 ;	AOP_STK for _initGame_i_1_1
                           1362 ;	AOP_STK for _initGame_sloc2_1_0
   0330 F8 07              1363 	lda	hl,7(sp)
   0332 7E                 1364 	ld	a,(hl)
   0333 C6 FC              1365 	add	a,#0xFC
   0335 F8 02              1366 	lda	hl,2(sp)
                           1367 ;	genPlus
                           1368 ;	AOP_STK for _initGame_sloc2_1_0
                           1369 ;	AOP_STK for _initGame_sloc1_1_0
                           1370 ;	genPlusIncr
                           1371 ;	Can't optimise plus by inc, falling back to the normal way
   0337 77                 1372 	ld      (hl),a
                           1373 ; Removed redundent load
   0338 C6 01              1374 	add	a,#0x01
   033A 23                 1375 	inc	hl
                           1376 ;	genMult
                           1377 ;	AOP_STK for _initGame_sloc1_1_0
                           1378 ;	AOP_STK for _initGame_sloc0_1_0
   033B 77                 1379 	ld      (hl),a
   033C 5F                 1380 	ld      e,a
   033D 16 00              1381 	ld	d,#0x00
   033F 6B                 1382 	ld	l,e
   0340 62                 1383 	ld	h,d
   0341 29                 1384 	add	hl,hl
   0342 19                 1385 	add	hl,de
   0343 29                 1386 	add	hl,hl
   0344 19                 1387 	add	hl,de
   0345 29                 1388 	add	hl,hl
   0346 19                 1389 	add	hl,de
   0347 29                 1390 	add	hl,hl
   0348 7D                 1391 	ld	a,l
   0349 54                 1392 	ld	d,h
   034A F8 04              1393 	lda	hl,4(sp)
   034C 22                 1394 	ld	(hl+),a
   034D 72                 1395 	ld	(hl),d
                           1396 ;	genPlus
                           1397 ;	AOP_STK for _initGame_sloc0_1_0
                           1398 ;	AOP_STK for _initGame_sloc3_1_0
                           1399 ;	genPlusIncr
                           1400 ;	Can't optimise plus by inc, falling back to the normal way
   034E 2B                 1401 	dec	hl
   034F 5E                 1402 	ld	e,(hl)
   0350 23                 1403 	inc	hl
   0351 56                 1404 	ld	d,(hl)
   0352 21 0F 00           1405 	ld	hl,#0x000F
   0355 19                 1406 	add	hl,de
   0356 7D                 1407 	ld	a,l
   0357 54                 1408 	ld	d,h
   0358 F8 00              1409 	lda	hl,0(sp)
   035A 22                 1410 	ld	(hl+),a
   035B 72                 1411 	ld	(hl),d
                           1412 ;	genCast
                           1413 ;	AOP_STK for _initGame_sloc3_1_0
   035C 2B                 1414 	dec	hl
   035D 7E                 1415 	ld	a,(hl)
                           1416 ;	genAssign (pointer)
   035E 02                 1417 	ld	(bc),a
                           1418 ;	ld.c 216
                           1419 ;	genPlus
                           1420 ;	AOP_STK for _initGame_i_1_1
                           1421 ;	Can't optimise plus by inc, falling back to the normal way
   035F 11 CC 06           1422 	ld	de,#_ey
   0362 F8 07              1423 	lda	hl,7(sp)
   0364 6E                 1424 	ld	l,(hl)
   0365 26 00              1425 	ld	h,#0x00
   0367 19                 1426 	add	hl,de
   0368 4D                 1427 	ld	c,l
   0369 44                 1428 	ld	b,h
                           1429 ;	genAssign (pointer)
   036A 3E 00              1430 	ld	a,#0x00
   036C 02                 1431 	ld	(bc),a
                           1432 ;	genLabel
   036D                    1433 00103$:
                           1434 ;	ld.c 219
                           1435 ;	genIpush
                           1436 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   036D 3E 08              1437 	ld	a,#0x08
   036F F5                 1438 	push	af
   0370 33                 1439 	inc	sp
                           1440 ;	genIpush
                           1441 ;	AOP_HL for _currentID
   0371 21 C4 06           1442 	ld	hl,#_currentID
   0374 7E                 1443 	ld	a,(hl)
   0375 F5                 1444 	push	af
   0376 33                 1445 	inc	sp
                           1446 ;	genCall
   0377 CD 00 00           1447 	call	_set_sprite_tile
   037A E8 02              1448 	lda	sp,2(sp)
                           1449 ;	ld.c 220
                           1450 ;	genPlus
                           1451 ;	AOP_STK for _initGame_i_1_1
                           1452 ;	Can't optimise plus by inc, falling back to the normal way
   037C 11 CC 06           1453 	ld	de,#_ey
   037F F8 07              1454 	lda	hl,7(sp)
   0381 6E                 1455 	ld	l,(hl)
   0382 26 00              1456 	ld	h,#0x00
   0384 19                 1457 	add	hl,de
   0385 4D                 1458 	ld	c,l
   0386 44                 1459 	ld	b,h
                           1460 ;	genPointerGet
                           1461 ;	AOP_STK for _initGame_sloc3_1_0
   0387 0A                 1462 	ld	a,(bc)
   0388 F8 00              1463 	lda	hl,0(sp)
   038A 77                 1464 	ld	(hl),a
                           1465 ;	genPlus
                           1466 ;	AOP_STK for _initGame_i_1_1
                           1467 ;	AOP_STK for _initGame_sloc0_1_0
                           1468 ;	Can't optimise plus by inc, falling back to the normal way
   038B 11 C5 06           1469 	ld	de,#_ex
   038E F8 07              1470 	lda	hl,7(sp)
   0390 6E                 1471 	ld	l,(hl)
   0391 26 00              1472 	ld	h,#0x00
   0393 19                 1473 	add	hl,de
   0394 7D                 1474 	ld	a,l
   0395 54                 1475 	ld	d,h
   0396 F8 04              1476 	lda	hl,4(sp)
                           1477 ;	genPointerGet
                           1478 ;	AOP_STK for _initGame_sloc0_1_0
                           1479 ;	AOP_STK for _initGame_sloc2_1_0
   0398 22                 1480 	ld	(hl+),a
   0399 72                 1481 	ld	(hl),d
   039A 5F                 1482 	ld	e,a
   039B 1A                 1483 	ld	a,(de)
   039C F8 02              1484 	lda	hl,2(sp)
   039E 77                 1485 	ld	(hl),a
                           1486 ;	genIpush
                           1487 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   039F C5                 1488 	push	bc
                           1489 ;	AOP_STK for _initGame_sloc3_1_0
   03A0 2B                 1490 	dec	hl
   03A1 2B                 1491 	dec	hl
   03A2 7E                 1492 	ld	a,(hl)
   03A3 F5                 1493 	push	af
   03A4 33                 1494 	inc	sp
                           1495 ;	genIpush
                           1496 ;	AOP_STK for _initGame_sloc2_1_0
   03A5 23                 1497 	inc	hl
   03A6 23                 1498 	inc	hl
   03A7 7E                 1499 	ld	a,(hl)
   03A8 F5                 1500 	push	af
   03A9 33                 1501 	inc	sp
                           1502 ;	genIpush
   03AA 3E 02              1503 	ld	a,#0x02
   03AC F5                 1504 	push	af
   03AD 33                 1505 	inc	sp
                           1506 ;	genCall
   03AE CD 00 00           1507 	call	_move_sprite
   03B1 E8 03              1508 	lda	sp,3(sp)
   03B3 C1                 1509 	pop	bc
                           1510 ;	ld.c 221
                           1511 ;	genPlus
                           1512 ;	AOP_HL for _currentID
                           1513 ;	AOP_STK for _initGame_sloc3_1_0
                           1514 ;	genPlusIncr
                           1515 ;	Can't optimise plus by inc, falling back to the normal way
   03B4 21 C4 06           1516 	ld	hl,#_currentID
   03B7 7E                 1517 	ld	a,(hl)
   03B8 C6 01              1518 	add	a,#0x01
   03BA F8 00              1519 	lda	hl,0(sp)
   03BC 77                 1520 	ld	(hl),a
                           1521 ;	genIpush
                           1522 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03BD C5                 1523 	push	bc
   03BE 3E 0A              1524 	ld	a,#0x0A
   03C0 F5                 1525 	push	af
   03C1 33                 1526 	inc	sp
                           1527 ;	genIpush
                           1528 ;	AOP_STK for _initGame_sloc3_1_0
   03C2 7E                 1529 	ld	a,(hl)
   03C3 F5                 1530 	push	af
   03C4 33                 1531 	inc	sp
                           1532 ;	genCall
   03C5 CD 00 00           1533 	call	_set_sprite_tile
   03C8 E8 02              1534 	lda	sp,2(sp)
   03CA C1                 1535 	pop	bc
                           1536 ;	ld.c 222
                           1537 ;	genPointerGet
   03CB 0A                 1538 	ld	a,(bc)
   03CC 4F                 1539 	ld	c,a
                           1540 ;	genPointerGet
                           1541 ;	AOP_STK for _initGame_sloc0_1_0
   03CD F8 04              1542 	lda	hl,4(sp)
   03CF 5E                 1543 	ld	e,(hl)
   03D0 23                 1544 	inc	hl
   03D1 56                 1545 	ld	d,(hl)
   03D2 1A                 1546 	ld	a,(de)
                           1547 ;	genPlus
                           1548 ;	genPlusIncr
                           1549 ;	Can't optimise plus by inc, falling back to the normal way
   03D3 47                 1550 	ld	b,a
   03D4 C6 08              1551 	add	a,#0x08
   03D6 47                 1552 	ld	b,a
                           1553 ;	genIpush
                           1554 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03D7 79                 1555 	ld	a,c
   03D8 F5                 1556 	push	af
   03D9 33                 1557 	inc	sp
                           1558 ;	genIpush
   03DA 78                 1559 	ld	a,b
   03DB F5                 1560 	push	af
   03DC 33                 1561 	inc	sp
                           1562 ;	genIpush
   03DD 3E 03              1563 	ld	a,#0x03
   03DF F5                 1564 	push	af
   03E0 33                 1565 	inc	sp
                           1566 ;	genCall
   03E1 CD 00 00           1567 	call	_move_sprite
   03E4 E8 03              1568 	lda	sp,3(sp)
                           1569 ;	ld.c 207
                           1570 ;	genPlus
                           1571 ;	AOP_STK for _initGame_i_1_1
                           1572 ;	genPlusIncr
   03E6 F8 07              1573 	lda	hl,7(sp)
   03E8 34                 1574 	inc	(hl)
                           1575 ;	genGoto
   03E9 C3 D0 02           1576 	jp	00120$
                           1577 ;	genLabel
   03EC                    1578 00123$:
                           1579 ;	ld.c 225
                           1580 ;	genIpush
                           1581 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03EC 21 80 00           1582 	ld	hl,#_explosion
   03EF E5                 1583 	push	hl
                           1584 ;	genIpush
   03F0 21 10 08           1585 	ld	hl,#0x0810
   03F3 E5                 1586 	push	hl
                           1587 ;	genCall
   03F4 CD 00 00           1588 	call	_set_sprite_data
   03F7 E8 04              1589 	lda	sp,4(sp)
                           1590 ;	ld.c 228
                           1591 ;	genIpush
                           1592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03F9 21 C0 00           1593 	ld	hl,#_laser
   03FC E5                 1594 	push	hl
                           1595 ;	genIpush
   03FD 21 18 08           1596 	ld	hl,#0x0818
   0400 E5                 1597 	push	hl
                           1598 ;	genCall
   0401 CD 00 00           1599 	call	_set_sprite_data
   0404 E8 04              1600 	lda	sp,4(sp)
                           1601 ;	ld.c 229
                           1602 ;	genAssign
                           1603 ;	AOP_HL for _currentLaserID
   0406 21 E1 06           1604 	ld	hl,#_currentLaserID
   0409 36 00              1605 	ld	(hl),#0x00
                           1606 ;	ld.c 232
                           1607 ;	genAssign
                           1608 ;	AOP_STK for _initGame_i_1_1
   040B F8 07              1609 	lda	hl,7(sp)
   040D 36 00              1610 	ld	(hl),#0x00
                           1611 ;	genLabel
   040F                    1612 00124$:
                           1613 ;	genCmpEq
                           1614 ;	AOP_STK for _initGame_i_1_1
                           1615 ; genCmpEq: left 1, right 1, result 0
   040F F8 07              1616 	lda	hl,7(sp)
   0411 7E                 1617 	ld	a,(hl)
   0412 FE 0A              1618 	cp	a,#0x0A
   0414 CA C7 04           1619 	jp	z,00127$
   0417                    1620 00149$:
                           1621 ;	ld.c 234
                           1622 ;	genIpush
                           1623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1624 ;	AOP_STK for _initGame_i_1_1
   0417 F8 07              1625 	lda	hl,7(sp)
   0419 7E                 1626 	ld	a,(hl)
   041A F5                 1627 	push	af
   041B 33                 1628 	inc	sp
                           1629 ;	genCall
   041C CD 35 07           1630 	call	_getLaserSpriteIndexFast
                           1631 ;	AOP_HL for _currentLaserID
   041F 21 E1 06           1632 	ld	hl,#_currentLaserID
   0422 73                 1633 	ld	(hl),e
   0423 E8 01              1634 	lda	sp,1(sp)
                           1635 ;	ld.c 236
                           1636 ;	genPlus
                           1637 ;	AOP_STK for _initGame_i_1_1
                           1638 ;	Can't optimise plus by inc, falling back to the normal way
   0425 11 E2 06           1639 	ld	de,#_lx
   0428 F8 07              1640 	lda	hl,7(sp)
   042A 6E                 1641 	ld	l,(hl)
   042B 26 00              1642 	ld	h,#0x00
   042D 19                 1643 	add	hl,de
   042E 4D                 1644 	ld	c,l
   042F 44                 1645 	ld	b,h
                           1646 ;	genAssign (pointer)
   0430 3E A0              1647 	ld	a,#0xA0
   0432 02                 1648 	ld	(bc),a
                           1649 ;	ld.c 237
                           1650 ;	genPlus
                           1651 ;	AOP_STK for _initGame_i_1_1
                           1652 ;	AOP_STK for _initGame_sloc3_1_0
                           1653 ;	Can't optimise plus by inc, falling back to the normal way
   0433 11 EC 06           1654 	ld	de,#_ly
   0436 F8 07              1655 	lda	hl,7(sp)
   0438 6E                 1656 	ld	l,(hl)
   0439 26 00              1657 	ld	h,#0x00
   043B 19                 1658 	add	hl,de
   043C 7D                 1659 	ld	a,l
   043D 54                 1660 	ld	d,h
   043E F8 00              1661 	lda	hl,0(sp)
   0440 22                 1662 	ld	(hl+),a
   0441 72                 1663 	ld	(hl),d
                           1664 ;	genAssign (pointer)
                           1665 ;	AOP_STK for _initGame_sloc3_1_0
   0442 2B                 1666 	dec	hl
   0443 5E                 1667 	ld	e,(hl)
   0444 23                 1668 	inc	hl
   0445 56                 1669 	ld	d,(hl)
   0446 3E 00              1670 	ld	a,#0x00
   0448 12                 1671 	ld	(de),a
                           1672 ;	ld.c 238
                           1673 ;	genPlus
                           1674 ;	AOP_STK for _initGame_i_1_1
                           1675 ;	AOP_STK for _initGame_sloc0_1_0
                           1676 ;	Can't optimise plus by inc, falling back to the normal way
   0449 11 F6 06           1677 	ld	de,#_ls
   044C F8 07              1678 	lda	hl,7(sp)
   044E 6E                 1679 	ld	l,(hl)
   044F 26 00              1680 	ld	h,#0x00
   0451 19                 1681 	add	hl,de
   0452 7D                 1682 	ld	a,l
   0453 54                 1683 	ld	d,h
   0454 F8 04              1684 	lda	hl,4(sp)
   0456 22                 1685 	ld	(hl+),a
   0457 72                 1686 	ld	(hl),d
                           1687 ;	genAssign (pointer)
                           1688 ;	AOP_STK for _initGame_sloc0_1_0
   0458 2B                 1689 	dec	hl
   0459 5E                 1690 	ld	e,(hl)
   045A 23                 1691 	inc	hl
   045B 56                 1692 	ld	d,(hl)
   045C 3E 02              1693 	ld	a,#0x02
   045E 12                 1694 	ld	(de),a
                           1695 ;	ld.c 240
                           1696 ;	genIpush
                           1697 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   045F C5                 1698 	push	bc
   0460 3E 18              1699 	ld	a,#0x18
   0462 F5                 1700 	push	af
   0463 33                 1701 	inc	sp
                           1702 ;	genIpush
                           1703 ;	AOP_HL for _currentLaserID
   0464 21 E1 06           1704 	ld	hl,#_currentLaserID
   0467 7E                 1705 	ld	a,(hl)
   0468 F5                 1706 	push	af
   0469 33                 1707 	inc	sp
                           1708 ;	genCall
   046A CD 00 00           1709 	call	_set_sprite_tile
   046D E8 02              1710 	lda	sp,2(sp)
   046F C1                 1711 	pop	bc
                           1712 ;	ld.c 241
                           1713 ;	genPointerGet
                           1714 ;	AOP_STK for _initGame_sloc3_1_0
                           1715 ;	AOP_STK for _initGame_sloc2_1_0
   0470 F8 00              1716 	lda	hl,0(sp)
   0472 5E                 1717 	ld	e,(hl)
   0473 23                 1718 	inc	hl
   0474 56                 1719 	ld	d,(hl)
   0475 1A                 1720 	ld	a,(de)
   0476 23                 1721 	inc	hl
   0477 77                 1722 	ld	(hl),a
                           1723 ;	genPointerGet
                           1724 ;	AOP_STK for _initGame_sloc1_1_0
   0478 0A                 1725 	ld	a,(bc)
   0479 23                 1726 	inc	hl
   047A 77                 1727 	ld	(hl),a
                           1728 ;	genIpush
                           1729 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   047B C5                 1730 	push	bc
                           1731 ;	AOP_STK for _initGame_sloc2_1_0
   047C 2B                 1732 	dec	hl
   047D 7E                 1733 	ld	a,(hl)
   047E F5                 1734 	push	af
   047F 33                 1735 	inc	sp
                           1736 ;	genIpush
                           1737 ;	AOP_STK for _initGame_sloc1_1_0
   0480 23                 1738 	inc	hl
   0481 7E                 1739 	ld	a,(hl)
   0482 F5                 1740 	push	af
   0483 33                 1741 	inc	sp
                           1742 ;	genIpush
   0484 3E 04              1743 	ld	a,#0x04
   0486 F5                 1744 	push	af
   0487 33                 1745 	inc	sp
                           1746 ;	genCall
   0488 CD 00 00           1747 	call	_move_sprite
   048B E8 03              1748 	lda	sp,3(sp)
   048D C1                 1749 	pop	bc
                           1750 ;	ld.c 242
                           1751 ;	genPlus
                           1752 ;	AOP_HL for _currentLaserID
                           1753 ;	AOP_STK for _initGame_sloc2_1_0
                           1754 ;	genPlusIncr
                           1755 ;	Can't optimise plus by inc, falling back to the normal way
   048E 21 E1 06           1756 	ld	hl,#_currentLaserID
   0491 7E                 1757 	ld	a,(hl)
   0492 C6 01              1758 	add	a,#0x01
   0494 F8 02              1759 	lda	hl,2(sp)
   0496 77                 1760 	ld	(hl),a
                           1761 ;	genIpush
                           1762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0497 C5                 1763 	push	bc
   0498 3E 1A              1764 	ld	a,#0x1A
   049A F5                 1765 	push	af
   049B 33                 1766 	inc	sp
                           1767 ;	genIpush
                           1768 ;	AOP_STK for _initGame_sloc2_1_0
   049C 7E                 1769 	ld	a,(hl)
   049D F5                 1770 	push	af
   049E 33                 1771 	inc	sp
                           1772 ;	genCall
   049F CD 00 00           1773 	call	_set_sprite_tile
   04A2 E8 02              1774 	lda	sp,2(sp)
   04A4 C1                 1775 	pop	bc
                           1776 ;	ld.c 243
                           1777 ;	genPointerGet
                           1778 ;	AOP_STK for _initGame_sloc3_1_0
                           1779 ;	AOP_STK for _initGame_sloc2_1_0
   04A5 F8 00              1780 	lda	hl,0(sp)
   04A7 5E                 1781 	ld	e,(hl)
   04A8 23                 1782 	inc	hl
   04A9 56                 1783 	ld	d,(hl)
   04AA 1A                 1784 	ld	a,(de)
   04AB 23                 1785 	inc	hl
   04AC 77                 1786 	ld	(hl),a
                           1787 ;	genPointerGet
   04AD 0A                 1788 	ld	a,(bc)
                           1789 ;	genPlus
                           1790 ;	genPlusIncr
                           1791 ;	Can't optimise plus by inc, falling back to the normal way
   04AE 4F                 1792 	ld	c,a
   04AF C6 08              1793 	add	a,#0x08
   04B1 4F                 1794 	ld	c,a
                           1795 ;	genIpush
                           1796 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1797 ;	AOP_STK for _initGame_sloc2_1_0
   04B2 7E                 1798 	ld	a,(hl)
   04B3 F5                 1799 	push	af
   04B4 33                 1800 	inc	sp
                           1801 ;	genIpush
   04B5 79                 1802 	ld	a,c
   04B6 F5                 1803 	push	af
   04B7 33                 1804 	inc	sp
                           1805 ;	genIpush
   04B8 3E 05              1806 	ld	a,#0x05
   04BA F5                 1807 	push	af
   04BB 33                 1808 	inc	sp
                           1809 ;	genCall
   04BC CD 00 00           1810 	call	_move_sprite
   04BF E8 03              1811 	lda	sp,3(sp)
                           1812 ;	ld.c 232
                           1813 ;	genPlus
                           1814 ;	AOP_STK for _initGame_i_1_1
                           1815 ;	genPlusIncr
   04C1 F8 07              1816 	lda	hl,7(sp)
   04C3 34                 1817 	inc	(hl)
                           1818 ;	genGoto
   04C4 C3 0F 04           1819 	jp	00124$
                           1820 ;	genLabel
   04C7                    1821 00127$:
                           1822 ;	ld.c 246
                           1823 ;	genAssign
   04C7 01 40 FF           1824 	ld	bc,#0xFF40
                           1825 ;	genAssign
                           1826 ;	AOP_STK for _initGame_sloc3_1_0
   04CA F8 00              1827 	lda	hl,0(sp)
   04CC 36 40              1828 	ld	(hl),#0x40
   04CE 23                 1829 	inc	hl
   04CF 36 FF              1830 	ld	(hl),#0xFF
                           1831 ;	genPointerGet
                           1832 ;	AOP_STK for _initGame_sloc3_1_0
                           1833 ;	AOP_STK for _initGame_sloc2_1_0
   04D1 2B                 1834 	dec	hl
   04D2 5E                 1835 	ld	e,(hl)
   04D3 23                 1836 	inc	hl
   04D4 56                 1837 	ld	d,(hl)
   04D5 1A                 1838 	ld	a,(de)
   04D6 23                 1839 	inc	hl
                           1840 ;	genOr
                           1841 ;	AOP_STK for _initGame_sloc2_1_0
   04D7 77                 1842 	ld      (hl),a
                           1843 ; Removed redundent load
   04D8 F6 02              1844 	or	a,#0x02
                           1845 ;	genAssign (pointer)
   04DA 02                 1846 	ld	(bc),a
                           1847 ;	ld.c 248
                           1848 ;	genCall
                           1849 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04DB CD 18 0C           1850 	call	_updateHUD
                           1851 ;	genLabel
   04DE                    1852 00128$:
                           1853 ;	genEndFunction
   04DE E8 08              1854 	lda	sp,8(sp)
   04E0 C9                 1855 	ret
   04E1                    1856 ___initGame_end:
                           1857 ;	ld.c 252
                           1858 ;	genLabel
                           1859 ;	genFunction
                           1860 ;	---------------------------------
                           1861 ; Function updateTimers
                           1862 ; ---------------------------------
   04E1                    1863 ___updateTimers_start:
   04E1                    1864 _updateTimers:
   04E1 E8 FE              1865 	lda	sp,-2(sp)
                           1866 ;	ld.c 256
                           1867 ;	genAssign
   04E3 0E 00              1868 	ld	c,#0x00
                           1869 ;	genLabel
   04E5                    1870 00103$:
                           1871 ;	genCmpEq
                           1872 ; genCmpEq: left 1, right 1, result 0
   04E5 79                 1873 	ld	a,c
   04E6 FE 07              1874 	cp	a,#0x07
   04E8 CA 0C 05           1875 	jp	z,00107$
   04EB                    1876 00112$:
                           1877 ;	ld.c 257
                           1878 ;	genPlus
                           1879 ;	AOP_STK for _updateTimers_sloc0_1_0
                           1880 ;	Can't optimise plus by inc, falling back to the normal way
   04EB 11 DA 06           1881 	ld	de,#_et
   04EE 69                 1882 	ld	l,c
   04EF 26 00              1883 	ld	h,#0x00
   04F1 19                 1884 	add	hl,de
   04F2 7D                 1885 	ld	a,l
   04F3 54                 1886 	ld	d,h
   04F4 F8 00              1887 	lda	hl,0(sp)
                           1888 ;	genPointerGet
                           1889 ;	AOP_STK for _updateTimers_sloc0_1_0
   04F6 22                 1890 	ld	(hl+),a
   04F7 72                 1891 	ld	(hl),d
   04F8 5F                 1892 	ld	e,a
   04F9 1A                 1893 	ld	a,(de)
   04FA 47                 1894 	ld	b,a
                           1895 ;	genCmpGt
   04FB 3E 00              1896 	ld	a,#0x00
   04FD 90                 1897 	sub	a,b
   04FE D2 08 05           1898 	jp	nc,00105$
                           1899 ;	ld.c 258
                           1900 ;	genMinus
   0501 05                 1901 	dec	b
                           1902 ;	genAssign (pointer)
                           1903 ;	AOP_STK for _updateTimers_sloc0_1_0
   0502 2B                 1904 	dec	hl
   0503 5E                 1905 	ld	e,(hl)
   0504 23                 1906 	inc	hl
   0505 56                 1907 	ld	d,(hl)
   0506 78                 1908 	ld	a,b
   0507 12                 1909 	ld	(de),a
                           1910 ;	genLabel
   0508                    1911 00105$:
                           1912 ;	ld.c 256
                           1913 ;	genPlus
                           1914 ;	genPlusIncr
                           1915 ; Removed redundent load
   0508 0C                 1916 	inc	c
                           1917 ;	genGoto
   0509 C3 E5 04           1918 	jp	00103$
                           1919 ;	genLabel
   050C                    1920 00107$:
                           1921 ;	genEndFunction
   050C E8 02              1922 	lda	sp,2(sp)
   050E C9                 1923 	ret
   050F                    1924 ___updateTimers_end:
                           1925 ;	ld.c 263
                           1926 ;	genLabel
                           1927 ;	genFunction
                           1928 ;	---------------------------------
                           1929 ; Function updatePlayer
                           1930 ; ---------------------------------
   050F                    1931 ___updatePlayer_start:
   050F                    1932 _updatePlayer:
   050F E8 FC              1933 	lda	sp,-4(sp)
                           1934 ;	ld.c 268
                           1935 ;	genCall
                           1936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0511 CD 00 00           1937 	call	_joypad
                           1938 ;	AOP_HL for _joy_status
   0514 21 BA 06           1939 	ld	hl,#_joy_status
   0517 73                 1940 	ld	(hl),e
                           1941 ;	ld.c 269
                           1942 ;	genCall
                           1943 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0518 CD 00 00           1944 	call	_joypad
   051B 4B                 1945 	ld	c,e
                           1946 ;	genAnd
   051C 79                 1947 	ld	a,c
   051D E6 20              1948 	and	a,#0x20
   051F 20 03              1949 	jr	nz,00145$
   0521 C3 27 05           1950 	jp	00102$
   0524                    1951 00145$:
                           1952 ;	ld.c 270
                           1953 ;	genCall
                           1954 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0524 CD 4B 0C           1955 	call	_shoot
                           1956 ;	genLabel
   0527                    1957 00102$:
                           1958 ;	ld.c 273
                           1959 ;	genAnd
                           1960 ;	AOP_HL for _joy_status
   0527 21 BA 06           1961 	ld	hl,#_joy_status
   052A 7E                 1962 	ld	a,(hl)
   052B E6 04              1963 	and	a,#0x04
   052D 20 03              1964 	jr	nz,00146$
   052F C3 36 05           1965 	jp	00104$
   0532                    1966 00146$:
                           1967 ;	ld.c 274
                           1968 ;	genMinus
                           1969 ;	AOP_HL for _y
   0532 21 C1 06           1970 	ld	hl,#_y
   0535 35                 1971 	dec	(hl)
                           1972 ;	genLabel
   0536                    1973 00104$:
                           1974 ;	ld.c 275
                           1975 ;	genAnd
                           1976 ;	AOP_HL for _joy_status
   0536 21 BA 06           1977 	ld	hl,#_joy_status
   0539 7E                 1978 	ld	a,(hl)
   053A E6 08              1979 	and	a,#0x08
   053C 20 03              1980 	jr	nz,00147$
   053E C3 45 05           1981 	jp	00106$
   0541                    1982 00147$:
                           1983 ;	ld.c 276
                           1984 ;	genPlus
                           1985 ;	AOP_HL for _y
                           1986 ;	genPlusIncr
   0541 21 C1 06           1987 	ld	hl,#_y
   0544 34                 1988 	inc	(hl)
                           1989 ;	genLabel
   0545                    1990 00106$:
                           1991 ;	ld.c 277
                           1992 ;	genAnd
                           1993 ;	AOP_HL for _joy_status
   0545 21 BA 06           1994 	ld	hl,#_joy_status
   0548 7E                 1995 	ld	a,(hl)
   0549 E6 02              1996 	and	a,#0x02
   054B 20 03              1997 	jr	nz,00148$
   054D C3 54 05           1998 	jp	00108$
   0550                    1999 00148$:
                           2000 ;	ld.c 278
                           2001 ;	genMinus
                           2002 ;	AOP_HL for _x
   0550 21 C0 06           2003 	ld	hl,#_x
   0553 35                 2004 	dec	(hl)
                           2005 ;	genLabel
   0554                    2006 00108$:
                           2007 ;	ld.c 279
                           2008 ;	genAnd
                           2009 ;	AOP_HL for _joy_status
   0554 21 BA 06           2010 	ld	hl,#_joy_status
   0557 7E                 2011 	ld	a,(hl)
   0558 E6 01              2012 	and	a,#0x01
   055A 20 03              2013 	jr	nz,00149$
   055C C3 63 05           2014 	jp	00110$
   055F                    2015 00149$:
                           2016 ;	ld.c 280
                           2017 ;	genPlus
                           2018 ;	AOP_HL for _x
                           2019 ;	genPlusIncr
   055F 21 C0 06           2020 	ld	hl,#_x
   0562 34                 2021 	inc	(hl)
                           2022 ;	genLabel
   0563                    2023 00110$:
                           2024 ;	ld.c 283
                           2025 ;	genCmpLt
                           2026 ;	AOP_HL for _x
   0563 21 C0 06           2027 	ld	hl,#_x
   0566 7E                 2028 	ld	a,(hl)
   0567 FE 08              2029 	cp	#0x08
   0569 D2 6E 05           2030 	jp	nc,00112$
                           2031 ;	ld.c 284
                           2032 ;	genAssign
                           2033 ;	AOP_HL for _x
   056C 36 08              2034 	ld	(hl),#0x08
                           2035 ;	genLabel
   056E                    2036 00112$:
                           2037 ;	ld.c 287
                           2038 ;	genCmpGt
                           2039 ;	AOP_HL for _x
   056E 3E 98              2040 	ld	a,#0x98
   0570 21 C0 06           2041 	ld	hl,#_x
   0573 96                 2042 	sub	a,(hl)
   0574 D2 79 05           2043 	jp	nc,00114$
                           2044 ;	ld.c 288
                           2045 ;	genAssign
                           2046 ;	AOP_HL for _x
   0577 36 98              2047 	ld	(hl),#0x98
                           2048 ;	genLabel
   0579                    2049 00114$:
                           2050 ;	ld.c 291
                           2051 ;	genCmpLt
                           2052 ;	AOP_HL for _y
   0579 21 C1 06           2053 	ld	hl,#_y
   057C 7E                 2054 	ld	a,(hl)
   057D FE 10              2055 	cp	#0x10
   057F D2 84 05           2056 	jp	nc,00116$
                           2057 ;	ld.c 292
                           2058 ;	genAssign
                           2059 ;	AOP_HL for _y
   0582 36 10              2060 	ld	(hl),#0x10
                           2061 ;	genLabel
   0584                    2062 00116$:
                           2063 ;	ld.c 295
                           2064 ;	genCmpGt
                           2065 ;	AOP_HL for _y
   0584 3E 90              2066 	ld	a,#0x90
   0586 21 C1 06           2067 	ld	hl,#_y
   0589 96                 2068 	sub	a,(hl)
   058A D2 8F 05           2069 	jp	nc,00118$
                           2070 ;	ld.c 296
                           2071 ;	genAssign
                           2072 ;	AOP_HL for _y
   058D 36 90              2073 	ld	(hl),#0x90
                           2074 ;	genLabel
   058F                    2075 00118$:
                           2076 ;	ld.c 299
                           2077 ;	genIpush
                           2078 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2079 ;	AOP_HL for _y
   058F 21 C1 06           2080 	ld	hl,#_y
   0592 7E                 2081 	ld	a,(hl)
   0593 F5                 2082 	push	af
   0594 33                 2083 	inc	sp
                           2084 ;	genIpush
                           2085 ;	AOP_HL for _x
   0595 21 C0 06           2086 	ld	hl,#_x
   0598 7E                 2087 	ld	a,(hl)
   0599 F5                 2088 	push	af
   059A 33                 2089 	inc	sp
                           2090 ;	genIpush
   059B 3E 00              2091 	ld	a,#0x00
   059D F5                 2092 	push	af
   059E 33                 2093 	inc	sp
                           2094 ;	genCall
   059F CD 00 00           2095 	call	_move_sprite
   05A2 E8 03              2096 	lda	sp,3(sp)
                           2097 ;	ld.c 300
                           2098 ;	genPlus
                           2099 ;	AOP_HL for _x
                           2100 ;	genPlusIncr
                           2101 ;	Can't optimise plus by inc, falling back to the normal way
   05A4 21 C0 06           2102 	ld	hl,#_x
   05A7 7E                 2103 	ld	a,(hl)
   05A8 C6 08              2104 	add	a,#0x08
   05AA 4F                 2105 	ld	c,a
                           2106 ;	genIpush
                           2107 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2108 ;	AOP_HL for _y
   05AB 21 C1 06           2109 	ld	hl,#_y
   05AE 7E                 2110 	ld	a,(hl)
   05AF F5                 2111 	push	af
   05B0 33                 2112 	inc	sp
                           2113 ;	genIpush
   05B1 79                 2114 	ld	a,c
   05B2 F5                 2115 	push	af
   05B3 33                 2116 	inc	sp
                           2117 ;	genIpush
   05B4 3E 01              2118 	ld	a,#0x01
   05B6 F5                 2119 	push	af
   05B7 33                 2120 	inc	sp
                           2121 ;	genCall
   05B8 CD 00 00           2122 	call	_move_sprite
   05BB E8 03              2123 	lda	sp,3(sp)
                           2124 ;	ld.c 301
                           2125 ;	genIpush
                           2126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05BD 21 06 00           2127 	ld	hl,#0x0006
   05C0 E5                 2128 	push	hl
                           2129 ;	genCall
   05C1 CD 00 00           2130 	call	_delay
   05C4 E8 02              2131 	lda	sp,2(sp)
                           2132 ;	ld.c 304
                           2133 ;	genAssign
   05C6 0E 00              2134 	ld	c,#0x00
                           2135 ;	genLabel
   05C8                    2136 00125$:
                           2137 ;	genCmpEq
                           2138 ; genCmpEq: left 1, right 1, result 0
   05C8 79                 2139 	ld	a,c
   05C9 FE 07              2140 	cp	a,#0x07
   05CB CA 58 06           2141 	jp	z,00128$
   05CE                    2142 00150$:
                           2143 ;	ld.c 305
                           2144 ;	genPlus
                           2145 ;	AOP_STK for _updatePlayer_sloc0_1_0
                           2146 ;	Can't optimise plus by inc, falling back to the normal way
   05CE 11 D3 06           2147 	ld	de,#_es
   05D1 69                 2148 	ld	l,c
   05D2 26 00              2149 	ld	h,#0x00
   05D4 19                 2150 	add	hl,de
   05D5 7D                 2151 	ld	a,l
   05D6 54                 2152 	ld	d,h
   05D7 F8 02              2153 	lda	hl,2(sp)
                           2154 ;	genPointerGet
                           2155 ;	AOP_STK for _updatePlayer_sloc0_1_0
   05D9 22                 2156 	ld	(hl+),a
   05DA 72                 2157 	ld	(hl),d
   05DB 5F                 2158 	ld	e,a
   05DC 1A                 2159 	ld	a,(de)
                           2160 ;	genCmpEq
                           2161 ; genCmpEq: left 1, right 1, result 0
   05DD 47                 2162 	ld	b,a
   05DE B7                 2163 	or	a,a
   05DF C2 54 06           2164 	jp	nz,00127$
   05E2 18 03              2165 	jr	00152$
   05E4                    2166 00151$:
   05E4 C3 54 06           2167 	jp	00127$
   05E7                    2168 00152$:
                           2169 ;	ld.c 306
                           2170 ;	genPlus
                           2171 ;	AOP_STK for _updatePlayer_sloc0_1_0
                           2172 ;	Can't optimise plus by inc, falling back to the normal way
   05E7 11 CC 06           2173 	ld	de,#_ey
   05EA 69                 2174 	ld	l,c
   05EB 26 00              2175 	ld	h,#0x00
   05ED 19                 2176 	add	hl,de
   05EE 7D                 2177 	ld	a,l
   05EF 54                 2178 	ld	d,h
   05F0 F8 02              2179 	lda	hl,2(sp)
                           2180 ;	genPointerGet
                           2181 ;	AOP_STK for _updatePlayer_sloc0_1_0
   05F2 22                 2182 	ld	(hl+),a
   05F3 72                 2183 	ld	(hl),d
   05F4 5F                 2184 	ld	e,a
   05F5 1A                 2185 	ld	a,(de)
   05F6 47                 2186 	ld	b,a
                           2187 ;	genPlus
                           2188 ;	AOP_STK for _updatePlayer_sloc0_1_0
                           2189 ;	Can't optimise plus by inc, falling back to the normal way
   05F7 11 C5 06           2190 	ld	de,#_ex
   05FA 69                 2191 	ld	l,c
   05FB 26 00              2192 	ld	h,#0x00
   05FD 19                 2193 	add	hl,de
   05FE 7D                 2194 	ld	a,l
   05FF 54                 2195 	ld	d,h
   0600 F8 02              2196 	lda	hl,2(sp)
                           2197 ;	genPointerGet
                           2198 ;	AOP_STK for _updatePlayer_sloc0_1_0
                           2199 ;	AOP_STK for _updatePlayer_sloc1_1_0
   0602 22                 2200 	ld	(hl+),a
   0603 72                 2201 	ld	(hl),d
   0604 5F                 2202 	ld	e,a
   0605 1A                 2203 	ld	a,(de)
   0606 2B                 2204 	dec	hl
   0607 2B                 2205 	dec	hl
   0608 77                 2206 	ld	(hl),a
                           2207 ;	genPlus
                           2208 ;	AOP_HL for _y
                           2209 ;	AOP_STK for _updatePlayer_sloc0_1_0
                           2210 ;	genPlusIncr
                           2211 ;	Can't optimise plus by inc, falling back to the normal way
   0609 21 C1 06           2212 	ld	hl,#_y
   060C 7E                 2213 	ld	a,(hl)
   060D C6 08              2214 	add	a,#0x08
   060F F8 02              2215 	lda	hl,2(sp)
   0611 77                 2216 	ld	(hl),a
                           2217 ;	genPlus
                           2218 ;	AOP_HL for _x
                           2219 ;	AOP_STK for _updatePlayer_sloc2_1_0
                           2220 ;	genPlusIncr
                           2221 ;	Can't optimise plus by inc, falling back to the normal way
   0612 21 C0 06           2222 	ld	hl,#_x
   0615 7E                 2223 	ld	a,(hl)
   0616 C6 04              2224 	add	a,#0x04
   0618 F8 00              2225 	lda	hl,0(sp)
   061A 77                 2226 	ld	(hl),a
                           2227 ;	genIpush
                           2228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   061B C5                 2229 	push	bc
   061C 21 10 10           2230 	ld	hl,#0x1010
   061F E5                 2231 	push	hl
                           2232 ;	genIpush
   0620 78                 2233 	ld	a,b
   0621 F5                 2234 	push	af
   0622 33                 2235 	inc	sp
                           2236 ;	genIpush
                           2237 ;	AOP_STK for _updatePlayer_sloc1_1_0
   0623 F8 06              2238 	lda	hl,6(sp)
   0625 7E                 2239 	ld	a,(hl)
   0626 F5                 2240 	push	af
   0627 33                 2241 	inc	sp
                           2242 ;	genIpush
   0628 21 08 08           2243 	ld	hl,#0x0808
   062B E5                 2244 	push	hl
                           2245 ;	genIpush
                           2246 ;	AOP_STK for _updatePlayer_sloc0_1_0
   062C F8 0A              2247 	lda	hl,10(sp)
   062E 7E                 2248 	ld	a,(hl)
   062F F5                 2249 	push	af
   0630 33                 2250 	inc	sp
                           2251 ;	genIpush
                           2252 ;	AOP_STK for _updatePlayer_sloc2_1_0
   0631 2B                 2253 	dec	hl
   0632 2B                 2254 	dec	hl
   0633 7E                 2255 	ld	a,(hl)
   0634 F5                 2256 	push	af
   0635 33                 2257 	inc	sp
                           2258 ;	genCall
   0636 CD CA 0C           2259 	call	_overlap
   0639 43                 2260 	ld	b,e
   063A E8 08              2261 	lda	sp,8(sp)
   063C E1                 2262 	pop	hl
   063D 4D                 2263 	ld	c,l
                           2264 ;	genIfx
   063E AF                 2265 	xor	a,a
   063F B0                 2266 	or	a,b
   0640 CA 54 06           2267 	jp	z,00127$
                           2268 ;	ld.c 307
                           2269 ;	genIpush
                           2270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0643 C5                 2271 	push	bc
   0644 79                 2272 	ld	a,c
   0645 F5                 2273 	push	af
   0646 33                 2274 	inc	sp
                           2275 ;	genCall
   0647 CD 25 0D           2276 	call	_killEnemy
   064A E8 01              2277 	lda	sp,1(sp)
   064C E1                 2278 	pop	hl
   064D 4D                 2279 	ld	c,l
                           2280 ;	ld.c 308
                           2281 ;	genCall
                           2282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   064E C5                 2283 	push	bc
   064F CD 7F 0D           2284 	call	_hurtPlayer
   0652 E1                 2285 	pop	hl
   0653 4D                 2286 	ld	c,l
                           2287 ;	genLabel
   0654                    2288 00127$:
                           2289 ;	ld.c 304
                           2290 ;	genPlus
                           2291 ;	genPlusIncr
                           2292 ; Removed redundent load
   0654 0C                 2293 	inc	c
                           2294 ;	genGoto
   0655 C3 C8 05           2295 	jp	00125$
                           2296 ;	genLabel
   0658                    2297 00128$:
                           2298 ;	ld.c 314
                           2299 ;	genCmpGt
                           2300 ;	AOP_HL for _lastTimeShot
   0658 3E 00              2301 	ld	a,#0x00
   065A 21 C2 06           2302 	ld	hl,#_lastTimeShot
   065D 96                 2303 	sub	a,(hl)
   065E D2 62 06           2304 	jp	nc,00129$
                           2305 ;	ld.c 315
                           2306 ;	genMinus
                           2307 ;	AOP_HL for _lastTimeShot
   0661 35                 2308 	dec	(hl)
                           2309 ;	genLabel
   0662                    2310 00129$:
                           2311 ;	genEndFunction
   0662 E8 04              2312 	lda	sp,4(sp)
   0664 C9                 2313 	ret
   0665                    2314 ___updatePlayer_end:
                           2315 ;	ld.c 319
                           2316 ;	genLabel
                           2317 ;	genFunction
                           2318 ;	---------------------------------
                           2319 ; Function getEnemySpriteIndex
                           2320 ; ---------------------------------
   0665                    2321 ___getEnemySpriteIndex_start:
   0665                    2322 _getEnemySpriteIndex:
                           2323 	
                           2324 ;	ld.c 320
                           2325 ;	genCast
                           2326 ;	AOP_STK for 
   0665 F8 02              2327 	lda	hl,2(sp)
   0667 4E                 2328 	ld	c,(hl)
   0668 06 00              2329 	ld	b,#0x00
                           2330 ;	genLeftShift
   066A CB 21              2331 	sla	c
   066C CB 10              2332 	rl	b
                           2333 ;	genPlus
                           2334 ;	genPlusIncr
   066E 03                 2335 	inc	bc
   066F 03                 2336 	inc	bc
                           2337 ;	genCast
                           2338 ; Removed redundent load
                           2339 ;	genRet
   0670 59                 2340 	ld	e,c
                           2341 ;	genLabel
   0671                    2342 00101$:
                           2343 ;	genEndFunction
                           2344 	
   0671 C9                 2345 	ret
   0672                    2346 ___getEnemySpriteIndex_end:
                           2347 ;	ld.c 323
                           2348 ;	genLabel
                           2349 ;	genFunction
                           2350 ;	---------------------------------
                           2351 ; Function getEnemySpriteIndexFast
                           2352 ; ---------------------------------
   0672                    2353 ___getEnemySpriteIndexFast_start:
   0672                    2354 _getEnemySpriteIndexFast:
                           2355 	
                           2356 ;	ld.c 325
                           2357 ;	genCmpEq
                           2358 ;	AOP_STK for 
                           2359 ; genCmpEq: left 1, right 1, result 0
   0672 F8 02              2360 	lda	hl,2(sp)
   0674 7E                 2361 	ld	a,(hl)
   0675 B7                 2362 	or	a,a
   0676 C2 83 06           2363 	jp	nz,00102$
   0679 18 03              2364 	jr	00137$
   067B                    2365 00136$:
   067B C3 83 06           2366 	jp	00102$
   067E                    2367 00137$:
                           2368 ;	genRet
   067E 1E 02              2369 	ld	e,#0x02
   0680 C3 34 07           2370 	jp	00123$
                           2371 ;	genLabel
   0683                    2372 00102$:
                           2373 ;	ld.c 326
                           2374 ;	genCmpEq
                           2375 ;	AOP_STK for 
                           2376 ; genCmpEq: left 1, right 1, result 0
   0683 F8 02              2377 	lda	hl,2(sp)
   0685 7E                 2378 	ld	a,(hl)
   0686 FE 01              2379 	cp	a,#0x01
   0688 C2 95 06           2380 	jp	nz,00104$
   068B 18 03              2381 	jr	00139$
   068D                    2382 00138$:
   068D C3 95 06           2383 	jp	00104$
   0690                    2384 00139$:
                           2385 ;	genRet
   0690 1E 04              2386 	ld	e,#0x04
   0692 C3 34 07           2387 	jp	00123$
                           2388 ;	genLabel
   0695                    2389 00104$:
                           2390 ;	ld.c 327
                           2391 ;	genCmpEq
                           2392 ;	AOP_STK for 
                           2393 ; genCmpEq: left 1, right 1, result 0
   0695 F8 02              2394 	lda	hl,2(sp)
   0697 7E                 2395 	ld	a,(hl)
   0698 FE 02              2396 	cp	a,#0x02
   069A C2 A7 06           2397 	jp	nz,00106$
   069D 18 03              2398 	jr	00141$
   069F                    2399 00140$:
   069F C3 A7 06           2400 	jp	00106$
   06A2                    2401 00141$:
                           2402 ;	genRet
   06A2 1E 06              2403 	ld	e,#0x06
   06A4 C3 34 07           2404 	jp	00123$
                           2405 ;	genLabel
   06A7                    2406 00106$:
                           2407 ;	ld.c 328
                           2408 ;	genCmpEq
                           2409 ;	AOP_STK for 
                           2410 ; genCmpEq: left 1, right 1, result 0
   06A7 F8 02              2411 	lda	hl,2(sp)
   06A9 7E                 2412 	ld	a,(hl)
   06AA FE 03              2413 	cp	a,#0x03
   06AC C2 B9 06           2414 	jp	nz,00108$
   06AF 18 03              2415 	jr	00143$
   06B1                    2416 00142$:
   06B1 C3 B9 06           2417 	jp	00108$
   06B4                    2418 00143$:
                           2419 ;	genRet
   06B4 1E 08              2420 	ld	e,#0x08
   06B6 C3 34 07           2421 	jp	00123$
                           2422 ;	genLabel
   06B9                    2423 00108$:
                           2424 ;	ld.c 329
                           2425 ;	genCmpEq
                           2426 ;	AOP_STK for 
                           2427 ; genCmpEq: left 1, right 1, result 0
   06B9 F8 02              2428 	lda	hl,2(sp)
   06BB 7E                 2429 	ld	a,(hl)
   06BC FE 04              2430 	cp	a,#0x04
   06BE C2 CB 06           2431 	jp	nz,00110$
   06C1 18 03              2432 	jr	00145$
   06C3                    2433 00144$:
   06C3 C3 CB 06           2434 	jp	00110$
   06C6                    2435 00145$:
                           2436 ;	genRet
   06C6 1E 0A              2437 	ld	e,#0x0A
   06C8 C3 34 07           2438 	jp	00123$
                           2439 ;	genLabel
   06CB                    2440 00110$:
                           2441 ;	ld.c 330
                           2442 ;	genCmpEq
                           2443 ;	AOP_STK for 
                           2444 ; genCmpEq: left 1, right 1, result 0
   06CB F8 02              2445 	lda	hl,2(sp)
   06CD 7E                 2446 	ld	a,(hl)
   06CE FE 05              2447 	cp	a,#0x05
   06D0 C2 DD 06           2448 	jp	nz,00112$
   06D3 18 03              2449 	jr	00147$
   06D5                    2450 00146$:
   06D5 C3 DD 06           2451 	jp	00112$
   06D8                    2452 00147$:
                           2453 ;	genRet
   06D8 1E 0C              2454 	ld	e,#0x0C
   06DA C3 34 07           2455 	jp	00123$
                           2456 ;	genLabel
   06DD                    2457 00112$:
                           2458 ;	ld.c 331
                           2459 ;	genCmpEq
                           2460 ;	AOP_STK for 
                           2461 ; genCmpEq: left 1, right 1, result 0
   06DD F8 02              2462 	lda	hl,2(sp)
   06DF 7E                 2463 	ld	a,(hl)
   06E0 FE 06              2464 	cp	a,#0x06
   06E2 C2 EF 06           2465 	jp	nz,00114$
   06E5 18 03              2466 	jr	00149$
   06E7                    2467 00148$:
   06E7 C3 EF 06           2468 	jp	00114$
   06EA                    2469 00149$:
                           2470 ;	genRet
   06EA 1E 0E              2471 	ld	e,#0x0E
   06EC C3 34 07           2472 	jp	00123$
                           2473 ;	genLabel
   06EF                    2474 00114$:
                           2475 ;	ld.c 332
                           2476 ;	genCmpEq
                           2477 ;	AOP_STK for 
                           2478 ; genCmpEq: left 1, right 1, result 0
   06EF F8 02              2479 	lda	hl,2(sp)
   06F1 7E                 2480 	ld	a,(hl)
   06F2 FE 07              2481 	cp	a,#0x07
   06F4 C2 01 07           2482 	jp	nz,00116$
   06F7 18 03              2483 	jr	00151$
   06F9                    2484 00150$:
   06F9 C3 01 07           2485 	jp	00116$
   06FC                    2486 00151$:
                           2487 ;	genRet
   06FC 1E 10              2488 	ld	e,#0x10
   06FE C3 34 07           2489 	jp	00123$
                           2490 ;	genLabel
   0701                    2491 00116$:
                           2492 ;	ld.c 333
                           2493 ;	genCmpEq
                           2494 ;	AOP_STK for 
                           2495 ; genCmpEq: left 1, right 1, result 0
   0701 F8 02              2496 	lda	hl,2(sp)
   0703 7E                 2497 	ld	a,(hl)
   0704 FE 08              2498 	cp	a,#0x08
   0706 C2 13 07           2499 	jp	nz,00118$
   0709 18 03              2500 	jr	00153$
   070B                    2501 00152$:
   070B C3 13 07           2502 	jp	00118$
   070E                    2503 00153$:
                           2504 ;	genRet
   070E 1E 12              2505 	ld	e,#0x12
   0710 C3 34 07           2506 	jp	00123$
                           2507 ;	genLabel
   0713                    2508 00118$:
                           2509 ;	ld.c 334
                           2510 ;	genCmpEq
                           2511 ;	AOP_STK for 
                           2512 ; genCmpEq: left 1, right 1, result 0
   0713 F8 02              2513 	lda	hl,2(sp)
   0715 7E                 2514 	ld	a,(hl)
   0716 FE 09              2515 	cp	a,#0x09
   0718 C2 25 07           2516 	jp	nz,00120$
   071B 18 03              2517 	jr	00155$
   071D                    2518 00154$:
   071D C3 25 07           2519 	jp	00120$
   0720                    2520 00155$:
                           2521 ;	genRet
   0720 1E 14              2522 	ld	e,#0x14
   0722 C3 34 07           2523 	jp	00123$
                           2524 ;	genLabel
   0725                    2525 00120$:
                           2526 ;	ld.c 335
                           2527 ;	genCmpEq
                           2528 ;	AOP_STK for 
                           2529 ; genCmpEq: left 1, right 1, result 0
   0725 F8 02              2530 	lda	hl,2(sp)
   0727 7E                 2531 	ld	a,(hl)
   0728 FE 0A              2532 	cp	a,#0x0A
   072A C2 34 07           2533 	jp	nz,00123$
   072D 18 03              2534 	jr	00157$
   072F                    2535 00156$:
   072F C3 34 07           2536 	jp	00123$
   0732                    2537 00157$:
                           2538 ;	genRet
   0732 1E 16              2539 	ld	e,#0x16
                           2540 ;	genLabel
   0734                    2541 00123$:
                           2542 ;	genEndFunction
                           2543 	
   0734 C9                 2544 	ret
   0735                    2545 ___getEnemySpriteIndexFast_end:
                           2546 ;	ld.c 338
                           2547 ;	genLabel
                           2548 ;	genFunction
                           2549 ;	---------------------------------
                           2550 ; Function getLaserSpriteIndexFast
                           2551 ; ---------------------------------
   0735                    2552 ___getLaserSpriteIndexFast_start:
   0735                    2553 _getLaserSpriteIndexFast:
                           2554 	
                           2555 ;	ld.c 339
                           2556 ;	genCmpEq
                           2557 ;	AOP_STK for 
                           2558 ; genCmpEq: left 1, right 1, result 0
   0735 F8 02              2559 	lda	hl,2(sp)
   0737 7E                 2560 	ld	a,(hl)
   0738 B7                 2561 	or	a,a
   0739 C2 46 07           2562 	jp	nz,00102$
   073C 18 03              2563 	jr	00137$
   073E                    2564 00136$:
   073E C3 46 07           2565 	jp	00102$
   0741                    2566 00137$:
                           2567 ;	genRet
   0741 1E 18              2568 	ld	e,#0x18
   0743 C3 F7 07           2569 	jp	00123$
                           2570 ;	genLabel
   0746                    2571 00102$:
                           2572 ;	ld.c 340
                           2573 ;	genCmpEq
                           2574 ;	AOP_STK for 
                           2575 ; genCmpEq: left 1, right 1, result 0
   0746 F8 02              2576 	lda	hl,2(sp)
   0748 7E                 2577 	ld	a,(hl)
   0749 FE 01              2578 	cp	a,#0x01
   074B C2 58 07           2579 	jp	nz,00104$
   074E 18 03              2580 	jr	00139$
   0750                    2581 00138$:
   0750 C3 58 07           2582 	jp	00104$
   0753                    2583 00139$:
                           2584 ;	genRet
   0753 1E 1A              2585 	ld	e,#0x1A
   0755 C3 F7 07           2586 	jp	00123$
                           2587 ;	genLabel
   0758                    2588 00104$:
                           2589 ;	ld.c 341
                           2590 ;	genCmpEq
                           2591 ;	AOP_STK for 
                           2592 ; genCmpEq: left 1, right 1, result 0
   0758 F8 02              2593 	lda	hl,2(sp)
   075A 7E                 2594 	ld	a,(hl)
   075B FE 02              2595 	cp	a,#0x02
   075D C2 6A 07           2596 	jp	nz,00106$
   0760 18 03              2597 	jr	00141$
   0762                    2598 00140$:
   0762 C3 6A 07           2599 	jp	00106$
   0765                    2600 00141$:
                           2601 ;	genRet
   0765 1E 1C              2602 	ld	e,#0x1C
   0767 C3 F7 07           2603 	jp	00123$
                           2604 ;	genLabel
   076A                    2605 00106$:
                           2606 ;	ld.c 342
                           2607 ;	genCmpEq
                           2608 ;	AOP_STK for 
                           2609 ; genCmpEq: left 1, right 1, result 0
   076A F8 02              2610 	lda	hl,2(sp)
   076C 7E                 2611 	ld	a,(hl)
   076D FE 03              2612 	cp	a,#0x03
   076F C2 7C 07           2613 	jp	nz,00108$
   0772 18 03              2614 	jr	00143$
   0774                    2615 00142$:
   0774 C3 7C 07           2616 	jp	00108$
   0777                    2617 00143$:
                           2618 ;	genRet
   0777 1E 1E              2619 	ld	e,#0x1E
   0779 C3 F7 07           2620 	jp	00123$
                           2621 ;	genLabel
   077C                    2622 00108$:
                           2623 ;	ld.c 343
                           2624 ;	genCmpEq
                           2625 ;	AOP_STK for 
                           2626 ; genCmpEq: left 1, right 1, result 0
   077C F8 02              2627 	lda	hl,2(sp)
   077E 7E                 2628 	ld	a,(hl)
   077F FE 04              2629 	cp	a,#0x04
   0781 C2 8E 07           2630 	jp	nz,00110$
   0784 18 03              2631 	jr	00145$
   0786                    2632 00144$:
   0786 C3 8E 07           2633 	jp	00110$
   0789                    2634 00145$:
                           2635 ;	genRet
   0789 1E 20              2636 	ld	e,#0x20
   078B C3 F7 07           2637 	jp	00123$
                           2638 ;	genLabel
   078E                    2639 00110$:
                           2640 ;	ld.c 344
                           2641 ;	genCmpEq
                           2642 ;	AOP_STK for 
                           2643 ; genCmpEq: left 1, right 1, result 0
   078E F8 02              2644 	lda	hl,2(sp)
   0790 7E                 2645 	ld	a,(hl)
   0791 FE 05              2646 	cp	a,#0x05
   0793 C2 A0 07           2647 	jp	nz,00112$
   0796 18 03              2648 	jr	00147$
   0798                    2649 00146$:
   0798 C3 A0 07           2650 	jp	00112$
   079B                    2651 00147$:
                           2652 ;	genRet
   079B 1E 22              2653 	ld	e,#0x22
   079D C3 F7 07           2654 	jp	00123$
                           2655 ;	genLabel
   07A0                    2656 00112$:
                           2657 ;	ld.c 345
                           2658 ;	genCmpEq
                           2659 ;	AOP_STK for 
                           2660 ; genCmpEq: left 1, right 1, result 0
   07A0 F8 02              2661 	lda	hl,2(sp)
   07A2 7E                 2662 	ld	a,(hl)
   07A3 FE 06              2663 	cp	a,#0x06
   07A5 C2 B2 07           2664 	jp	nz,00114$
   07A8 18 03              2665 	jr	00149$
   07AA                    2666 00148$:
   07AA C3 B2 07           2667 	jp	00114$
   07AD                    2668 00149$:
                           2669 ;	genRet
   07AD 1E 24              2670 	ld	e,#0x24
   07AF C3 F7 07           2671 	jp	00123$
                           2672 ;	genLabel
   07B2                    2673 00114$:
                           2674 ;	ld.c 346
                           2675 ;	genCmpEq
                           2676 ;	AOP_STK for 
                           2677 ; genCmpEq: left 1, right 1, result 0
   07B2 F8 02              2678 	lda	hl,2(sp)
   07B4 7E                 2679 	ld	a,(hl)
   07B5 FE 07              2680 	cp	a,#0x07
   07B7 C2 C4 07           2681 	jp	nz,00116$
   07BA 18 03              2682 	jr	00151$
   07BC                    2683 00150$:
   07BC C3 C4 07           2684 	jp	00116$
   07BF                    2685 00151$:
                           2686 ;	genRet
   07BF 1E 26              2687 	ld	e,#0x26
   07C1 C3 F7 07           2688 	jp	00123$
                           2689 ;	genLabel
   07C4                    2690 00116$:
                           2691 ;	ld.c 347
                           2692 ;	genCmpEq
                           2693 ;	AOP_STK for 
                           2694 ; genCmpEq: left 1, right 1, result 0
   07C4 F8 02              2695 	lda	hl,2(sp)
   07C6 7E                 2696 	ld	a,(hl)
   07C7 FE 08              2697 	cp	a,#0x08
   07C9 C2 D6 07           2698 	jp	nz,00118$
   07CC 18 03              2699 	jr	00153$
   07CE                    2700 00152$:
   07CE C3 D6 07           2701 	jp	00118$
   07D1                    2702 00153$:
                           2703 ;	genRet
   07D1 1E 28              2704 	ld	e,#0x28
   07D3 C3 F7 07           2705 	jp	00123$
                           2706 ;	genLabel
   07D6                    2707 00118$:
                           2708 ;	ld.c 348
                           2709 ;	genCmpEq
                           2710 ;	AOP_STK for 
                           2711 ; genCmpEq: left 1, right 1, result 0
   07D6 F8 02              2712 	lda	hl,2(sp)
   07D8 7E                 2713 	ld	a,(hl)
   07D9 FE 09              2714 	cp	a,#0x09
   07DB C2 E8 07           2715 	jp	nz,00120$
   07DE 18 03              2716 	jr	00155$
   07E0                    2717 00154$:
   07E0 C3 E8 07           2718 	jp	00120$
   07E3                    2719 00155$:
                           2720 ;	genRet
   07E3 1E 2A              2721 	ld	e,#0x2A
   07E5 C3 F7 07           2722 	jp	00123$
                           2723 ;	genLabel
   07E8                    2724 00120$:
                           2725 ;	ld.c 349
                           2726 ;	genCmpEq
                           2727 ;	AOP_STK for 
                           2728 ; genCmpEq: left 1, right 1, result 0
   07E8 F8 02              2729 	lda	hl,2(sp)
   07EA 7E                 2730 	ld	a,(hl)
   07EB FE 0A              2731 	cp	a,#0x0A
   07ED C2 F7 07           2732 	jp	nz,00123$
   07F0 18 03              2733 	jr	00157$
   07F2                    2734 00156$:
   07F2 C3 F7 07           2735 	jp	00123$
   07F5                    2736 00157$:
                           2737 ;	genRet
   07F5 1E 2C              2738 	ld	e,#0x2C
                           2739 ;	genLabel
   07F7                    2740 00123$:
                           2741 ;	genEndFunction
                           2742 	
   07F7 C9                 2743 	ret
   07F8                    2744 ___getLaserSpriteIndexFast_end:
                           2745 ;	ld.c 352
                           2746 ;	genLabel
                           2747 ;	genFunction
                           2748 ;	---------------------------------
                           2749 ; Function updateEnemies
                           2750 ; ---------------------------------
   07F8                    2751 ___updateEnemies_start:
   07F8                    2752 _updateEnemies:
   07F8 E8 F6              2753 	lda	sp,-10(sp)
                           2754 ;	ld.c 356
                           2755 ;	genAssign
   07FA 0E 00              2756 	ld	c,#0x00
                           2757 ;	genLabel
   07FC                    2758 00122$:
                           2759 ;	genCmpEq
                           2760 ; genCmpEq: left 1, right 1, result 0
   07FC 79                 2761 	ld	a,c
   07FD FE 07              2762 	cp	a,#0x07
   07FF CA 5C 0A           2763 	jp	z,00126$
   0802                    2764 00141$:
                           2765 ;	ld.c 358
                           2766 ;	genIpush
                           2767 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0802 C5                 2768 	push	bc
   0803 79                 2769 	ld	a,c
   0804 F5                 2770 	push	af
   0805 33                 2771 	inc	sp
                           2772 ;	genCall
   0806 CD 72 06           2773 	call	_getEnemySpriteIndexFast
                           2774 ;	AOP_HL for _currentID
   0809 21 C4 06           2775 	ld	hl,#_currentID
   080C 73                 2776 	ld	(hl),e
   080D E8 01              2777 	lda	sp,1(sp)
   080F E1                 2778 	pop	hl
   0810 4D                 2779 	ld	c,l
                           2780 ;	ld.c 360
                           2781 ;	genPlus
                           2782 ;	AOP_STK for _updateEnemies_sloc0_1_0
                           2783 ;	Can't optimise plus by inc, falling back to the normal way
   0811 11 D3 06           2784 	ld	de,#_es
   0814 69                 2785 	ld	l,c
   0815 26 00              2786 	ld	h,#0x00
   0817 19                 2787 	add	hl,de
   0818 7D                 2788 	ld	a,l
   0819 54                 2789 	ld	d,h
   081A F8 08              2790 	lda	hl,8(sp)
                           2791 ;	genPointerGet
                           2792 ;	AOP_STK for _updateEnemies_sloc0_1_0
   081C 22                 2793 	ld	(hl+),a
   081D 72                 2794 	ld	(hl),d
   081E 5F                 2795 	ld	e,a
   081F 1A                 2796 	ld	a,(de)
                           2797 ;	genCmpEq
                           2798 ; genCmpEq: left 1, right 1, result 0
   0820 47                 2799 	ld	b,a
   0821 B7                 2800 	or	a,a
   0822 C2 44 09           2801 	jp	nz,00113$
   0825 18 03              2802 	jr	00143$
   0827                    2803 00142$:
   0827 C3 44 09           2804 	jp	00113$
   082A                    2805 00143$:
                           2806 ;	ld.c 361
                           2807 ;	genPlus
                           2808 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           2809 ;	Can't optimise plus by inc, falling back to the normal way
   082A 11 CC 06           2810 	ld	de,#_ey
   082D 69                 2811 	ld	l,c
   082E 26 00              2812 	ld	h,#0x00
   0830 19                 2813 	add	hl,de
   0831 7D                 2814 	ld	a,l
   0832 54                 2815 	ld	d,h
   0833 F8 06              2816 	lda	hl,6(sp)
                           2817 ;	genPointerGet
                           2818 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           2819 ;	AOP_STK for _updateEnemies_sloc2_1_0
   0835 22                 2820 	ld	(hl+),a
   0836 72                 2821 	ld	(hl),d
   0837 5F                 2822 	ld	e,a
   0838 1A                 2823 	ld	a,(de)
   0839 2B                 2824 	dec	hl
   083A 2B                 2825 	dec	hl
                           2826 ;	genPlus
                           2827 ;	AOP_STK for _updateEnemies_sloc2_1_0
                           2828 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           2829 ;	genPlusIncr
                           2830 ;	Can't optimise plus by inc, falling back to the normal way
   083B 77                 2831 	ld      (hl),a
                           2832 ; Removed redundent load
   083C C6 01              2833 	add	a,#0x01
   083E 2B                 2834 	dec	hl
                           2835 ;	genAssign (pointer)
                           2836 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           2837 ;	AOP_STK for _updateEnemies_sloc3_1_0
   083F 22                 2838 	ld	(hl+),a
   0840 23                 2839 	inc	hl
   0841 5E                 2840 	ld	e,(hl)
   0842 23                 2841 	inc	hl
   0843 56                 2842 	ld	d,(hl)
   0844 F8 04              2843 	lda	hl,4(sp)
   0846 7E                 2844 	ld	a,(hl)
   0847 12                 2845 	ld	(de),a
                           2846 ;	ld.c 362
                           2847 ;	genCmpGt
                           2848 ;	AOP_STK for _updateEnemies_sloc3_1_0
   0848 3E 90              2849 	ld	a,#0x90
   084A 96                 2850 	sub	a,(hl)
   084B D2 73 08           2851 	jp	nc,00102$
                           2852 ;	ld.c 363
                           2853 ;	genAssign (pointer)
                           2854 ;	AOP_STK for _updateEnemies_sloc1_1_0
   084E 23                 2855 	inc	hl
   084F 23                 2856 	inc	hl
   0850 5E                 2857 	ld	e,(hl)
   0851 23                 2858 	inc	hl
   0852 56                 2859 	ld	d,(hl)
   0853 3E 00              2860 	ld	a,#0x00
   0855 12                 2861 	ld	(de),a
                           2862 ;	ld.c 364
                           2863 ;	genPlus
                           2864 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2865 ;	Can't optimise plus by inc, falling back to the normal way
   0856 11 C5 06           2866 	ld	de,#_ex
   0859 69                 2867 	ld	l,c
   085A 26 00              2868 	ld	h,#0x00
   085C 19                 2869 	add	hl,de
   085D 7D                 2870 	ld	a,l
   085E 54                 2871 	ld	d,h
   085F F8 02              2872 	lda	hl,2(sp)
   0861 22                 2873 	ld	(hl+),a
   0862 72                 2874 	ld	(hl),d
                           2875 ;	genCall
                           2876 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0863 C5                 2877 	push	bc
   0864 CD 7E 0E           2878 	call	_generateNewXPosition
                           2879 ;	AOP_STK for _updateEnemies_sloc3_1_0
   0867 F8 06              2880 	lda	hl,6(sp)
   0869 73                 2881 	ld	(hl),e
   086A C1                 2882 	pop	bc
                           2883 ;	genAssign (pointer)
                           2884 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2885 ;	AOP_STK for _updateEnemies_sloc3_1_0
   086B F8 02              2886 	lda	hl,2(sp)
   086D 5E                 2887 	ld	e,(hl)
   086E 23                 2888 	inc	hl
   086F 56                 2889 	ld	d,(hl)
   0870 23                 2890 	inc	hl
   0871 7E                 2891 	ld	a,(hl)
   0872 12                 2892 	ld	(de),a
                           2893 ;	genLabel
   0873                    2894 00102$:
                           2895 ;	ld.c 367
                           2896 ;	genCmpGt
                           2897 ;	AOP_HL for _score
   0873 3E 14              2898 	ld	a,#0x14
   0875 21 BE 06           2899 	ld	hl,#_score
   0878 96                 2900 	sub	a,(hl)
   0879 D2 DD 08           2901 	jp	nc,00108$
                           2902 ;	genCmpEq
                           2903 ; genCmpEq: left 1, right 1, result 0
   087C 79                 2904 	ld	a,c
   087D B7                 2905 	or	a,a
   087E CA 8C 08           2906 	jp	z,00111$
   0881                    2907 00144$:
                           2908 ;	genCmpEq
                           2909 ; genCmpEq: left 1, right 1, result 0
   0881 79                 2910 	ld	a,c
   0882 FE 04              2911 	cp	a,#0x04
   0884 C2 DD 08           2912 	jp	nz,00108$
   0887 18 03              2913 	jr	00146$
   0889                    2914 00145$:
   0889 C3 DD 08           2915 	jp	00108$
   088C                    2916 00146$:
                           2917 ;	genLabel
   088C                    2918 00111$:
                           2919 ;	genPointerGet
                           2920 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           2921 ;	AOP_STK for _updateEnemies_sloc4_1_0
   088C F8 06              2922 	lda	hl,6(sp)
   088E 5E                 2923 	ld	e,(hl)
   088F 23                 2924 	inc	hl
   0890 56                 2925 	ld	d,(hl)
   0891 1A                 2926 	ld	a,(de)
   0892 F8 02              2927 	lda	hl,2(sp)
                           2928 ;	genCmpLt
                           2929 ;	AOP_STK for _updateEnemies_sloc4_1_0
   0894 77                 2930 	ld      (hl),a
                           2931 ; Removed redundent load
   0895 FE 50              2932 	cp	#0x50
   0897 D2 DD 08           2933 	jp	nc,00108$
                           2934 ;	ld.c 369
                           2935 ;	genPlus
                           2936 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2937 ;	Can't optimise plus by inc, falling back to the normal way
   089A 11 C5 06           2938 	ld	de,#_ex
   089D 69                 2939 	ld	l,c
   089E 26 00              2940 	ld	h,#0x00
   08A0 19                 2941 	add	hl,de
   08A1 7D                 2942 	ld	a,l
   08A2 54                 2943 	ld	d,h
   08A3 F8 02              2944 	lda	hl,2(sp)
                           2945 ;	genPointerGet
                           2946 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2947 ;	AOP_STK for _updateEnemies_sloc3_1_0
   08A5 22                 2948 	ld	(hl+),a
   08A6 72                 2949 	ld	(hl),d
   08A7 5F                 2950 	ld	e,a
   08A8 1A                 2951 	ld	a,(de)
   08A9 23                 2952 	inc	hl
   08AA 77                 2953 	ld	(hl),a
                           2954 ;	genCmpGt
                           2955 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           2956 ;	AOP_HL for _x
   08AB 21 C0 06           2957 	ld	hl,#_x
   08AE 7E                 2958 	ld	a,(hl)
   08AF F8 04              2959 	lda	hl,4(sp)
   08B1 96                 2960 	sub	a,(hl)
   08B2 D2 C3 08           2961 	jp	nc,00104$
                           2962 ;	ld.c 370
                           2963 ;	genMinus
                           2964 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           2965 ;	AOP_STK for _updateEnemies_sloc2_1_0
   08B5 7E                 2966 	ld	a,(hl)
   08B6 C6 FF              2967 	add	a,#0xFF
   08B8 23                 2968 	inc	hl
   08B9 77                 2969 	ld	(hl),a
                           2970 ;	genAssign (pointer)
                           2971 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2972 ;	AOP_STK for _updateEnemies_sloc2_1_0
   08BA F8 02              2973 	lda	hl,2(sp)
   08BC 5E                 2974 	ld	e,(hl)
   08BD 23                 2975 	inc	hl
   08BE 56                 2976 	ld	d,(hl)
   08BF 23                 2977 	inc	hl
   08C0 23                 2978 	inc	hl
   08C1 7E                 2979 	ld	a,(hl)
   08C2 12                 2980 	ld	(de),a
                           2981 ;	genLabel
   08C3                    2982 00104$:
                           2983 ;	ld.c 373
                           2984 ;	genPointerGet
                           2985 ;	AOP_STK for _updateEnemies_sloc4_1_0
                           2986 ;	AOP_STK for _updateEnemies_sloc3_1_0
   08C3 F8 02              2987 	lda	hl,2(sp)
   08C5 5E                 2988 	ld	e,(hl)
   08C6 23                 2989 	inc	hl
   08C7 56                 2990 	ld	d,(hl)
   08C8 1A                 2991 	ld	a,(de)
   08C9 23                 2992 	inc	hl
                           2993 ;	genCmpLt
                           2994 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           2995 ;	AOP_HL for _x
   08CA 77                 2996 	ld      (hl),a
                           2997 ; Removed redundent load
   08CB 21 C0 06           2998 	ld	hl,#_x
   08CE 96                 2999 	sub	a,(hl)
   08CF D2 DD 08           3000 	jp	nc,00108$
                           3001 ;	ld.c 374
                           3002 ;	genPlus
                           3003 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           3004 ;	genPlusIncr
                           3005 ;	Can't optimise plus by inc, falling back to the normal way
   08D2 F8 04              3006 	lda	hl,4(sp)
   08D4 7E                 3007 	ld	a,(hl)
   08D5 C6 01              3008 	add	a,#0x01
                           3009 ;	genAssign (pointer)
                           3010 ;	AOP_STK for _updateEnemies_sloc4_1_0
   08D7 2B                 3011 	dec	hl
   08D8 2B                 3012 	dec	hl
   08D9 5E                 3013 	ld	e,(hl)
   08DA 23                 3014 	inc	hl
   08DB 56                 3015 	ld	d,(hl)
   08DC 12                 3016 	ld	(de),a
                           3017 ;	genLabel
   08DD                    3018 00108$:
                           3019 ;	ld.c 378
                           3020 ;	genPointerGet
                           3021 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           3022 ;	AOP_STK for _updateEnemies_sloc4_1_0
   08DD F8 06              3023 	lda	hl,6(sp)
   08DF 5E                 3024 	ld	e,(hl)
   08E0 23                 3025 	inc	hl
   08E1 56                 3026 	ld	d,(hl)
   08E2 1A                 3027 	ld	a,(de)
   08E3 F8 02              3028 	lda	hl,2(sp)
   08E5 77                 3029 	ld	(hl),a
                           3030 ;	genPlus
                           3031 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3032 ;	Can't optimise plus by inc, falling back to the normal way
   08E6 11 C5 06           3033 	ld	de,#_ex
   08E9 69                 3034 	ld	l,c
   08EA 26 00              3035 	ld	h,#0x00
   08EC 19                 3036 	add	hl,de
   08ED 7D                 3037 	ld	a,l
   08EE 54                 3038 	ld	d,h
   08EF F8 00              3039 	lda	hl,0(sp)
                           3040 ;	genPointerGet
                           3041 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3042 ;	AOP_STK for _updateEnemies_sloc3_1_0
   08F1 22                 3043 	ld	(hl+),a
   08F2 72                 3044 	ld	(hl),d
   08F3 5F                 3045 	ld	e,a
   08F4 1A                 3046 	ld	a,(de)
   08F5 F8 04              3047 	lda	hl,4(sp)
   08F7 77                 3048 	ld	(hl),a
                           3049 ;	genIpush
                           3050 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08F8 C5                 3051 	push	bc
                           3052 ;	AOP_STK for _updateEnemies_sloc4_1_0
   08F9 2B                 3053 	dec	hl
   08FA 2B                 3054 	dec	hl
   08FB 7E                 3055 	ld	a,(hl)
   08FC F5                 3056 	push	af
   08FD 33                 3057 	inc	sp
                           3058 ;	genIpush
                           3059 ;	AOP_STK for _updateEnemies_sloc3_1_0
   08FE 23                 3060 	inc	hl
   08FF 23                 3061 	inc	hl
   0900 7E                 3062 	ld	a,(hl)
   0901 F5                 3063 	push	af
   0902 33                 3064 	inc	sp
                           3065 ;	genIpush
                           3066 ;	AOP_HL for _currentID
   0903 21 C4 06           3067 	ld	hl,#_currentID
   0906 7E                 3068 	ld	a,(hl)
   0907 F5                 3069 	push	af
   0908 33                 3070 	inc	sp
                           3071 ;	genCall
   0909 CD 00 00           3072 	call	_move_sprite
   090C E8 03              3073 	lda	sp,3(sp)
   090E C1                 3074 	pop	bc
                           3075 ;	ld.c 379
                           3076 ;	genPointerGet
                           3077 ;	AOP_STK for _updateEnemies_sloc1_1_0
                           3078 ;	AOP_STK for _updateEnemies_sloc4_1_0
   090F F8 06              3079 	lda	hl,6(sp)
   0911 5E                 3080 	ld	e,(hl)
   0912 23                 3081 	inc	hl
   0913 56                 3082 	ld	d,(hl)
   0914 1A                 3083 	ld	a,(de)
   0915 F8 02              3084 	lda	hl,2(sp)
                           3085 ;	genPointerGet
                           3086 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3087 ;	AOP_STK for _updateEnemies_sloc3_1_0
   0917 32                 3088 	ld      (hl-),a
   0918 2B                 3089 	dec	hl
   0919 5E                 3090 	ld	e,(hl)
   091A 23                 3091 	inc	hl
   091B 56                 3092 	ld	d,(hl)
   091C 1A                 3093 	ld	a,(de)
   091D F8 04              3094 	lda	hl,4(sp)
                           3095 ;	genPlus
                           3096 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           3097 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3098 ;	genPlusIncr
                           3099 ;	Can't optimise plus by inc, falling back to the normal way
   091F 77                 3100 	ld      (hl),a
                           3101 ; Removed redundent load
   0920 C6 08              3102 	add	a,#0x08
   0922 F8 00              3103 	lda	hl,0(sp)
   0924 77                 3104 	ld	(hl),a
                           3105 ;	genPlus
                           3106 ;	AOP_HL for _currentID
                           3107 ;	AOP_STK for _updateEnemies_sloc3_1_0
                           3108 ;	genPlusIncr
                           3109 ;	Can't optimise plus by inc, falling back to the normal way
   0925 21 C4 06           3110 	ld	hl,#_currentID
   0928 7E                 3111 	ld	a,(hl)
   0929 C6 01              3112 	add	a,#0x01
   092B F8 04              3113 	lda	hl,4(sp)
   092D 77                 3114 	ld	(hl),a
                           3115 ;	genIpush
                           3116 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   092E C5                 3117 	push	bc
                           3118 ;	AOP_STK for _updateEnemies_sloc4_1_0
   092F 2B                 3119 	dec	hl
   0930 2B                 3120 	dec	hl
   0931 7E                 3121 	ld	a,(hl)
   0932 F5                 3122 	push	af
   0933 33                 3123 	inc	sp
                           3124 ;	genIpush
                           3125 ;	AOP_STK for _updateEnemies_sloc5_1_0
   0934 2B                 3126 	dec	hl
   0935 2B                 3127 	dec	hl
   0936 7E                 3128 	ld	a,(hl)
   0937 F5                 3129 	push	af
   0938 33                 3130 	inc	sp
                           3131 ;	genIpush
                           3132 ;	AOP_STK for _updateEnemies_sloc3_1_0
   0939 F8 08              3133 	lda	hl,8(sp)
   093B 7E                 3134 	ld	a,(hl)
   093C F5                 3135 	push	af
   093D 33                 3136 	inc	sp
                           3137 ;	genCall
   093E CD 00 00           3138 	call	_move_sprite
   0941 E8 03              3139 	lda	sp,3(sp)
   0943 C1                 3140 	pop	bc
                           3141 ;	genLabel
   0944                    3142 00113$:
                           3143 ;	ld.c 382
                           3144 ;	genCmpEq
                           3145 ; genCmpEq: left 1, right 1, result 0
   0944 78                 3146 	ld	a,b
   0945 FE 01              3147 	cp	a,#0x01
   0947 C2 80 09           3148 	jp	nz,00117$
   094A 18 03              3149 	jr	00148$
   094C                    3150 00147$:
   094C C3 80 09           3151 	jp	00117$
   094F                    3152 00148$:
                           3153 ;	ld.c 384
                           3154 ;	genPlus
                           3155 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3156 ;	Can't optimise plus by inc, falling back to the normal way
   094F 11 DA 06           3157 	ld	de,#_et
   0952 69                 3158 	ld	l,c
   0953 26 00              3159 	ld	h,#0x00
   0955 19                 3160 	add	hl,de
   0956 7D                 3161 	ld	a,l
   0957 54                 3162 	ld	d,h
   0958 F8 00              3163 	lda	hl,0(sp)
                           3164 ;	genPointerGet
                           3165 ;	AOP_STK for _updateEnemies_sloc5_1_0
   095A 22                 3166 	ld	(hl+),a
   095B 72                 3167 	ld	(hl),d
   095C 5F                 3168 	ld	e,a
   095D 1A                 3169 	ld	a,(de)
   095E 47                 3170 	ld	b,a
                           3171 ;	genMinus
   095F 05                 3172 	dec	b
                           3173 ;	genAssign (pointer)
                           3174 ;	AOP_STK for _updateEnemies_sloc5_1_0
   0960 2B                 3175 	dec	hl
   0961 5E                 3176 	ld	e,(hl)
   0962 23                 3177 	inc	hl
   0963 56                 3178 	ld	d,(hl)
   0964 78                 3179 	ld	a,b
   0965 12                 3180 	ld	(de),a
                           3181 ;	ld.c 387
                           3182 ;	genCmpEq
                           3183 ; genCmpEq: left 1, right 1, result 0
   0966 78                 3184 	ld	a,b
   0967 B7                 3185 	or	a,a
   0968 C2 80 09           3186 	jp	nz,00117$
   096B 18 03              3187 	jr	00150$
   096D                    3188 00149$:
   096D C3 80 09           3189 	jp	00117$
   0970                    3190 00150$:
                           3191 ;	ld.c 388
                           3192 ;	genAssign (pointer)
                           3193 ;	AOP_STK for _updateEnemies_sloc0_1_0
   0970 F8 08              3194 	lda	hl,8(sp)
   0972 5E                 3195 	ld	e,(hl)
   0973 23                 3196 	inc	hl
   0974 56                 3197 	ld	d,(hl)
   0975 3E 02              3198 	ld	a,#0x02
   0977 12                 3199 	ld	(de),a
                           3200 ;	ld.c 389
                           3201 ;	genAssign (pointer)
                           3202 ;	AOP_STK for _updateEnemies_sloc5_1_0
   0978 F8 00              3203 	lda	hl,0(sp)
   097A 5E                 3204 	ld	e,(hl)
   097B 23                 3205 	inc	hl
   097C 56                 3206 	ld	d,(hl)
   097D 3E 28              3207 	ld	a,#0x28
   097F 12                 3208 	ld	(de),a
                           3209 ;	genLabel
   0980                    3210 00117$:
                           3211 ;	ld.c 393
                           3212 ;	genPointerGet
                           3213 ;	AOP_STK for _updateEnemies_sloc0_1_0
   0980 F8 08              3214 	lda	hl,8(sp)
   0982 5E                 3215 	ld	e,(hl)
   0983 23                 3216 	inc	hl
   0984 56                 3217 	ld	d,(hl)
   0985 1A                 3218 	ld	a,(de)
                           3219 ;	genCmpEq
                           3220 ; genCmpEq: left 1, right 1, result 0
   0986 47                 3221 	ld	b,a
   0987 FE 02              3222 	cp	a,#0x02
   0989 C2 58 0A           3223 	jp	nz,00124$
   098C 18 03              3224 	jr	00152$
   098E                    3225 00151$:
   098E C3 58 0A           3226 	jp	00124$
   0991                    3227 00152$:
                           3228 ;	ld.c 394
                           3229 ;	genPlus
                           3230 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3231 ;	Can't optimise plus by inc, falling back to the normal way
   0991 11 DA 06           3232 	ld	de,#_et
   0994 69                 3233 	ld	l,c
   0995 26 00              3234 	ld	h,#0x00
   0997 19                 3235 	add	hl,de
   0998 7D                 3236 	ld	a,l
   0999 54                 3237 	ld	d,h
   099A F8 00              3238 	lda	hl,0(sp)
                           3239 ;	genPointerGet
                           3240 ;	AOP_STK for _updateEnemies_sloc5_1_0
   099C 22                 3241 	ld	(hl+),a
   099D 72                 3242 	ld	(hl),d
   099E 5F                 3243 	ld	e,a
   099F 1A                 3244 	ld	a,(de)
   09A0 47                 3245 	ld	b,a
                           3246 ;	genMinus
   09A1 05                 3247 	dec	b
                           3248 ;	genAssign (pointer)
                           3249 ;	AOP_STK for _updateEnemies_sloc5_1_0
   09A2 2B                 3250 	dec	hl
   09A3 5E                 3251 	ld	e,(hl)
   09A4 23                 3252 	inc	hl
   09A5 56                 3253 	ld	d,(hl)
   09A6 78                 3254 	ld	a,b
   09A7 12                 3255 	ld	(de),a
                           3256 ;	ld.c 395
                           3257 ;	genCmpEq
                           3258 ; genCmpEq: left 1, right 1, result 0
   09A8 78                 3259 	ld	a,b
   09A9 B7                 3260 	or	a,a
   09AA C2 58 0A           3261 	jp	nz,00124$
   09AD 18 03              3262 	jr	00154$
   09AF                    3263 00153$:
   09AF C3 58 0A           3264 	jp	00124$
   09B2                    3265 00154$:
                           3266 ;	ld.c 396
                           3267 ;	genAssign (pointer)
                           3268 ;	AOP_STK for _updateEnemies_sloc0_1_0
   09B2 F8 08              3269 	lda	hl,8(sp)
   09B4 5E                 3270 	ld	e,(hl)
   09B5 23                 3271 	inc	hl
   09B6 56                 3272 	ld	d,(hl)
   09B7 3E 00              3273 	ld	a,#0x00
   09B9 12                 3274 	ld	(de),a
                           3275 ;	ld.c 397
                           3276 ;	genAssign (pointer)
                           3277 ;	AOP_STK for _updateEnemies_sloc5_1_0
   09BA F8 00              3278 	lda	hl,0(sp)
   09BC 5E                 3279 	ld	e,(hl)
   09BD 23                 3280 	inc	hl
   09BE 56                 3281 	ld	d,(hl)
   09BF 3E 00              3282 	ld	a,#0x00
   09C1 12                 3283 	ld	(de),a
                           3284 ;	ld.c 398
                           3285 ;	genPlus
                           3286 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3287 ;	Can't optimise plus by inc, falling back to the normal way
   09C2 11 C5 06           3288 	ld	de,#_ex
   09C5 69                 3289 	ld	l,c
   09C6 26 00              3290 	ld	h,#0x00
   09C8 19                 3291 	add	hl,de
   09C9 7D                 3292 	ld	a,l
   09CA 54                 3293 	ld	d,h
   09CB F8 00              3294 	lda	hl,0(sp)
   09CD 22                 3295 	ld	(hl+),a
   09CE 72                 3296 	ld	(hl),d
                           3297 ;	genCall
                           3298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09CF C5                 3299 	push	bc
   09D0 CD 7E 0E           3300 	call	_generateNewXPosition
   09D3 43                 3301 	ld	b,e
   09D4 E1                 3302 	pop	hl
   09D5 4D                 3303 	ld	c,l
                           3304 ;	genAssign (pointer)
                           3305 ;	AOP_STK for _updateEnemies_sloc5_1_0
   09D6 F8 00              3306 	lda	hl,0(sp)
   09D8 5E                 3307 	ld	e,(hl)
   09D9 23                 3308 	inc	hl
   09DA 56                 3309 	ld	d,(hl)
   09DB 78                 3310 	ld	a,b
   09DC 12                 3311 	ld	(de),a
                           3312 ;	ld.c 399
                           3313 ;	genPlus
                           3314 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3315 ;	Can't optimise plus by inc, falling back to the normal way
   09DD 11 CC 06           3316 	ld	de,#_ey
   09E0 69                 3317 	ld	l,c
   09E1 26 00              3318 	ld	h,#0x00
   09E3 19                 3319 	add	hl,de
   09E4 7D                 3320 	ld	a,l
   09E5 54                 3321 	ld	d,h
   09E6 F8 00              3322 	lda	hl,0(sp)
   09E8 22                 3323 	ld	(hl+),a
   09E9 72                 3324 	ld	(hl),d
                           3325 ;	genAssign (pointer)
                           3326 ;	AOP_STK for _updateEnemies_sloc5_1_0
   09EA 2B                 3327 	dec	hl
   09EB 5E                 3328 	ld	e,(hl)
   09EC 23                 3329 	inc	hl
   09ED 56                 3330 	ld	d,(hl)
   09EE 3E 0A              3331 	ld	a,#0x0A
   09F0 12                 3332 	ld	(de),a
                           3333 ;	ld.c 401
                           3334 ;	genPointerGet
                           3335 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3336 ;	AOP_STK for _updateEnemies_sloc4_1_0
   09F1 2B                 3337 	dec	hl
   09F2 5E                 3338 	ld	e,(hl)
   09F3 23                 3339 	inc	hl
   09F4 56                 3340 	ld	d,(hl)
   09F5 1A                 3341 	ld	a,(de)
   09F6 23                 3342 	inc	hl
   09F7 77                 3343 	ld	(hl),a
                           3344 ;	genIpush
                           3345 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09F8 C5                 3346 	push	bc
                           3347 ;	AOP_STK for _updateEnemies_sloc4_1_0
   09F9 7E                 3348 	ld	a,(hl)
   09FA F5                 3349 	push	af
   09FB 33                 3350 	inc	sp
                           3351 ;	genIpush
   09FC 78                 3352 	ld	a,b
   09FD F5                 3353 	push	af
   09FE 33                 3354 	inc	sp
                           3355 ;	genIpush
                           3356 ;	AOP_HL for _currentID
   09FF 21 C4 06           3357 	ld	hl,#_currentID
   0A02 7E                 3358 	ld	a,(hl)
   0A03 F5                 3359 	push	af
   0A04 33                 3360 	inc	sp
                           3361 ;	genCall
   0A05 CD 00 00           3362 	call	_move_sprite
   0A08 E8 03              3363 	lda	sp,3(sp)
   0A0A C1                 3364 	pop	bc
                           3365 ;	ld.c 402
                           3366 ;	genPointerGet
                           3367 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3368 ;	AOP_STK for _updateEnemies_sloc4_1_0
   0A0B F8 00              3369 	lda	hl,0(sp)
   0A0D 5E                 3370 	ld	e,(hl)
   0A0E 23                 3371 	inc	hl
   0A0F 56                 3372 	ld	d,(hl)
   0A10 1A                 3373 	ld	a,(de)
   0A11 23                 3374 	inc	hl
   0A12 77                 3375 	ld	(hl),a
                           3376 ;	genPlus
                           3377 ;	genPlusIncr
                           3378 ;	Can't optimise plus by inc, falling back to the normal way
   0A13 78                 3379 	ld	a,b
   0A14 C6 08              3380 	add	a,#0x08
   0A16 47                 3381 	ld	b,a
                           3382 ;	genPlus
                           3383 ;	AOP_HL for _currentID
                           3384 ;	AOP_STK for _updateEnemies_sloc5_1_0
                           3385 ;	genPlusIncr
                           3386 ;	Can't optimise plus by inc, falling back to the normal way
   0A17 21 C4 06           3387 	ld	hl,#_currentID
   0A1A 7E                 3388 	ld	a,(hl)
   0A1B C6 01              3389 	add	a,#0x01
   0A1D F8 00              3390 	lda	hl,0(sp)
   0A1F 77                 3391 	ld	(hl),a
                           3392 ;	genIpush
                           3393 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A20 C5                 3394 	push	bc
                           3395 ;	AOP_STK for _updateEnemies_sloc4_1_0
   0A21 23                 3396 	inc	hl
   0A22 23                 3397 	inc	hl
   0A23 7E                 3398 	ld	a,(hl)
   0A24 F5                 3399 	push	af
   0A25 33                 3400 	inc	sp
                           3401 ;	genIpush
   0A26 78                 3402 	ld	a,b
   0A27 F5                 3403 	push	af
   0A28 33                 3404 	inc	sp
                           3405 ;	genIpush
                           3406 ;	AOP_STK for _updateEnemies_sloc5_1_0
   0A29 2B                 3407 	dec	hl
   0A2A 2B                 3408 	dec	hl
   0A2B 7E                 3409 	ld	a,(hl)
   0A2C F5                 3410 	push	af
   0A2D 33                 3411 	inc	sp
                           3412 ;	genCall
   0A2E CD 00 00           3413 	call	_move_sprite
   0A31 E8 03              3414 	lda	sp,3(sp)
   0A33 E1                 3415 	pop	hl
   0A34 4D                 3416 	ld	c,l
                           3417 ;	ld.c 404
                           3418 ;	genIpush
                           3419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A35 C5                 3420 	push	bc
   0A36 3E 08              3421 	ld	a,#0x08
   0A38 F5                 3422 	push	af
   0A39 33                 3423 	inc	sp
                           3424 ;	genIpush
                           3425 ;	AOP_HL for _currentID
   0A3A 21 C4 06           3426 	ld	hl,#_currentID
   0A3D 7E                 3427 	ld	a,(hl)
   0A3E F5                 3428 	push	af
   0A3F 33                 3429 	inc	sp
                           3430 ;	genCall
   0A40 CD 00 00           3431 	call	_set_sprite_tile
   0A43 E8 02              3432 	lda	sp,2(sp)
   0A45 E1                 3433 	pop	hl
   0A46 4D                 3434 	ld	c,l
                           3435 ;	ld.c 405
                           3436 ;	genIpush
                           3437 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A47 C5                 3438 	push	bc
   0A48 3E 0A              3439 	ld	a,#0x0A
   0A4A F5                 3440 	push	af
   0A4B 33                 3441 	inc	sp
                           3442 ;	genIpush
                           3443 ;	AOP_STK for _updateEnemies_sloc5_1_0
   0A4C F8 03              3444 	lda	hl,3(sp)
   0A4E 7E                 3445 	ld	a,(hl)
   0A4F F5                 3446 	push	af
   0A50 33                 3447 	inc	sp
                           3448 ;	genCall
   0A51 CD 00 00           3449 	call	_set_sprite_tile
   0A54 E8 02              3450 	lda	sp,2(sp)
   0A56 E1                 3451 	pop	hl
   0A57 4D                 3452 	ld	c,l
                           3453 ;	genLabel
   0A58                    3454 00124$:
                           3455 ;	ld.c 356
                           3456 ;	genPlus
                           3457 ;	genPlusIncr
                           3458 ; Removed redundent load
   0A58 0C                 3459 	inc	c
                           3460 ;	genGoto
   0A59 C3 FC 07           3461 	jp	00122$
                           3462 ;	genLabel
   0A5C                    3463 00126$:
                           3464 ;	genEndFunction
   0A5C E8 0A              3465 	lda	sp,10(sp)
   0A5E C9                 3466 	ret
   0A5F                    3467 ___updateEnemies_end:
                           3468 ;	ld.c 411
                           3469 ;	genLabel
                           3470 ;	genFunction
                           3471 ;	---------------------------------
                           3472 ; Function updateLaser
                           3473 ; ---------------------------------
   0A5F                    3474 ___updateLaser_start:
   0A5F                    3475 _updateLaser:
   0A5F E8 EA              3476 	lda	sp,-22(sp)
                           3477 ;	ld.c 416
                           3478 ;	genAssign
                           3479 ;	AOP_STK for _updateLaser_i_1_1
   0A61 F8 15              3480 	lda	hl,21(sp)
   0A63 36 00              3481 	ld	(hl),#0x00
                           3482 ;	genLabel
   0A65                    3483 00114$:
                           3484 ;	genCmpEq
                           3485 ;	AOP_STK for _updateLaser_i_1_1
                           3486 ; genCmpEq: left 1, right 1, result 0
   0A65 F8 15              3487 	lda	hl,21(sp)
   0A67 7E                 3488 	ld	a,(hl)
   0A68 FE 0A              3489 	cp	a,#0x0A
   0A6A CA 15 0C           3490 	jp	z,00118$
   0A6D                    3491 00128$:
                           3492 ;	ld.c 418
                           3493 ;	genIpush
                           3494 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3495 ;	AOP_STK for _updateLaser_i_1_1
   0A6D F8 15              3496 	lda	hl,21(sp)
   0A6F 7E                 3497 	ld	a,(hl)
   0A70 F5                 3498 	push	af
   0A71 33                 3499 	inc	sp
                           3500 ;	genCall
   0A72 CD 35 07           3501 	call	_getLaserSpriteIndexFast
                           3502 ;	AOP_HL for _currentLaserID
   0A75 21 E1 06           3503 	ld	hl,#_currentLaserID
   0A78 73                 3504 	ld	(hl),e
   0A79 E8 01              3505 	lda	sp,1(sp)
                           3506 ;	ld.c 420
                           3507 ;	genPlus
                           3508 ;	AOP_STK for _updateLaser_i_1_1
                           3509 ;	AOP_STK for _updateLaser_sloc0_1_0
                           3510 ;	Can't optimise plus by inc, falling back to the normal way
   0A7B 11 F6 06           3511 	ld	de,#_ls
   0A7E F8 15              3512 	lda	hl,21(sp)
   0A80 6E                 3513 	ld	l,(hl)
   0A81 26 00              3514 	ld	h,#0x00
   0A83 19                 3515 	add	hl,de
   0A84 7D                 3516 	ld	a,l
   0A85 54                 3517 	ld	d,h
   0A86 F8 13              3518 	lda	hl,19(sp)
                           3519 ;	genPointerGet
                           3520 ;	AOP_STK for _updateLaser_sloc0_1_0
   0A88 22                 3521 	ld	(hl+),a
   0A89 72                 3522 	ld	(hl),d
   0A8A 5F                 3523 	ld	e,a
   0A8B 1A                 3524 	ld	a,(de)
                           3525 ;	genCmpEq
                           3526 ; genCmpEq: left 1, right 1, result 0
   0A8C 47                 3527 	ld	b,a
   0A8D B7                 3528 	or	a,a
   0A8E C2 0F 0C           3529 	jp	nz,00116$
   0A91 18 03              3530 	jr	00130$
   0A93                    3531 00129$:
   0A93 C3 0F 0C           3532 	jp	00116$
   0A96                    3533 00130$:
                           3534 ;	ld.c 421
                           3535 ;	genPlus
                           3536 ;	AOP_STK for _updateLaser_i_1_1
                           3537 ;	AOP_STK for _updateLaser_sloc1_1_0
                           3538 ;	Can't optimise plus by inc, falling back to the normal way
   0A96 11 EC 06           3539 	ld	de,#_ly
   0A99 F8 15              3540 	lda	hl,21(sp)
   0A9B 6E                 3541 	ld	l,(hl)
   0A9C 26 00              3542 	ld	h,#0x00
   0A9E 19                 3543 	add	hl,de
   0A9F 7D                 3544 	ld	a,l
   0AA0 54                 3545 	ld	d,h
   0AA1 F8 11              3546 	lda	hl,17(sp)
                           3547 ;	genPointerGet
                           3548 ;	AOP_STK for _updateLaser_sloc1_1_0
   0AA3 22                 3549 	ld	(hl+),a
   0AA4 72                 3550 	ld	(hl),d
   0AA5 5F                 3551 	ld	e,a
   0AA6 1A                 3552 	ld	a,(de)
   0AA7 47                 3553 	ld	b,a
                           3554 ;	genMinus
   0AA8 05                 3555 	dec	b
   0AA9 05                 3556 	dec	b
                           3557 ;	genAssign (pointer)
                           3558 ;	AOP_STK for _updateLaser_sloc1_1_0
   0AAA 2B                 3559 	dec	hl
   0AAB 5E                 3560 	ld	e,(hl)
   0AAC 23                 3561 	inc	hl
   0AAD 56                 3562 	ld	d,(hl)
   0AAE 78                 3563 	ld	a,b
   0AAF 12                 3564 	ld	(de),a
                           3565 ;	ld.c 422
                           3566 ;	genCmpGt
   0AB0 3E 01              3567 	ld	a,#0x01
   0AB2 90                 3568 	sub	a,b
   0AB3 DA E0 0A           3569 	jp	c,00106$
                           3570 ;	ld.c 423
                           3571 ;	genAssign (pointer)
                           3572 ;	AOP_STK for _updateLaser_sloc0_1_0
   0AB6 23                 3573 	inc	hl
   0AB7 5E                 3574 	ld	e,(hl)
   0AB8 23                 3575 	inc	hl
   0AB9 56                 3576 	ld	d,(hl)
   0ABA 3E 02              3577 	ld	a,#0x02
   0ABC 12                 3578 	ld	(de),a
                           3579 ;	ld.c 424
                           3580 ;	genIpush
                           3581 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ABD 21 A0 00           3582 	ld	hl,#0x00A0
   0AC0 E5                 3583 	push	hl
                           3584 ;	genIpush
                           3585 ;	AOP_HL for _currentLaserID
   0AC1 21 E1 06           3586 	ld	hl,#_currentLaserID
   0AC4 7E                 3587 	ld	a,(hl)
   0AC5 F5                 3588 	push	af
   0AC6 33                 3589 	inc	sp
                           3590 ;	genCall
   0AC7 CD 00 00           3591 	call	_move_sprite
   0ACA E8 03              3592 	lda	sp,3(sp)
                           3593 ;	ld.c 425
                           3594 ;	genPlus
                           3595 ;	AOP_HL for _currentLaserID
                           3596 ;	genPlusIncr
   0ACC 21 E1 06           3597 	ld	hl,#_currentLaserID
   0ACF 46                 3598 	ld	b,(hl)
   0AD0 04                 3599 	inc	b
                           3600 ;	genIpush
                           3601 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AD1 21 A8 00           3602 	ld	hl,#0x00A8
   0AD4 E5                 3603 	push	hl
                           3604 ;	genIpush
   0AD5 78                 3605 	ld	a,b
   0AD6 F5                 3606 	push	af
   0AD7 33                 3607 	inc	sp
                           3608 ;	genCall
   0AD8 CD 00 00           3609 	call	_move_sprite
   0ADB E8 03              3610 	lda	sp,3(sp)
                           3611 ;	genGoto
   0ADD C3 0F 0C           3612 	jp	00116$
                           3613 ;	genLabel
   0AE0                    3614 00106$:
                           3615 ;	ld.c 427
                           3616 ;	genPointerGet
                           3617 ;	AOP_STK for _updateLaser_sloc1_1_0
   0AE0 F8 11              3618 	lda	hl,17(sp)
   0AE2 5E                 3619 	ld	e,(hl)
   0AE3 23                 3620 	inc	hl
   0AE4 56                 3621 	ld	d,(hl)
   0AE5 1A                 3622 	ld	a,(de)
   0AE6 47                 3623 	ld	b,a
                           3624 ;	genPlus
                           3625 ;	AOP_STK for _updateLaser_i_1_1
                           3626 ;	AOP_STK for _updateLaser_sloc2_1_0
                           3627 ;	Can't optimise plus by inc, falling back to the normal way
   0AE7 11 E2 06           3628 	ld	de,#_lx
   0AEA F8 15              3629 	lda	hl,21(sp)
   0AEC 6E                 3630 	ld	l,(hl)
   0AED 26 00              3631 	ld	h,#0x00
   0AEF 19                 3632 	add	hl,de
   0AF0 7D                 3633 	ld	a,l
   0AF1 54                 3634 	ld	d,h
   0AF2 F8 0F              3635 	lda	hl,15(sp)
                           3636 ;	genPointerGet
                           3637 ;	AOP_STK for _updateLaser_sloc2_1_0
                           3638 ;	AOP_STK for _updateLaser_sloc3_1_0
   0AF4 22                 3639 	ld	(hl+),a
   0AF5 72                 3640 	ld	(hl),d
   0AF6 5F                 3641 	ld	e,a
   0AF7 1A                 3642 	ld	a,(de)
   0AF8 2B                 3643 	dec	hl
   0AF9 2B                 3644 	dec	hl
   0AFA 77                 3645 	ld	(hl),a
                           3646 ;	genIpush
                           3647 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AFB 78                 3648 	ld	a,b
   0AFC F5                 3649 	push	af
   0AFD 33                 3650 	inc	sp
                           3651 ;	genIpush
                           3652 ;	AOP_STK for _updateLaser_sloc3_1_0
   0AFE 7E                 3653 	ld	a,(hl)
   0AFF F5                 3654 	push	af
   0B00 33                 3655 	inc	sp
                           3656 ;	genIpush
                           3657 ;	AOP_HL for _currentLaserID
   0B01 21 E1 06           3658 	ld	hl,#_currentLaserID
   0B04 7E                 3659 	ld	a,(hl)
   0B05 F5                 3660 	push	af
   0B06 33                 3661 	inc	sp
                           3662 ;	genCall
   0B07 CD 00 00           3663 	call	_move_sprite
   0B0A E8 03              3664 	lda	sp,3(sp)
                           3665 ;	ld.c 428
                           3666 ;	genPointerGet
                           3667 ;	AOP_STK for _updateLaser_sloc1_1_0
   0B0C F8 11              3668 	lda	hl,17(sp)
   0B0E 5E                 3669 	ld	e,(hl)
   0B0F 23                 3670 	inc	hl
   0B10 56                 3671 	ld	d,(hl)
   0B11 1A                 3672 	ld	a,(de)
   0B12 47                 3673 	ld	b,a
                           3674 ;	genPointerGet
                           3675 ;	AOP_STK for _updateLaser_sloc2_1_0
                           3676 ;	AOP_STK for _updateLaser_sloc3_1_0
   0B13 F8 0F              3677 	lda	hl,15(sp)
   0B15 5E                 3678 	ld	e,(hl)
   0B16 23                 3679 	inc	hl
   0B17 56                 3680 	ld	d,(hl)
   0B18 1A                 3681 	ld	a,(de)
   0B19 2B                 3682 	dec	hl
   0B1A 2B                 3683 	dec	hl
                           3684 ;	genPlus
                           3685 ;	AOP_STK for _updateLaser_sloc3_1_0
                           3686 ;	AOP_STK for _updateLaser_sloc4_1_0
                           3687 ;	genPlusIncr
                           3688 ;	Can't optimise plus by inc, falling back to the normal way
   0B1B 77                 3689 	ld      (hl),a
                           3690 ; Removed redundent load
   0B1C C6 08              3691 	add	a,#0x08
   0B1E 2B                 3692 	dec	hl
   0B1F 77                 3693 	ld	(hl),a
                           3694 ;	genPlus
                           3695 ;	AOP_HL for _currentLaserID
                           3696 ;	AOP_STK for _updateLaser_sloc3_1_0
                           3697 ;	genPlusIncr
                           3698 ;	Can't optimise plus by inc, falling back to the normal way
   0B20 21 E1 06           3699 	ld	hl,#_currentLaserID
   0B23 7E                 3700 	ld	a,(hl)
   0B24 C6 01              3701 	add	a,#0x01
   0B26 F8 0E              3702 	lda	hl,14(sp)
   0B28 77                 3703 	ld	(hl),a
                           3704 ;	genIpush
                           3705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B29 78                 3706 	ld	a,b
   0B2A F5                 3707 	push	af
   0B2B 33                 3708 	inc	sp
                           3709 ;	genIpush
                           3710 ;	AOP_STK for _updateLaser_sloc4_1_0
   0B2C 2B                 3711 	dec	hl
   0B2D 7E                 3712 	ld	a,(hl)
   0B2E F5                 3713 	push	af
   0B2F 33                 3714 	inc	sp
                           3715 ;	genIpush
                           3716 ;	AOP_STK for _updateLaser_sloc3_1_0
   0B30 23                 3717 	inc	hl
   0B31 7E                 3718 	ld	a,(hl)
   0B32 F5                 3719 	push	af
   0B33 33                 3720 	inc	sp
                           3721 ;	genCall
   0B34 CD 00 00           3722 	call	_move_sprite
   0B37 E8 03              3723 	lda	sp,3(sp)
                           3724 ;	ld.c 431
                           3725 ;	genAssign
   0B39 06 00              3726 	ld	b,#0x00
                           3727 ;	genLabel
   0B3B                    3728 00110$:
                           3729 ;	genCmpEq
                           3730 ; genCmpEq: left 1, right 1, result 1
   0B3B 78                 3731 	ld	a,b
   0B3C FE 07              3732 	cp	a,#0x07
   0B3E C2 45 0B           3733 	jp	nz,00131$
   0B41 3E 01              3734 	ld	a,#0x01
   0B43 18 01              3735 	jr	00132$
   0B45                    3736 00131$:
   0B45 AF                 3737 	xor	a,a
   0B46                    3738 00132$:
                           3739 ;	genIfx
   0B46 B7                 3740 	or	a,a
   0B47 C2 0F 0C           3741 	jp	nz,00116$
                           3742 ;	ld.c 432
                           3743 ;	genPlus
                           3744 ;	AOP_STK for _updateLaser_sloc5_1_0
                           3745 ;	Can't optimise plus by inc, falling back to the normal way
   0B4A 11 D3 06           3746 	ld	de,#_es
   0B4D 68                 3747 	ld	l,b
   0B4E 26 00              3748 	ld	h,#0x00
   0B50 19                 3749 	add	hl,de
   0B51 7D                 3750 	ld	a,l
   0B52 54                 3751 	ld	d,h
   0B53 F8 0B              3752 	lda	hl,11(sp)
                           3753 ;	genPointerGet
                           3754 ;	AOP_STK for _updateLaser_sloc5_1_0
   0B55 22                 3755 	ld	(hl+),a
   0B56 72                 3756 	ld	(hl),d
   0B57 5F                 3757 	ld	e,a
   0B58 1A                 3758 	ld	a,(de)
                           3759 ;	genCmpEq
                           3760 ; genCmpEq: left 1, right 1, result 1
   0B59 4F                 3761 	ld	c,a
   0B5A B7                 3762 	or	a,a
   0B5B C2 62 0B           3763 	jp	nz,00133$
   0B5E 3E 01              3764 	ld	a,#0x01
   0B60 18 01              3765 	jr	00134$
   0B62                    3766 00133$:
   0B62 AF                 3767 	xor	a,a
   0B63                    3768 00134$:
                           3769 ;	genIfx
   0B63 B7                 3770 	or	a,a
   0B64 CA 05 0C           3771 	jp	z,00112$
                           3772 ;	ld.c 433
                           3773 ;	genPlus
                           3774 ;	AOP_STK for _updateLaser_sloc6_1_0
                           3775 ;	Can't optimise plus by inc, falling back to the normal way
   0B67 11 CC 06           3776 	ld	de,#_ey
   0B6A 68                 3777 	ld	l,b
   0B6B 26 00              3778 	ld	h,#0x00
   0B6D 19                 3779 	add	hl,de
   0B6E 7D                 3780 	ld	a,l
   0B6F 54                 3781 	ld	d,h
   0B70 F8 09              3782 	lda	hl,9(sp)
                           3783 ;	genPointerGet
                           3784 ;	AOP_STK for _updateLaser_sloc6_1_0
                           3785 ;	AOP_STK for _updateLaser_sloc4_1_0
   0B72 22                 3786 	ld	(hl+),a
   0B73 72                 3787 	ld	(hl),d
   0B74 5F                 3788 	ld	e,a
   0B75 1A                 3789 	ld	a,(de)
   0B76 F8 0D              3790 	lda	hl,13(sp)
   0B78 77                 3791 	ld	(hl),a
                           3792 ;	genPlus
                           3793 ;	AOP_STK for _updateLaser_sloc7_1_0
                           3794 ;	Can't optimise plus by inc, falling back to the normal way
   0B79 11 C5 06           3795 	ld	de,#_ex
   0B7C 68                 3796 	ld	l,b
   0B7D 26 00              3797 	ld	h,#0x00
   0B7F 19                 3798 	add	hl,de
   0B80 7D                 3799 	ld	a,l
   0B81 54                 3800 	ld	d,h
   0B82 F8 07              3801 	lda	hl,7(sp)
                           3802 ;	genPointerGet
                           3803 ;	AOP_STK for _updateLaser_sloc7_1_0
                           3804 ;	AOP_STK for _updateLaser_sloc8_1_0
   0B84 22                 3805 	ld	(hl+),a
   0B85 72                 3806 	ld	(hl),d
   0B86 5F                 3807 	ld	e,a
   0B87 1A                 3808 	ld	a,(de)
   0B88 2B                 3809 	dec	hl
   0B89 2B                 3810 	dec	hl
   0B8A 77                 3811 	ld	(hl),a
                           3812 ;	genPointerGet
                           3813 ;	AOP_STK for _updateLaser_sloc1_1_0
                           3814 ;	AOP_STK for _updateLaser_sloc9_1_0
   0B8B F8 11              3815 	lda	hl,17(sp)
   0B8D 5E                 3816 	ld	e,(hl)
   0B8E 23                 3817 	inc	hl
   0B8F 56                 3818 	ld	d,(hl)
   0B90 1A                 3819 	ld	a,(de)
   0B91 F8 05              3820 	lda	hl,5(sp)
                           3821 ;	genPlus
                           3822 ;	AOP_STK for _updateLaser_sloc9_1_0
                           3823 ;	AOP_STK for _updateLaser_sloc10_1_0
                           3824 ;	genPlusIncr
                           3825 ;	Can't optimise plus by inc, falling back to the normal way
   0B93 77                 3826 	ld      (hl),a
                           3827 ; Removed redundent load
   0B94 C6 08              3828 	add	a,#0x08
   0B96 2B                 3829 	dec	hl
   0B97 77                 3830 	ld	(hl),a
                           3831 ;	genPointerGet
                           3832 ;	AOP_STK for _updateLaser_sloc2_1_0
                           3833 ;	AOP_STK for _updateLaser_sloc11_1_0
   0B98 F8 0F              3834 	lda	hl,15(sp)
   0B9A 5E                 3835 	ld	e,(hl)
   0B9B 23                 3836 	inc	hl
   0B9C 56                 3837 	ld	d,(hl)
   0B9D 1A                 3838 	ld	a,(de)
   0B9E F8 03              3839 	lda	hl,3(sp)
                           3840 ;	genPlus
                           3841 ;	AOP_STK for _updateLaser_sloc11_1_0
                           3842 ;	AOP_STK for _updateLaser_sloc12_1_0
                           3843 ;	genPlusIncr
                           3844 ;	Can't optimise plus by inc, falling back to the normal way
   0BA0 77                 3845 	ld      (hl),a
                           3846 ; Removed redundent load
   0BA1 C6 04              3847 	add	a,#0x04
   0BA3 2B                 3848 	dec	hl
   0BA4 77                 3849 	ld	(hl),a
                           3850 ;	genIpush
                           3851 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BA5 C5                 3852 	push	bc
   0BA6 21 10 10           3853 	ld	hl,#0x1010
   0BA9 E5                 3854 	push	hl
                           3855 ;	genIpush
                           3856 ;	AOP_STK for _updateLaser_sloc4_1_0
   0BAA F8 11              3857 	lda	hl,17(sp)
   0BAC 7E                 3858 	ld	a,(hl)
   0BAD F5                 3859 	push	af
   0BAE 33                 3860 	inc	sp
                           3861 ;	genIpush
                           3862 ;	AOP_STK for _updateLaser_sloc8_1_0
   0BAF F8 0B              3863 	lda	hl,11(sp)
   0BB1 7E                 3864 	ld	a,(hl)
   0BB2 F5                 3865 	push	af
   0BB3 33                 3866 	inc	sp
                           3867 ;	genIpush
   0BB4 21 08 08           3868 	ld	hl,#0x0808
   0BB7 E5                 3869 	push	hl
                           3870 ;	genIpush
                           3871 ;	AOP_STK for _updateLaser_sloc10_1_0
   0BB8 F8 0C              3872 	lda	hl,12(sp)
   0BBA 7E                 3873 	ld	a,(hl)
   0BBB F5                 3874 	push	af
   0BBC 33                 3875 	inc	sp
                           3876 ;	genIpush
                           3877 ;	AOP_STK for _updateLaser_sloc12_1_0
   0BBD 2B                 3878 	dec	hl
   0BBE 2B                 3879 	dec	hl
   0BBF 7E                 3880 	ld	a,(hl)
   0BC0 F5                 3881 	push	af
   0BC1 33                 3882 	inc	sp
                           3883 ;	genCall
   0BC2 CD CA 0C           3884 	call	_overlap
                           3885 ;	AOP_STK for _updateLaser_sloc13_1_0
   0BC5 F8 0B              3886 	lda	hl,11(sp)
   0BC7 73                 3887 	ld	(hl),e
   0BC8 E8 08              3888 	lda	sp,8(sp)
   0BCA C1                 3889 	pop	bc
                           3890 ;	genIfx
                           3891 ;	AOP_STK for _updateLaser_sloc13_1_0
   0BCB AF                 3892 	xor	a,a
   0BCC F8 01              3893 	lda	hl,1(sp)
   0BCE B6                 3894 	or	a,(hl)
   0BCF CA 05 0C           3895 	jp	z,00112$
                           3896 ;	ld.c 434
                           3897 ;	genIpush
                           3898 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BD2 C5                 3899 	push	bc
   0BD3 78                 3900 	ld	a,b
   0BD4 F5                 3901 	push	af
   0BD5 33                 3902 	inc	sp
                           3903 ;	genCall
   0BD6 CD 25 0D           3904 	call	_killEnemy
   0BD9 E8 01              3905 	lda	sp,1(sp)
   0BDB C1                 3906 	pop	bc
                           3907 ;	ld.c 437
                           3908 ;	genAssign (pointer)
                           3909 ;	AOP_STK for _updateLaser_sloc0_1_0
   0BDC F8 13              3910 	lda	hl,19(sp)
   0BDE 5E                 3911 	ld	e,(hl)
   0BDF 23                 3912 	inc	hl
   0BE0 56                 3913 	ld	d,(hl)
   0BE1 3E 02              3914 	ld	a,#0x02
   0BE3 12                 3915 	ld	(de),a
                           3916 ;	ld.c 438
                           3917 ;	genIpush
                           3918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BE4 C5                 3919 	push	bc
   0BE5 21 A0 00           3920 	ld	hl,#0x00A0
   0BE8 E5                 3921 	push	hl
                           3922 ;	genIpush
                           3923 ;	AOP_HL for _currentLaserID
   0BE9 21 E1 06           3924 	ld	hl,#_currentLaserID
   0BEC 7E                 3925 	ld	a,(hl)
   0BED F5                 3926 	push	af
   0BEE 33                 3927 	inc	sp
                           3928 ;	genCall
   0BEF CD 00 00           3929 	call	_move_sprite
   0BF2 E8 03              3930 	lda	sp,3(sp)
   0BF4 C1                 3931 	pop	bc
                           3932 ;	ld.c 439
                           3933 ;	genIpush
                           3934 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BF5 C5                 3935 	push	bc
   0BF6 21 A8 00           3936 	ld	hl,#0x00A8
   0BF9 E5                 3937 	push	hl
                           3938 ;	genIpush
                           3939 ;	AOP_STK for _updateLaser_sloc3_1_0
   0BFA F8 12              3940 	lda	hl,18(sp)
   0BFC 7E                 3941 	ld	a,(hl)
   0BFD F5                 3942 	push	af
   0BFE 33                 3943 	inc	sp
                           3944 ;	genCall
   0BFF CD 00 00           3945 	call	_move_sprite
   0C02 E8 03              3946 	lda	sp,3(sp)
   0C04 C1                 3947 	pop	bc
                           3948 ;	genLabel
   0C05                    3949 00112$:
                           3950 ;	ld.c 431
                           3951 ;	genPlus
                           3952 ;	AOP_STK for _updateLaser_sloc14_1_0
                           3953 ;	genPlusIncr
                           3954 ;	Can't optimise plus by inc, falling back to the normal way
   0C05 78                 3955 	ld	a,b
   0C06 C6 01              3956 	add	a,#0x01
   0C08 F8 00              3957 	lda	hl,0(sp)
                           3958 ;	genAssign
                           3959 ;	AOP_STK for _updateLaser_sloc14_1_0
   0C0A 77                 3960 	ld      (hl),a
   0C0B 47                 3961 	ld      b,a
                           3962 ;	genGoto
   0C0C C3 3B 0B           3963 	jp	00110$
                           3964 ;	genLabel
   0C0F                    3965 00116$:
                           3966 ;	ld.c 416
                           3967 ;	genPlus
                           3968 ;	AOP_STK for _updateLaser_i_1_1
                           3969 ;	genPlusIncr
   0C0F F8 15              3970 	lda	hl,21(sp)
   0C11 34                 3971 	inc	(hl)
                           3972 ;	genGoto
   0C12 C3 65 0A           3973 	jp	00114$
                           3974 ;	genLabel
   0C15                    3975 00118$:
                           3976 ;	genEndFunction
   0C15 E8 16              3977 	lda	sp,22(sp)
   0C17 C9                 3978 	ret
   0C18                    3979 ___updateLaser_end:
                           3980 ;	ld.c 449
                           3981 ;	genLabel
                           3982 ;	genFunction
                           3983 ;	---------------------------------
                           3984 ; Function updateHUD
                           3985 ; ---------------------------------
   0C18                    3986 ___updateHUD_start:
   0C18                    3987 _updateHUD:
                           3988 	
                           3989 ;	ld.c 451
                           3990 ;	genIpush
                           3991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C18 21 05 00           3992 	ld	hl,#0x0005
   0C1B E5                 3993 	push	hl
                           3994 ;	genCall
   0C1C CD 00 00           3995 	call	_gotoxy
   0C1F E8 02              3996 	lda	sp,2(sp)
                           3997 ;	ld.c 452
                           3998 ;	genIpush
                           3999 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4000 ;	AOP_HL for _ibm_font
   0C21 21 B8 06           4001 	ld	hl,#_ibm_font
   0C24 2A                 4002 	ld	a,(hl+)
   0C25 66                 4003 	ld	h,(hl)
   0C26 6F                 4004 	ld	l,a
   0C27 E5                 4005 	push	hl
                           4006 ;	genCall
   0C28 CD 00 00           4007 	call	_font_set
   0C2B E8 02              4008 	lda	sp,2(sp)
                           4009 ;	ld.c 453
                           4010 ;	genCast
                           4011 ;	AOP_HL for _score
   0C2D 21 BE 06           4012 	ld	hl,#_score
   0C30 4E                 4013 	ld	c,(hl)
   0C31 7E                 4014 	ld	a,(hl)
   0C32 17                 4015 	rla	
   0C33 9F                 4016 	sbc	a,a
   0C34 47                 4017 	ld	b,a
                           4018 ;	genIpush
                           4019 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C35 C5                 4020 	push	bc
                           4021 ;	genIpush
   0C36 21 40 0C           4022 	ld	hl,#__str_2
   0C39 E5                 4023 	push	hl
                           4024 ;	genCall
   0C3A CD 00 00           4025 	call	_printf
   0C3D E8 04              4026 	lda	sp,4(sp)
                           4027 ;	genLabel
   0C3F                    4028 00101$:
                           4029 ;	genEndFunction
                           4030 	
   0C3F C9                 4031 	ret
   0C40                    4032 ___updateHUD_end:
   0C40                    4033 __str_2:
   0C40 53 43 4F 52 45 20  4034 	.ascii "SCORE - %d"
        2D 20 25 64
   0C4A 00                 4035 	.db 0x00
                           4036 ;	ld.c 456
                           4037 ;	genLabel
                           4038 ;	genFunction
                           4039 ;	---------------------------------
                           4040 ; Function shoot
                           4041 ; ---------------------------------
   0C4B                    4042 ___shoot_start:
   0C4B                    4043 _shoot:
   0C4B E8 FD              4044 	lda	sp,-3(sp)
                           4045 ;	ld.c 461
                           4046 ;	genCmpGt
                           4047 ;	AOP_HL for _lastTimeShot
   0C4D 3E 00              4048 	ld	a,#0x00
   0C4F 21 C2 06           4049 	ld	hl,#_lastTimeShot
   0C52 96                 4050 	sub	a,(hl)
   0C53 DA C7 0C           4051 	jp	c,00111$
                           4052 ;	ld.c 464
                           4053 ;	genAssign
                           4054 ;	AOP_STK for _shoot_ind_2_2
   0C56 F8 02              4055 	lda	hl,2(sp)
   0C58 36 0A              4056 	ld	(hl),#0x0A
                           4057 ;	ld.c 465
                           4058 ;	genAssign
   0C5A 06 00              4059 	ld	b,#0x00
                           4060 ;	genLabel
   0C5C                    4061 00103$:
                           4062 ;	genCmpLt
   0C5C 78                 4063 	ld	a,b
   0C5D FE 0A              4064 	cp	#0x0A
   0C5F D2 86 0C           4065 	jp	nc,00106$
                           4066 ;	ld.c 466
                           4067 ;	genPlus
                           4068 ;	AOP_STK for _shoot_sloc0_1_0
                           4069 ;	Can't optimise plus by inc, falling back to the normal way
   0C62 11 F6 06           4070 	ld	de,#_ls
   0C65 68                 4071 	ld	l,b
   0C66 26 00              4072 	ld	h,#0x00
   0C68 19                 4073 	add	hl,de
   0C69 7D                 4074 	ld	a,l
   0C6A 54                 4075 	ld	d,h
   0C6B F8 00              4076 	lda	hl,0(sp)
                           4077 ;	genPointerGet
                           4078 ;	AOP_STK for _shoot_sloc0_1_0
   0C6D 22                 4079 	ld	(hl+),a
   0C6E 72                 4080 	ld	(hl),d
   0C6F 5F                 4081 	ld	e,a
   0C70 1A                 4082 	ld	a,(de)
                           4083 ;	genCmpEq
                           4084 ; genCmpEq: left 1, right 1, result 0
   0C71 4F                 4085 	ld	c,a
   0C72 FE 02              4086 	cp	a,#0x02
   0C74 C2 82 0C           4087 	jp	nz,00105$
   0C77 18 03              4088 	jr	00119$
   0C79                    4089 00118$:
   0C79 C3 82 0C           4090 	jp	00105$
   0C7C                    4091 00119$:
                           4092 ;	ld.c 467
                           4093 ;	genAssign
                           4094 ;	AOP_STK for _shoot_ind_2_2
   0C7C F8 02              4095 	lda	hl,2(sp)
   0C7E 70                 4096 	ld	(hl),b
                           4097 ;	ld.c 468
                           4098 ;	genGoto
   0C7F C3 86 0C           4099 	jp	00106$
                           4100 ;	genLabel
   0C82                    4101 00105$:
                           4102 ;	ld.c 465
                           4103 ;	genPlus
                           4104 ;	genPlusIncr
                           4105 ; Removed redundent load
   0C82 04                 4106 	inc	b
                           4107 ;	genGoto
   0C83 C3 5C 0C           4108 	jp	00103$
                           4109 ;	genLabel
   0C86                    4110 00106$:
                           4111 ;	ld.c 472
                           4112 ;	genCmpLt
                           4113 ;	AOP_STK for _shoot_ind_2_2
   0C86 F8 02              4114 	lda	hl,2(sp)
   0C88 7E                 4115 	ld	a,(hl)
   0C89 FE 0A              4116 	cp	#0x0A
   0C8B D2 C7 0C           4117 	jp	nc,00111$
                           4118 ;	ld.c 473
                           4119 ;	genPlus
                           4120 ;	AOP_STK for _shoot_ind_2_2
                           4121 ;	Can't optimise plus by inc, falling back to the normal way
   0C8E 11 E2 06           4122 	ld	de,#_lx
   0C91 6E                 4123 	ld	l,(hl)
   0C92 26 00              4124 	ld	h,#0x00
   0C94 19                 4125 	add	hl,de
   0C95 4D                 4126 	ld	c,l
   0C96 44                 4127 	ld	b,h
                           4128 ;	genAssign (pointer)
                           4129 ;	AOP_HL for _x
   0C97 21 C0 06           4130 	ld	hl,#_x
   0C9A 7E                 4131 	ld	a,(hl)
   0C9B 02                 4132 	ld	(bc),a
                           4133 ;	ld.c 474
                           4134 ;	genPlus
                           4135 ;	AOP_STK for _shoot_ind_2_2
                           4136 ;	Can't optimise plus by inc, falling back to the normal way
   0C9C 11 EC 06           4137 	ld	de,#_ly
   0C9F F8 02              4138 	lda	hl,2(sp)
   0CA1 6E                 4139 	ld	l,(hl)
   0CA2 26 00              4140 	ld	h,#0x00
   0CA4 19                 4141 	add	hl,de
   0CA5 4D                 4142 	ld	c,l
   0CA6 44                 4143 	ld	b,h
                           4144 ;	genMinus
                           4145 ;	AOP_HL for _y
                           4146 ;	AOP_STK for _shoot_sloc0_1_0
   0CA7 21 C1 06           4147 	ld	hl,#_y
   0CAA 7E                 4148 	ld	a,(hl)
   0CAB C6 F8              4149 	add	a,#0xF8
   0CAD F8 00              4150 	lda	hl,0(sp)
                           4151 ;	genAssign (pointer)
                           4152 ;	AOP_STK for _shoot_sloc0_1_0
   0CAF 77                 4153 	ld      (hl),a
                           4154 ; Removed redundent load
   0CB0 02                 4155 	ld	(bc),a
                           4156 ;	ld.c 475
                           4157 ;	genPlus
                           4158 ;	AOP_STK for _shoot_ind_2_2
                           4159 ;	Can't optimise plus by inc, falling back to the normal way
   0CB1 11 F6 06           4160 	ld	de,#_ls
   0CB4 23                 4161 	inc	hl
   0CB5 23                 4162 	inc	hl
   0CB6 6E                 4163 	ld	l,(hl)
   0CB7 26 00              4164 	ld	h,#0x00
   0CB9 19                 4165 	add	hl,de
   0CBA 4D                 4166 	ld	c,l
   0CBB 44                 4167 	ld	b,h
                           4168 ;	genAssign (pointer)
   0CBC 3E 00              4169 	ld	a,#0x00
   0CBE 02                 4170 	ld	(bc),a
                           4171 ;	ld.c 476
                           4172 ;	genAssign
                           4173 ;	AOP_HL for _lastTimeShot
   0CBF 21 C2 06           4174 	ld	hl,#_lastTimeShot
   0CC2 36 23              4175 	ld	(hl),#0x23
                           4176 ;	ld.c 478
                           4177 ;	genCall
                           4178 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CC4 CD EB 0D           4179 	call	_shootSound
                           4180 ;	genLabel
   0CC7                    4181 00111$:
                           4182 ;	genEndFunction
   0CC7 E8 03              4183 	lda	sp,3(sp)
   0CC9 C9                 4184 	ret
   0CCA                    4185 ___shoot_end:
                           4186 ;	ld.c 486
                           4187 ;	genLabel
                           4188 ;	genFunction
                           4189 ;	---------------------------------
                           4190 ; Function overlap
                           4191 ; ---------------------------------
   0CCA                    4192 ___overlap_start:
   0CCA                    4193 _overlap:
                           4194 	
                           4195 ;	ld.c 488
                           4196 ;	genPlus
                           4197 ;	AOP_STK for 
                           4198 ;	AOP_STK for 
                           4199 ;	Can't optimise plus by inc, falling back to the normal way
   0CCA F8 06              4200 	lda	hl,6(sp)
   0CCC 2A                 4201 	ld	a,(hl+)
   0CCD 23                 4202 	inc	hl
   0CCE 86                 4203 	add	a,(hl)
   0CCF 4F                 4204 	ld	c,a
                           4205 ;	genCmpLt
                           4206 ;	AOP_STK for 
   0CD0 F8 02              4207 	lda	hl,2(sp)
   0CD2 7E                 4208 	ld	a,(hl)
   0CD3 91                 4209 	sub	a,c
   0CD4 D2 00 0D           4210 	jp	nc,00102$
                           4211 ;	genPlus
                           4212 ;	AOP_STK for 
                           4213 ;	AOP_STK for 
                           4214 ;	Can't optimise plus by inc, falling back to the normal way
   0CD7 2A                 4215 	ld	a,(hl+)
   0CD8 23                 4216 	inc	hl
   0CD9 86                 4217 	add	a,(hl)
   0CDA 4F                 4218 	ld	c,a
                           4219 ;	genCmpGt
                           4220 ;	AOP_STK for 
   0CDB 23                 4221 	inc	hl
   0CDC 23                 4222 	inc	hl
   0CDD 7E                 4223 	ld	a,(hl)
   0CDE 91                 4224 	sub	a,c
   0CDF D2 00 0D           4225 	jp	nc,00102$
                           4226 ;	genPlus
                           4227 ;	AOP_STK for 
                           4228 ;	AOP_STK for 
                           4229 ;	Can't optimise plus by inc, falling back to the normal way
   0CE2 F8 09              4230 	lda	hl,9(sp)
   0CE4 7E                 4231 	ld	a,(hl)
   0CE5 2B                 4232 	dec	hl
   0CE6 2B                 4233 	dec	hl
   0CE7 86                 4234 	add	a,(hl)
   0CE8 4F                 4235 	ld	c,a
                           4236 ;	genCmpLt
                           4237 ;	AOP_STK for 
   0CE9 F8 03              4238 	lda	hl,3(sp)
   0CEB 7E                 4239 	ld	a,(hl)
   0CEC 91                 4240 	sub	a,c
   0CED D2 00 0D           4241 	jp	nc,00102$
                           4242 ;	genPlus
                           4243 ;	AOP_STK for 
                           4244 ;	AOP_STK for 
                           4245 ;	Can't optimise plus by inc, falling back to the normal way
   0CF0 2A                 4246 	ld	a,(hl+)
   0CF1 23                 4247 	inc	hl
   0CF2 86                 4248 	add	a,(hl)
   0CF3 4F                 4249 	ld	c,a
                           4250 ;	genCmpGt
                           4251 ;	AOP_STK for 
   0CF4 23                 4252 	inc	hl
   0CF5 23                 4253 	inc	hl
   0CF6 7E                 4254 	ld	a,(hl)
   0CF7 91                 4255 	sub	a,c
   0CF8 D2 00 0D           4256 	jp	nc,00102$
                           4257 ;	ld.c 489
                           4258 ;	genRet
   0CFB 1E 01              4259 	ld	e,#0x01
   0CFD C3 02 0D           4260 	jp	00107$
                           4261 ;	genLabel
   0D00                    4262 00102$:
                           4263 ;	ld.c 491
                           4264 ;	genRet
   0D00 1E 00              4265 	ld	e,#0x00
                           4266 ;	genLabel
   0D02                    4267 00107$:
                           4268 ;	genEndFunction
                           4269 	
   0D02 C9                 4270 	ret
   0D03                    4271 ___overlap_end:
                           4272 ;	ld.c 496
                           4273 ;	genLabel
                           4274 ;	genFunction
                           4275 ;	---------------------------------
                           4276 ; Function destroy
                           4277 ; ---------------------------------
   0D03                    4278 ___destroy_start:
   0D03                    4279 _destroy:
                           4280 	
                           4281 ;	ld.c 498
                           4282 ;	genIpush
                           4283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D03 3E 10              4284 	ld	a,#0x10
   0D05 F5                 4285 	push	af
   0D06 33                 4286 	inc	sp
                           4287 ;	genIpush
                           4288 ;	AOP_STK for 
   0D07 F8 03              4289 	lda	hl,3(sp)
   0D09 7E                 4290 	ld	a,(hl)
   0D0A F5                 4291 	push	af
   0D0B 33                 4292 	inc	sp
                           4293 ;	genCall
   0D0C CD 00 00           4294 	call	_set_sprite_tile
   0D0F E8 02              4295 	lda	sp,2(sp)
                           4296 ;	ld.c 499
                           4297 ;	genPlus
                           4298 ;	AOP_STK for 
                           4299 ;	genPlusIncr
   0D11 F8 02              4300 	lda	hl,2(sp)
   0D13 4E                 4301 	ld	c,(hl)
   0D14 0C                 4302 	inc	c
                           4303 ;	genIpush
                           4304 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D15 3E 12              4305 	ld	a,#0x12
   0D17 F5                 4306 	push	af
   0D18 33                 4307 	inc	sp
                           4308 ;	genIpush
   0D19 79                 4309 	ld	a,c
   0D1A F5                 4310 	push	af
   0D1B 33                 4311 	inc	sp
                           4312 ;	genCall
   0D1C CD 00 00           4313 	call	_set_sprite_tile
   0D1F E8 02              4314 	lda	sp,2(sp)
                           4315 ;	ld.c 501
                           4316 ;	genCall
                           4317 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D21 CD 1C 0E           4318 	call	_explosionSound
                           4319 ;	genLabel
   0D24                    4320 00101$:
                           4321 ;	genEndFunction
                           4322 	
   0D24 C9                 4323 	ret
   0D25                    4324 ___destroy_end:
                           4325 ;	ld.c 504
                           4326 ;	genLabel
                           4327 ;	genFunction
                           4328 ;	---------------------------------
                           4329 ; Function killEnemy
                           4330 ; ---------------------------------
   0D25                    4331 ___killEnemy_start:
   0D25                    4332 _killEnemy:
                           4333 	
                           4334 ;	ld.c 505
                           4335 ;	genPlus
                           4336 ;	AOP_STK for 
                           4337 ;	Can't optimise plus by inc, falling back to the normal way
   0D25 11 DA 06           4338 	ld	de,#_et
   0D28 F8 02              4339 	lda	hl,2(sp)
   0D2A 6E                 4340 	ld	l,(hl)
   0D2B 26 00              4341 	ld	h,#0x00
   0D2D 19                 4342 	add	hl,de
   0D2E 4D                 4343 	ld	c,l
   0D2F 44                 4344 	ld	b,h
                           4345 ;	genAssign (pointer)
   0D30 3E 05              4346 	ld	a,#0x05
   0D32 02                 4347 	ld	(bc),a
                           4348 ;	ld.c 506
                           4349 ;	genPlus
                           4350 ;	AOP_STK for 
                           4351 ;	Can't optimise plus by inc, falling back to the normal way
   0D33 11 D3 06           4352 	ld	de,#_es
   0D36 F8 02              4353 	lda	hl,2(sp)
   0D38 6E                 4354 	ld	l,(hl)
   0D39 26 00              4355 	ld	h,#0x00
   0D3B 19                 4356 	add	hl,de
   0D3C 4D                 4357 	ld	c,l
   0D3D 44                 4358 	ld	b,h
                           4359 ;	genAssign (pointer)
   0D3E 3E 01              4360 	ld	a,#0x01
   0D40 02                 4361 	ld	(bc),a
                           4362 ;	ld.c 507
                           4363 ;	genIpush
                           4364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4365 ;	AOP_STK for 
   0D41 F8 02              4366 	lda	hl,2(sp)
   0D43 7E                 4367 	ld	a,(hl)
   0D44 F5                 4368 	push	af
   0D45 33                 4369 	inc	sp
                           4370 ;	genCall
   0D46 CD 72 06           4371 	call	_getEnemySpriteIndexFast
                           4372 ;	AOP_HL for _currentID
   0D49 21 C4 06           4373 	ld	hl,#_currentID
   0D4C 73                 4374 	ld	(hl),e
   0D4D E8 01              4375 	lda	sp,1(sp)
                           4376 ;	ld.c 508
                           4377 ;	genIpush
                           4378 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4379 ;	AOP_HL for _currentID
   0D4F 21 C4 06           4380 	ld	hl,#_currentID
   0D52 7E                 4381 	ld	a,(hl)
   0D53 F5                 4382 	push	af
   0D54 33                 4383 	inc	sp
                           4384 ;	genCall
   0D55 CD 03 0D           4385 	call	_destroy
   0D58 E8 01              4386 	lda	sp,1(sp)
                           4387 ;	ld.c 510
                           4388 ;	genCmpEq
                           4389 ;	AOP_HL for _score
                           4390 ; genCmpEq: left 1, right 1, result 0
   0D5A 21 BE 06           4391 	ld	hl,#_score
   0D5D 7E                 4392 	ld	a,(hl)
   0D5E FE 64              4393 	cp	a,#0x64
   0D60 C2 77 0D           4394 	jp	nz,00102$
   0D63 18 03              4395 	jr	00108$
   0D65                    4396 00107$:
   0D65 C3 77 0D           4397 	jp	00102$
   0D68                    4398 00108$:
                           4399 ;	ld.c 511
                           4400 ;	genAssign
                           4401 ;	AOP_HL for _score
   0D68 21 BE 06           4402 	ld	hl,#_score
   0D6B 36 00              4403 	ld	(hl),#0x00
                           4404 ;	ld.c 512
                           4405 ;	genCall
                           4406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D6D CD 4D 0E           4407 	call	_startSound
                           4408 ;	ld.c 513
                           4409 ;	genPlus
                           4410 ;	AOP_HL for _health
                           4411 ;	genPlusIncr
   0D70 21 C3 06           4412 	ld	hl,#_health
   0D73 34                 4413 	inc	(hl)
                           4414 ;	genGoto
   0D74 C3 7B 0D           4415 	jp	00103$
                           4416 ;	genLabel
   0D77                    4417 00102$:
                           4418 ;	ld.c 515
                           4419 ;	genPlus
                           4420 ;	AOP_HL for _score
                           4421 ;	genPlusIncr
   0D77 21 BE 06           4422 	ld	hl,#_score
   0D7A 34                 4423 	inc	(hl)
                           4424 ;	genLabel
   0D7B                    4425 00103$:
                           4426 ;	ld.c 518
                           4427 ;	genCall
                           4428 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D7B CD 18 0C           4429 	call	_updateHUD
                           4430 ;	genLabel
   0D7E                    4431 00104$:
                           4432 ;	genEndFunction
                           4433 	
   0D7E C9                 4434 	ret
   0D7F                    4435 ___killEnemy_end:
                           4436 ;	ld.c 521
                           4437 ;	genLabel
                           4438 ;	genFunction
                           4439 ;	---------------------------------
                           4440 ; Function hurtPlayer
                           4441 ; ---------------------------------
   0D7F                    4442 ___hurtPlayer_start:
   0D7F                    4443 _hurtPlayer:
                           4444 	
                           4445 ;	ld.c 522
                           4446 ;	genMinus
                           4447 ;	AOP_HL for _health
   0D7F 21 C3 06           4448 	ld	hl,#_health
   0D82 35                 4449 	dec	(hl)
                           4450 ;	ld.c 523
                           4451 ;	genCmpGt
                           4452 ;	AOP_HL for _health
   0D83 3E 00              4453 	ld	a,#0x00
   0D85 96                 4454 	sub	a,(hl)
   0D86 DA D3 0D           4455 	jp	c,00103$
                           4456 ;	ld.c 524
                           4457 ;	genIpush
                           4458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D89 3E 00              4459 	ld	a,#0x00
   0D8B F5                 4460 	push	af
   0D8C 33                 4461 	inc	sp
                           4462 ;	genCall
   0D8D CD 03 0D           4463 	call	_destroy
   0D90 E8 01              4464 	lda	sp,1(sp)
                           4465 ;	ld.c 525
                           4466 ;	genAssign
                           4467 ;	AOP_HL for _game_over
   0D92 21 BF 06           4468 	ld	hl,#_game_over
   0D95 36 01              4469 	ld	(hl),#0x01
                           4470 ;	ld.c 527
                           4471 ;	genIpush
                           4472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D97 21 06 08           4473 	ld	hl,#0x0806
   0D9A E5                 4474 	push	hl
                           4475 ;	genCall
   0D9B CD 00 00           4476 	call	_gotoxy
   0D9E E8 02              4477 	lda	sp,2(sp)
                           4478 ;	ld.c 528
                           4479 ;	genIpush
                           4480 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4481 ;	AOP_HL for _ibm_font
   0DA0 21 B8 06           4482 	ld	hl,#_ibm_font
   0DA3 2A                 4483 	ld	a,(hl+)
   0DA4 66                 4484 	ld	h,(hl)
   0DA5 6F                 4485 	ld	l,a
   0DA6 E5                 4486 	push	hl
                           4487 ;	genCall
   0DA7 CD 00 00           4488 	call	_font_set
   0DAA E8 02              4489 	lda	sp,2(sp)
                           4490 ;	ld.c 529
                           4491 ;	genIpush
                           4492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DAC 21 D4 0D           4493 	ld	hl,#__str_3
   0DAF E5                 4494 	push	hl
                           4495 ;	genCall
   0DB0 CD 00 00           4496 	call	_printf
   0DB3 E8 02              4497 	lda	sp,2(sp)
                           4498 ;	ld.c 531
                           4499 ;	genIpush
                           4500 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DB5 21 04 0C           4501 	ld	hl,#0x0C04
   0DB8 E5                 4502 	push	hl
                           4503 ;	genCall
   0DB9 CD 00 00           4504 	call	_gotoxy
   0DBC E8 02              4505 	lda	sp,2(sp)
                           4506 ;	ld.c 532
                           4507 ;	genIpush
                           4508 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4509 ;	AOP_HL for _ibm_font
   0DBE 21 B8 06           4510 	ld	hl,#_ibm_font
   0DC1 2A                 4511 	ld	a,(hl+)
   0DC2 66                 4512 	ld	h,(hl)
   0DC3 6F                 4513 	ld	l,a
   0DC4 E5                 4514 	push	hl
                           4515 ;	genCall
   0DC5 CD 00 00           4516 	call	_font_set
   0DC8 E8 02              4517 	lda	sp,2(sp)
                           4518 ;	ld.c 533
                           4519 ;	genIpush
                           4520 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCA 21 DE 0D           4521 	ld	hl,#__str_4
   0DCD E5                 4522 	push	hl
                           4523 ;	genCall
   0DCE CD 00 00           4524 	call	_printf
   0DD1 E8 02              4525 	lda	sp,2(sp)
                           4526 ;	genLabel
   0DD3                    4527 00103$:
                           4528 ;	genEndFunction
                           4529 	
   0DD3 C9                 4530 	ret
   0DD4                    4531 ___hurtPlayer_end:
   0DD4                    4532 __str_3:
   0DD4 47 41 4D 45 20 4F  4533 	.ascii "GAME OVER"
        56 45 52
   0DDD 00                 4534 	.db 0x00
   0DDE                    4535 __str_4:
   0DDE 2D 50 55 53 48 20  4536 	.ascii "-PUSH START-"
        53 54 41 52 54 2D
   0DEA 00                 4537 	.db 0x00
                           4538 ;	ld.c 538
                           4539 ;	genLabel
                           4540 ;	genFunction
                           4541 ;	---------------------------------
                           4542 ; Function shootSound
                           4543 ; ---------------------------------
   0DEB                    4544 ___shootSound_start:
   0DEB                    4545 _shootSound:
                           4546 	
                           4547 ;	ld.c 540
                           4548 ;	genAssign
   0DEB 01 26 FF           4549 	ld	bc,#0xFF26
                           4550 ;	genAssign (pointer)
   0DEE 3E 8F              4551 	ld	a,#0x8F
   0DF0 02                 4552 	ld	(bc),a
                           4553 ;	ld.c 541
                           4554 ;	genAssign
   0DF1 01 25 FF           4555 	ld	bc,#0xFF25
                           4556 ;	genAssign (pointer)
   0DF4 3E 11              4557 	ld	a,#0x11
   0DF6 02                 4558 	ld	(bc),a
                           4559 ;	ld.c 542
                           4560 ;	genAssign
   0DF7 01 24 FF           4561 	ld	bc,#0xFF24
                           4562 ;	genAssign (pointer)
   0DFA 3E 10              4563 	ld	a,#0x10
   0DFC 02                 4564 	ld	(bc),a
                           4565 ;	ld.c 544
                           4566 ;	genAssign
   0DFD 01 10 FF           4567 	ld	bc,#0xFF10
                           4568 ;	genAssign (pointer)
   0E00 3E 1E              4569 	ld	a,#0x1E
   0E02 02                 4570 	ld	(bc),a
                           4571 ;	ld.c 545
                           4572 ;	genAssign
   0E03 01 11 FF           4573 	ld	bc,#0xFF11
                           4574 ;	genAssign (pointer)
   0E06 3E 10              4575 	ld	a,#0x10
   0E08 02                 4576 	ld	(bc),a
                           4577 ;	ld.c 546
                           4578 ;	genAssign
   0E09 01 12 FF           4579 	ld	bc,#0xFF12
                           4580 ;	genAssign (pointer)
   0E0C 3E F3              4581 	ld	a,#0xF3
   0E0E 02                 4582 	ld	(bc),a
                           4583 ;	ld.c 547
                           4584 ;	genAssign
   0E0F 01 13 FF           4585 	ld	bc,#0xFF13
                           4586 ;	genAssign (pointer)
   0E12 3E 00              4587 	ld	a,#0x00
   0E14 02                 4588 	ld	(bc),a
                           4589 ;	ld.c 548
                           4590 ;	genAssign
   0E15 01 14 FF           4591 	ld	bc,#0xFF14
                           4592 ;	genAssign (pointer)
   0E18 3E 87              4593 	ld	a,#0x87
   0E1A 02                 4594 	ld	(bc),a
                           4595 ;	genLabel
   0E1B                    4596 00101$:
                           4597 ;	genEndFunction
                           4598 	
   0E1B C9                 4599 	ret
   0E1C                    4600 ___shootSound_end:
                           4601 ;	ld.c 551
                           4602 ;	genLabel
                           4603 ;	genFunction
                           4604 ;	---------------------------------
                           4605 ; Function explosionSound
                           4606 ; ---------------------------------
   0E1C                    4607 ___explosionSound_start:
   0E1C                    4608 _explosionSound:
                           4609 	
                           4610 ;	ld.c 553
                           4611 ;	genAssign
   0E1C 01 26 FF           4612 	ld	bc,#0xFF26
                           4613 ;	genAssign (pointer)
   0E1F 3E 8F              4614 	ld	a,#0x8F
   0E21 02                 4615 	ld	(bc),a
                           4616 ;	ld.c 554
                           4617 ;	genAssign
   0E22 01 25 FF           4618 	ld	bc,#0xFF25
                           4619 ;	genAssign (pointer)
   0E25 3E 11              4620 	ld	a,#0x11
   0E27 02                 4621 	ld	(bc),a
                           4622 ;	ld.c 555
                           4623 ;	genAssign
   0E28 01 24 FF           4624 	ld	bc,#0xFF24
                           4625 ;	genAssign (pointer)
   0E2B 3E 1A              4626 	ld	a,#0x1A
   0E2D 02                 4627 	ld	(bc),a
                           4628 ;	ld.c 557
                           4629 ;	genAssign
   0E2E 01 10 FF           4630 	ld	bc,#0xFF10
                           4631 ;	genAssign (pointer)
   0E31 3E 2A              4632 	ld	a,#0x2A
   0E33 02                 4633 	ld	(bc),a
                           4634 ;	ld.c 558
                           4635 ;	genAssign
   0E34 01 11 FF           4636 	ld	bc,#0xFF11
                           4637 ;	genAssign (pointer)
   0E37 3E C1              4638 	ld	a,#0xC1
   0E39 02                 4639 	ld	(bc),a
                           4640 ;	ld.c 559
                           4641 ;	genAssign
   0E3A 01 12 FF           4642 	ld	bc,#0xFF12
                           4643 ;	genAssign (pointer)
   0E3D 3E 53              4644 	ld	a,#0x53
   0E3F 02                 4645 	ld	(bc),a
                           4646 ;	ld.c 560
                           4647 ;	genAssign
   0E40 01 13 FF           4648 	ld	bc,#0xFF13
                           4649 ;	genAssign (pointer)
   0E43 3E 61              4650 	ld	a,#0x61
   0E45 02                 4651 	ld	(bc),a
                           4652 ;	ld.c 561
                           4653 ;	genAssign
   0E46 01 14 FF           4654 	ld	bc,#0xFF14
                           4655 ;	genAssign (pointer)
   0E49 3E C6              4656 	ld	a,#0xC6
   0E4B 02                 4657 	ld	(bc),a
                           4658 ;	genLabel
   0E4C                    4659 00101$:
                           4660 ;	genEndFunction
                           4661 	
   0E4C C9                 4662 	ret
   0E4D                    4663 ___explosionSound_end:
                           4664 ;	ld.c 564
                           4665 ;	genLabel
                           4666 ;	genFunction
                           4667 ;	---------------------------------
                           4668 ; Function startSound
                           4669 ; ---------------------------------
   0E4D                    4670 ___startSound_start:
   0E4D                    4671 _startSound:
                           4672 	
                           4673 ;	ld.c 566
                           4674 ;	genAssign
   0E4D 01 26 FF           4675 	ld	bc,#0xFF26
                           4676 ;	genAssign (pointer)
   0E50 3E 8F              4677 	ld	a,#0x8F
   0E52 02                 4678 	ld	(bc),a
                           4679 ;	ld.c 567
                           4680 ;	genAssign
   0E53 01 25 FF           4681 	ld	bc,#0xFF25
                           4682 ;	genAssign (pointer)
   0E56 3E 11              4683 	ld	a,#0x11
   0E58 02                 4684 	ld	(bc),a
                           4685 ;	ld.c 568
                           4686 ;	genAssign
   0E59 01 24 FF           4687 	ld	bc,#0xFF24
                           4688 ;	genAssign (pointer)
   0E5C 3E 1A              4689 	ld	a,#0x1A
   0E5E 02                 4690 	ld	(bc),a
                           4691 ;	ld.c 570
                           4692 ;	genAssign
   0E5F 01 10 FF           4693 	ld	bc,#0xFF10
                           4694 ;	genAssign (pointer)
   0E62 3E 76              4695 	ld	a,#0x76
   0E64 02                 4696 	ld	(bc),a
                           4697 ;	ld.c 571
                           4698 ;	genAssign
   0E65 01 11 FF           4699 	ld	bc,#0xFF11
                           4700 ;	genAssign (pointer)
   0E68 3E 4D              4701 	ld	a,#0x4D
   0E6A 02                 4702 	ld	(bc),a
                           4703 ;	ld.c 572
                           4704 ;	genAssign
   0E6B 01 12 FF           4705 	ld	bc,#0xFF12
                           4706 ;	genAssign (pointer)
   0E6E 3E 87              4707 	ld	a,#0x87
   0E70 02                 4708 	ld	(bc),a
                           4709 ;	ld.c 573
                           4710 ;	genAssign
   0E71 01 13 FF           4711 	ld	bc,#0xFF13
                           4712 ;	genAssign (pointer)
   0E74 3E A2              4713 	ld	a,#0xA2
   0E76 02                 4714 	ld	(bc),a
                           4715 ;	ld.c 574
                           4716 ;	genAssign
   0E77 01 14 FF           4717 	ld	bc,#0xFF14
                           4718 ;	genAssign (pointer)
   0E7A 3E 86              4719 	ld	a,#0x86
   0E7C 02                 4720 	ld	(bc),a
                           4721 ;	genLabel
   0E7D                    4722 00101$:
                           4723 ;	genEndFunction
                           4724 	
   0E7D C9                 4725 	ret
   0E7E                    4726 ___startSound_end:
                           4727 ;	ld.c 577
                           4728 ;	genLabel
                           4729 ;	genFunction
                           4730 ;	---------------------------------
                           4731 ; Function generateNewXPosition
                           4732 ; ---------------------------------
   0E7E                    4733 ___generateNewXPosition_start:
   0E7E                    4734 _generateNewXPosition:
   0E7E E8 FF              4735 	lda	sp,-1(sp)
                           4736 ;	ld.c 581
                           4737 ;	genCall
                           4738 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E80 CD 00 00           4739 	call	_rand
   0E83 4B                 4740 	ld	c,e
                           4741 ;	genAssign
                           4742 ;	(registers are the same)
                           4743 ;	ld.c 582
                           4744 ;	genCall
                           4745 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E84 C5                 4746 	push	bc
   0E85 CD 00 00           4747 	call	_arand
   0E88 43                 4748 	ld	b,e
   0E89 E1                 4749 	pop	hl
   0E8A 4D                 4750 	ld	c,l
                           4751 ;	genAssign
                           4752 ;	(registers are the same)
                           4753 ;	ld.c 584
                           4754 ;	genCmpLt
   0E8B 79                 4755 	ld	a,c
   0E8C FE 08              4756 	cp	#0x08
   0E8E DA 9B 0E           4757 	jp	c,00102$
                           4758 ;	genCmpGt
   0E91 3E 96              4759 	ld	a,#0x96
   0E93 91                 4760 	sub	a,c
   0E94 DA 9B 0E           4761 	jp	c,00102$
                           4762 ;	ld.c 585
                           4763 ;	genRet
   0E97 59                 4764 	ld	e,c
   0E98 C3 CA 0E           4765 	jp	00111$
                           4766 ;	genLabel
   0E9B                    4767 00102$:
                           4768 ;	ld.c 588
                           4769 ;	genCmpLt
   0E9B 78                 4770 	ld	a,b
   0E9C FE 08              4771 	cp	#0x08
   0E9E DA AB 0E           4772 	jp	c,00105$
                           4773 ;	genCmpGt
   0EA1 3E 96              4774 	ld	a,#0x96
   0EA3 90                 4775 	sub	a,b
   0EA4 DA AB 0E           4776 	jp	c,00105$
                           4777 ;	ld.c 589
                           4778 ;	genRet
   0EA7 58                 4779 	ld	e,b
   0EA8 C3 CA 0E           4780 	jp	00111$
                           4781 ;	genLabel
   0EAB                    4782 00105$:
                           4783 ;	ld.c 592
                           4784 ;	genMinus
                           4785 ;	AOP_STK for _generateNewXPosition_sloc0_1_0
   0EAB 79                 4786 	ld	a,c
   0EAC 90                 4787 	sub	a,b
   0EAD F8 00              4788 	lda	hl,0(sp)
   0EAF 77                 4789 	ld	(hl),a
                           4790 ;	genCmpGt
                           4791 ;	AOP_STK for _generateNewXPosition_sloc0_1_0
   0EB0 3E 64              4792 	ld	a,#0x64
   0EB2 96                 4793 	sub	a,(hl)
   0EB3 D2 BB 0E           4794 	jp	nc,00108$
                           4795 ;	ld.c 593
                           4796 ;	genRet
   0EB6 1E 78              4797 	ld	e,#0x78
   0EB8 C3 CA 0E           4798 	jp	00111$
                           4799 ;	genLabel
   0EBB                    4800 00108$:
                           4801 ;	ld.c 596
                           4802 ;	genPlus
                           4803 ;	Can't optimise plus by inc, falling back to the normal way
   0EBB 79                 4804 	ld	a,c
   0EBC 80                 4805 	add	a,b
                           4806 ;	genCmpLt
   0EBD 4F                 4807 	ld	c,a
   0EBE FE 64              4808 	cp	#0x64
   0EC0 D2 C8 0E           4809 	jp	nc,00110$
                           4810 ;	ld.c 597
                           4811 ;	genRet
   0EC3 1E 14              4812 	ld	e,#0x14
   0EC5 C3 CA 0E           4813 	jp	00111$
                           4814 ;	genLabel
   0EC8                    4815 00110$:
                           4816 ;	ld.c 600
                           4817 ;	genRet
   0EC8 1E 50              4818 	ld	e,#0x50
                           4819 ;	genLabel
   0ECA                    4820 00111$:
                           4821 ;	genEndFunction
   0ECA E8 01              4822 	lda	sp,1(sp)
   0ECC C9                 4823 	ret
   0ECD                    4824 ___generateNewXPosition_end:
                           4825 ;	ld.c 603
                           4826 ;	genLabel
                           4827 ;	genFunction
                           4828 ;	---------------------------------
                           4829 ; Function main
                           4830 ; ---------------------------------
   0ECD                    4831 ___main_start:
   0ECD                    4832 _main:
   0ECD E8 FD              4833 	lda	sp,-3(sp)
                           4834 ;	ld.c 605
                           4835 ;	genCall
                           4836 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ECF CD 00 00           4837 	call	_setup
                           4838 ;	ld.c 606
                           4839 ;	genCall
                           4840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ED2 CD 2D 00           4841 	call	_initTitleScreen
                           4842 ;	ld.c 608
                           4843 ;	genLabel
   0ED5                    4844 00101$:
                           4845 ;	genIfx
                           4846 ;	AOP_HL for _start_pressed
   0ED5 AF                 4847 	xor	a,a
   0ED6 21 BC 06           4848 	ld	hl,#_start_pressed
   0ED9 B6                 4849 	or	a,(hl)
   0EDA C2 E6 0E           4850 	jp	nz,00103$
                           4851 ;	ld.c 609
                           4852 ;	genCall
                           4853 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EDD CD 00 00           4854 	call	_wait_vbl_done
                           4855 ;	ld.c 610
                           4856 ;	genCall
                           4857 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE0 CD B6 00           4858 	call	_updateTitleScreen
                           4859 ;	genGoto
   0EE3 C3 D5 0E           4860 	jp	00101$
                           4861 ;	genLabel
   0EE6                    4862 00103$:
                           4863 ;	ld.c 613
                           4864 ;	genCall
                           4865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE6 CD 4D 0E           4866 	call	_startSound
                           4867 ;	ld.c 614
                           4868 ;	genIpush
                           4869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE9 21 FF 00           4870 	ld	hl,#0x00FF
   0EEC E5                 4871 	push	hl
                           4872 ;	genCall
   0EED CD 00 00           4873 	call	_delay
   0EF0 E8 02              4874 	lda	sp,2(sp)
                           4875 ;	ld.c 616
                           4876 ;	genCall
                           4877 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EF2 CD CB 00           4878 	call	_initGame
                           4879 ;	ld.c 618
                           4880 ;	genLabel
   0EF5                    4881 00112$:
                           4882 ;	ld.c 620
                           4883 ;	genCall
                           4884 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EF5 CD 00 00           4885 	call	_wait_vbl_done
                           4886 ;	ld.c 623
                           4887 ;	genCmpEq
                           4888 ;	AOP_HL for _game_over
                           4889 ; genCmpEq: left 1, right 1, result 0
   0EF8 21 BF 06           4890 	ld	hl,#_game_over
   0EFB 7E                 4891 	ld	a,(hl)
   0EFC FE 01              4892 	cp	a,#0x01
   0EFE C2 37 0F           4893 	jp	nz,00110$
   0F01 18 03              4894 	jr	00124$
   0F03                    4895 00123$:
   0F03 C3 37 0F           4896 	jp	00110$
   0F06                    4897 00124$:
                           4898 ;	ld.c 625
                           4899 ;	genAssign
                           4900 ;	AOP_HL for _start_pressed
   0F06 21 BC 06           4901 	ld	hl,#_start_pressed
   0F09 36 00              4902 	ld	(hl),#0x00
                           4903 ;	ld.c 626
                           4904 ;	genLabel
   0F0B                    4905 00106$:
                           4906 ;	genIfx
                           4907 ;	AOP_HL for _start_pressed
   0F0B AF                 4908 	xor	a,a
   0F0C 21 BC 06           4909 	ld	hl,#_start_pressed
   0F0F B6                 4910 	or	a,(hl)
   0F10 C2 34 0F           4911 	jp	nz,00108$
                           4912 ;	ld.c 627
                           4913 ;	genCall
                           4914 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F13 CD 00 00           4915 	call	_joypad
   0F16 4B                 4916 	ld	c,e
                           4917 ;	genCmpEq
                           4918 ; genCmpEq: left 1, right 1, result 1
   0F17 79                 4919 	ld	a,c
   0F18 FE 80              4920 	cp	a,#0x80
   0F1A C2 21 0F           4921 	jp	nz,00125$
   0F1D 3E 01              4922 	ld	a,#0x01
   0F1F 18 01              4923 	jr	00126$
   0F21                    4924 00125$:
   0F21 AF                 4925 	xor	a,a
   0F22                    4926 00126$:
                           4927 ;	genIfx
   0F22 B7                 4928 	or	a,a
   0F23 CA 2B 0F           4929 	jp	z,00105$
                           4930 ;	ld.c 628
                           4931 ;	genAssign
                           4932 ;	AOP_HL for _start_pressed
   0F26 21 BC 06           4933 	ld	hl,#_start_pressed
   0F29 36 01              4934 	ld	(hl),#0x01
                           4935 ;	genLabel
   0F2B                    4936 00105$:
                           4937 ;	ld.c 630
                           4938 ;	genCall
                           4939 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F2B C5                 4940 	push	bc
   0F2C CD 00 00           4941 	call	_wait_vbl_done
   0F2F E1                 4942 	pop	hl
   0F30 4D                 4943 	ld	c,l
                           4944 ;	genGoto
   0F31 C3 0B 0F           4945 	jp	00106$
                           4946 ;	genLabel
   0F34                    4947 00108$:
                           4948 ;	ld.c 633
                           4949 ;	genCall
                           4950 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F34 CD 00 00           4951 	call	_reset
                           4952 ;	genLabel
   0F37                    4953 00110$:
                           4954 ;	ld.c 636
                           4955 ;	genCall
                           4956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F37 CD 0F 05           4957 	call	_updatePlayer
                           4958 ;	ld.c 637
                           4959 ;	genCall
                           4960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F3A CD F8 07           4961 	call	_updateEnemies
                           4962 ;	ld.c 638
                           4963 ;	genCall
                           4964 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F3D CD 5F 0A           4965 	call	_updateLaser
                           4966 ;	ld.c 640
                           4967 ;	genAssign
   0F40 01 40 FF           4968 	ld	bc,#0xFF40
                           4969 ;	genAssign
                           4970 ;	AOP_STK for _main_sloc0_1_0
   0F43 F8 01              4971 	lda	hl,1(sp)
   0F45 36 40              4972 	ld	(hl),#0x40
   0F47 23                 4973 	inc	hl
   0F48 36 FF              4974 	ld	(hl),#0xFF
                           4975 ;	genPointerGet
                           4976 ;	AOP_STK for _main_sloc0_1_0
                           4977 ;	AOP_STK for _main_sloc1_1_0
   0F4A 2B                 4978 	dec	hl
   0F4B 5E                 4979 	ld	e,(hl)
   0F4C 23                 4980 	inc	hl
   0F4D 56                 4981 	ld	d,(hl)
   0F4E 1A                 4982 	ld	a,(de)
   0F4F 2B                 4983 	dec	hl
   0F50 2B                 4984 	dec	hl
                           4985 ;	genAnd
                           4986 ;	AOP_STK for _main_sloc1_1_0
   0F51 77                 4987 	ld      (hl),a
                           4988 ; Removed redundent load
   0F52 E6 DF              4989 	and	a,#0xDF
                           4990 ;	genAssign (pointer)
   0F54 02                 4991 	ld	(bc),a
                           4992 ;	ld.c 641
                           4993 ;	genAssign
   0F55 01 40 FF           4994 	ld	bc,#0xFF40
                           4995 ;	genAssign
                           4996 ;	AOP_STK for _main_sloc0_1_0
   0F58 23                 4997 	inc	hl
   0F59 36 40              4998 	ld	(hl),#0x40
   0F5B 23                 4999 	inc	hl
   0F5C 36 FF              5000 	ld	(hl),#0xFF
                           5001 ;	genPointerGet
                           5002 ;	AOP_STK for _main_sloc0_1_0
                           5003 ;	AOP_STK for _main_sloc1_1_0
   0F5E 2B                 5004 	dec	hl
   0F5F 5E                 5005 	ld	e,(hl)
   0F60 23                 5006 	inc	hl
   0F61 56                 5007 	ld	d,(hl)
   0F62 1A                 5008 	ld	a,(de)
   0F63 2B                 5009 	dec	hl
   0F64 2B                 5010 	dec	hl
                           5011 ;	genOr
                           5012 ;	AOP_STK for _main_sloc1_1_0
   0F65 77                 5013 	ld      (hl),a
                           5014 ; Removed redundent load
   0F66 F6 02              5015 	or	a,#0x02
                           5016 ;	genAssign (pointer)
   0F68 02                 5017 	ld	(bc),a
                           5018 ;	ld.c 642
                           5019 ;	genAssign
   0F69 01 40 FF           5020 	ld	bc,#0xFF40
                           5021 ;	genAssign
                           5022 ;	AOP_STK for _main_sloc0_1_0
   0F6C 23                 5023 	inc	hl
   0F6D 36 40              5024 	ld	(hl),#0x40
   0F6F 23                 5025 	inc	hl
   0F70 36 FF              5026 	ld	(hl),#0xFF
                           5027 ;	genPointerGet
                           5028 ;	AOP_STK for _main_sloc0_1_0
                           5029 ;	AOP_STK for _main_sloc1_1_0
   0F72 2B                 5030 	dec	hl
   0F73 5E                 5031 	ld	e,(hl)
   0F74 23                 5032 	inc	hl
   0F75 56                 5033 	ld	d,(hl)
   0F76 1A                 5034 	ld	a,(de)
   0F77 2B                 5035 	dec	hl
   0F78 2B                 5036 	dec	hl
                           5037 ;	genOr
                           5038 ;	AOP_STK for _main_sloc1_1_0
   0F79 77                 5039 	ld      (hl),a
                           5040 ; Removed redundent load
   0F7A F6 01              5041 	or	a,#0x01
                           5042 ;	genAssign (pointer)
   0F7C 02                 5043 	ld	(bc),a
                           5044 ;	ld.c 644
                           5045 ;	genCall
                           5046 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F7D CD 00 00           5047 	call	_joypad
                           5048 ;	AOP_HL for _lastKeys
   0F80 21 BB 06           5049 	ld	hl,#_lastKeys
   0F83 73                 5050 	ld	(hl),e
                           5051 ;	genGoto
   0F84 C3 F5 0E           5052 	jp	00112$
                           5053 ;	genLabel
   0F87                    5054 00114$:
                           5055 ;	genEndFunction
   0F87 E8 03              5056 	lda	sp,3(sp)
   0F89 C9                 5057 	ret
   0F8A                    5058 ___main_end:
                           5059 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___destroy_end                     0D25 R
  0 ___destroy_start                   0D03 R
  0 ___explosionSound_end              0E4D R
  0 ___explosionSound_start            0E1C R
  0 ___generateNewXPosition_end        0ECD R
  0 ___generateNewXPosition_start      0E7E R
  0 ___getEnemySpriteIndexFast_end     0735 R
  0 ___getEnemySpriteIndexFast_start   0672 R
  0 ___getEnemySpriteIndex_end         0672 R
  0 ___getEnemySpriteIndex_start       0665 R
  0 ___getLaserSpriteIndexFast_end     07F8 R
  0 ___getLaserSpriteIndexFast_start   0735 R
  0 ___hurtPlayer_end                  0DD4 R
  0 ___hurtPlayer_start                0D7F R
  0 ___initGame_end                    04E1 R
  0 ___initGame_start                  00CB R
  0 ___initTitleScreen_end             009C R
  0 ___initTitleScreen_start           002D R
  0 ___killEnemy_end                   0D7F R
  0 ___killEnemy_start                 0D25 R
  0 ___main_end                        0F8A R
  0 ___main_start                      0ECD R
  0 ___overlap_end                     0D03 R
  0 ___overlap_start                   0CCA R
  0 ___setup_end                       002D R
  0 ___setup_start                     0000 R
  0 ___shootSound_end                  0E1C R
  0 ___shootSound_start                0DEB R
  0 ___shoot_end                       0CCA R
  0 ___shoot_start                     0C4B R
  0 ___startSound_end                  0E7E R
  0 ___startSound_start                0E4D R
  0 ___updateEnemies_end               0A5F R
  0 ___updateEnemies_start             07F8 R
  0 ___updateHUD_end                   0C40 R
  0 ___updateHUD_start                 0C18 R
  0 ___updateLaser_end                 0C18 R
  0 ___updateLaser_start               0A5F R
  0 ___updatePlayer_end                0665 R
  0 ___updatePlayer_start              050F R
  0 ___updateTimers_end                050F R
  0 ___updateTimers_start              04E1 R
  0 ___updateTitleScreen_end           00CB R
  0 ___updateTitleScreen_start         00B6 R
    __initrleblock                     **** GX
    __modschar_rrx_s                   **** GX
  0 __str_0                            009C R
  0 __str_1                            00A9 R
  0 __str_2                            0C40 R
  0 __str_3                            0DD4 R
  0 __str_4                            0DDE R
    _arand                             **** GX
  1 _currentID                         06C4 GR
  1 _currentLaserID                    06E1 GR
    _delay                             **** GX
  0 _destroy                           0D03 GR
  1 _enemy                             0040 GR
  1 _es                                06D3 GR
  1 _et                                06DA GR
  1 _ex                                06C5 GR
  1 _explosion                         0080 GR
  0 _explosionSound                    0E1C GR
  1 _ey                                06CC GR
    _font_ibm                          **** GX
    _font_init                         **** GX
    _font_load                         **** GX
    _font_set                          **** GX
  1 _frames                            06BD GR
  1 _game_over                         06BF GR
  0 _generateNewXPosition              0E7E GR
  0 _getEnemySpriteIndex               0665 GR
  0 _getEnemySpriteIndexFast           0672 GR
  0 _getLaserSpriteIndexFast           0735 GR
    _gotoxy                            **** GX
  1 _health                            06C3 GR
  0 _hurtPlayer                        0D7F GR
  1 _ibm_font                          06B8 GR
  0 _initGame                          00CB GR
  0 _initTitleScreen                   002D GR
    _initrand                          **** GX
  1 _joy_status                        06BA GR
    _joypad                            **** GX
  0 _killEnemy                         0D25 GR
  1 _laser                             00C0 GR
  1 _lastKeys                          06BB GR
  1 _lastTimeShot                      06C2 GR
  1 _ls                                06F6 GR
  1 _lt                                0700 GR
  1 _lx                                06E2 GR
  1 _ly                                06EC GR
  0 _main                              0ECD GR
    _move_sprite                       **** GX
  1 _myBkgData                         0668 GR
  0 _overlap                           0CCA GR
    _printf                            **** GX
    _rand                              **** GX
  1 _randomBkgTiles                    070A GR
    _reset                             **** GX
  1 _score                             06BE GR
    _set_bkg_data                      **** GX
    _set_bkg_tiles                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setup                             0000 GR
  1 _ship                              0000 GR
  0 _shoot                             0C4B GR
  0 _shootSound                        0DEB GR
  0 _startSound                        0E4D GR
  1 _start_pressed                     06BC GR
  1 _tiledata                          0100 GR
  1 _tilemap                           0500 GR
  0 _updateEnemies                     07F8 GR
  0 _updateHUD                         0C18 GR
  0 _updateLaser                       0A5F GR
  0 _updatePlayer                      050F GR
  0 _updateTimers                      04E1 GR
  0 _updateTitleScreen                 00B6 GR
    _wait_vbl_done                     **** GX
  1 _x                                 06C0 GR
  1 _y                                 06C1 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  F8A   flags 0
   1 _DATA                              size  71E   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  477   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
